Функция НастройкиАвтоматическойПечатиВсе(Владелец, ВсеОбъектыМетаданных = Ложь) Экспорт
	
	ТаблицаНастроекПечати = Новый ТаблицаЗначений;
	
	ТипыОбъектМетаданных = Новый Массив;
	ТипыОбъектМетаданных.Добавить(Тип("СправочникСсылка.ИдентификаторыОбъектовМетаданных"));
	ТипыОбъектМетаданных.Добавить(Тип("СправочникСсылка.ИдентификаторыОбъектовРасширений"));
	ОписаниеТиповОбъектМетаданных = Новый ОписаниеТипов(ТипыОбъектМетаданных);
	
	ТипыВладелец = Новый Массив;
	ТипыВладелец.Добавить(Тип("СправочникСсылка.Контрагенты"));
	ТипыВладелец.Добавить(Тип("СправочникСсылка.ДоговорыКонтрагентов"));
	ТипыВладелец.Добавить(Тип("СправочникСсылка.НастройкиАвтоматическойПечатиБазовые"));
	ОписаниеТиповВладелец = Новый ОписаниеТипов(ТипыВладелец);
	
	ТаблицаНастроекПечати.Колонки.Добавить("ОбъектМетаданных", ОписаниеТиповОбъектМетаданных);
	ТаблицаНастроекПечати.Колонки.Добавить("Владелец"        , ОписаниеТиповВладелец);
	ТаблицаНастроекПечати.Колонки.Добавить("Унаследованы"    , Новый ОписаниеТипов(Тип("Булево")));
	ТаблицаНастроекПечати.Колонки.Добавить("КомандыПечати"   , Новый ОписаниеТипов(Тип("ТаблицаЗначений")));
	
	Если НЕ ТипЗнч(Владелец) = Тип("СправочникСсылка.Контрагенты") И 
		НЕ ТипЗнч(Владелец) = Тип("СправочникСсылка.ДоговорыКонтрагентов") тогда
		Возврат ТаблицаНастроекПечати;
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(Владелец) тогда
		Возврат ТаблицаНастроекПечати;
	КонецЕсли;
	
	СписокОбъектовМетаданных = СписокОбъектовМетаданных(ВсеОбъектыМетаданных);
	
	Для Каждого ЭлементСписка из СписокОбъектовМетаданных цикл
		ОбъектМетаданных = ЭлементСписка.Значение;
		НастройкиПечати = НастройкиАвтоматическойПечатиОбъектаМетаданных(Владелец, ОбъектМетаданных);
		
		Если НЕ НастройкиПечати.НастройкиПечати = Неопределено тогда
			НоваяСтрока = ТаблицаНастроекПечати.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, НастройкиПечати);
		КонецЕсли;
	КонецЦикла;
	
	Возврат ТаблицаНастроекПечати;
	
КонецФункции

Функция НастройкиАвтоматическойПечатиОбъектаМетаданных(Владелец, ОбъектМетаданных) Экспорт
	
	НастройкиПечати = ПустыеНастройкиАвтоматическойПечати();
	
	Если НЕ ТипЗнч(Владелец) = Тип("СправочникСсылка.Контрагенты") И 
		НЕ ТипЗнч(Владелец) = Тип("СправочникСсылка.ДоговорыКонтрагентов") И
		НЕ ТипЗнч(Владелец) = Тип("СправочникСсылка.НастройкиАвтоматическойПечатиБазовые") тогда
		Возврат НастройкиПечати;
	КонецЕсли;
	
	Если НЕ ТипЗнч(ОбъектМетаданных) = Тип("СправочникСсылка.ИдентификаторыОбъектовМетаданных") И
		НЕ ТипЗнч(ОбъектМетаданных) = Тип("СправочникСсылка.ИдентификаторыОбъектовРасширений") тогда
		Возврат НастройкиПечати;
	КонецЕсли;
		
	
	Если ТипЗнч(Владелец) = Тип("СправочникСсылка.НастройкиАвтоматическойПечатиБазовые") тогда
		Если НЕ ЗначениеЗаполнено(ОбъектМетаданных) тогда
			Возврат НастройкиПечати;
		КонецЕсли;
	Иначе
		Если НЕ ЗначениеЗаполнено(Владелец) ИЛИ НЕ ЗначениеЗаполнено(ОбъектМетаданных) тогда
			Возврат НастройкиПечати;
		КонецЕсли;
	КонецЕсли;
	
	Контрагент = Неопределено;
	Договор = Неопределено;
	
	Если ТипЗнч(Владелец) = Тип("СправочникСсылка.Контрагенты") тогда
		Если ЗначениеЗаполнено(Владелец) тогда
			Контрагент = Владелец;
		КонецЕсли;
	КонецЕсли;
	
	Если ТипЗнч(Владелец) = Тип("СправочникСсылка.ДоговорыКонтрагентов") тогда
		Если ЗначениеЗаполнено(Владелец) тогда
			Контрагент = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Владелец, "Владелец");
			Договор = Владелец;
		КонецЕсли;
	КонецЕсли;
	
	НастройкиПечати.ОбъектМетаданных = ОбъектМетаданных;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ОбъектМетаданных", ОбъектМетаданных);
	Запрос.УстановитьПараметр("Контрагент", Контрагент);
	Запрос.УстановитьПараметр("Договор", Договор);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	НастройкиАвтоматическойПечати.Ссылка.Владелец КАК Владелец,
	|	НастройкиАвтоматическойПечати.НомерСтроки КАК НомерСтроки,
	|	НастройкиАвтоматическойПечати.Имя КАК Имя,
	|	НастройкиАвтоматическойПечати.Представление КАК Представление,
	|	НастройкиАвтоматическойПечати.МенеджерПечати КАК МенеджерПечати,
	|	НастройкиАвтоматическойПечати.КоличествоКопий КАК КоличествоКопий
	|ИЗ
	|	Справочник.НастройкиАвтоматическойПечати.КомандыПечати КАК НастройкиАвтоматическойПечати
	|ГДЕ
	|	ВЫБОР
	|			КОГДА НЕ &Договор = НЕОПРЕДЕЛЕНО
	|				ТОГДА &Договор = НастройкиАвтоматическойПечати.Ссылка.Владелец
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ
	|	И НастройкиАвтоматическойПечати.Ссылка.ОбъектМетаданных = &ОбъектМетаданных
	|	И НастройкиАвтоматическойПечати.Ссылка.ПометкаУдаления = ЛОЖЬ
	|
	|СГРУППИРОВАТЬ ПО
	|	НастройкиАвтоматическойПечати.Имя,
	|	НастройкиАвтоматическойПечати.НомерСтроки,
	|	НастройкиАвтоматическойПечати.КоличествоКопий,
	|	НастройкиАвтоматическойПечати.Ссылка.Владелец,
	|	НастройкиАвтоматическойПечати.Представление,
	|	НастройкиАвтоматическойПечати.МенеджерПечати
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки,
	|	Имя
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	НастройкиАвтоматическойПечати.Ссылка.Владелец КАК Владелец,
	|	НастройкиАвтоматическойПечати.НомерСтроки КАК НомерСтроки,
	|	НастройкиАвтоматическойПечати.Имя КАК Имя,
	|	НастройкиАвтоматическойПечати.Представление КАК Представление,
	|	НастройкиАвтоматическойПечати.МенеджерПечати КАК МенеджерПечати,
	|	НастройкиАвтоматическойПечати.КоличествоКопий КАК КоличествоКопий
	|ИЗ
	|	Справочник.НастройкиАвтоматическойПечати.КомандыПечати КАК НастройкиАвтоматическойПечати
	|ГДЕ
	|	ВЫБОР
	|			КОГДА НЕ &Контрагент = НЕОПРЕДЕЛЕНО
	|				ТОГДА &Контрагент = НастройкиАвтоматическойПечати.Ссылка.Владелец
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ
	|	И НастройкиАвтоматическойПечати.Ссылка.ОбъектМетаданных = &ОбъектМетаданных
	|	И НастройкиАвтоматическойПечати.Ссылка.ПометкаУдаления = ЛОЖЬ
	|
	|СГРУППИРОВАТЬ ПО
	|	НастройкиАвтоматическойПечати.Имя,
	|	НастройкиАвтоматическойПечати.НомерСтроки,
	|	НастройкиАвтоматическойПечати.КоличествоКопий,
	|	НастройкиАвтоматическойПечати.Ссылка.Владелец,
	|	НастройкиАвтоматическойПечати.Представление,
	|	НастройкиАвтоматическойПечати.МенеджерПечати
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки,
	|	Имя
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	НастройкиАвтоматическойПечатиБазовыеКомандыПечати.Ссылка КАК Владелец,
	|	НастройкиАвтоматическойПечатиБазовыеКомандыПечати.НомерСтроки КАК НомерСтроки,
	|	НастройкиАвтоматическойПечатиБазовыеКомандыПечати.Имя КАК Имя,
	|	НастройкиАвтоматическойПечатиБазовыеКомандыПечати.Представление КАК Представление,
	|	НастройкиАвтоматическойПечатиБазовыеКомандыПечати.МенеджерПечати КАК МенеджерПечати,
	|	НастройкиАвтоматическойПечатиБазовыеКомандыПечати.КоличествоКопий КАК КоличествоКопий
	|ИЗ
	|	Справочник.НастройкиАвтоматическойПечатиБазовые.КомандыПечати КАК НастройкиАвтоматическойПечатиБазовыеКомандыПечати
	|ГДЕ
	|	НастройкиАвтоматическойПечатиБазовыеКомандыПечати.Ссылка.ОбъектМетаданных = &ОбъектМетаданных
	|
	|СГРУППИРОВАТЬ ПО
	|	НастройкиАвтоматическойПечатиБазовыеКомандыПечати.Представление,
	|	НастройкиАвтоматическойПечатиБазовыеКомандыПечати.Ссылка,
	|	НастройкиАвтоматическойПечатиБазовыеКомандыПечати.МенеджерПечати,
	|	НастройкиАвтоматическойПечатиБазовыеКомандыПечати.Имя,
	|	НастройкиАвтоматическойПечатиБазовыеКомандыПечати.КоличествоКопий,
	|	НастройкиАвтоматическойПечатиБазовыеКомандыПечати.НомерСтроки
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки,
	|	Имя";
	
	ПакетЗапроса = Запрос.ВыполнитьПакет();
	
	Для Каждого РезультатЗапроса из ПакетЗапроса цикл
		
		КомандыПечати = РезультатЗапроса.Выгрузить();
		
		Если КомандыПечати.Количество() > 0 тогда
			НастройкиПечати.Владелец = КомандыПечати.Получить(0).Владелец;
			НастройкиПечати.КомандыПечати = ОбщегоНазначения.ТаблицаЗначенийВМассив(КомандыПечати);
			
			Если НастройкиПечати.Владелец <> Владелец тогда
				НастройкиПечати.Унаследованы = Истина;
			КонецЕсли;
			
			Прервать;
			
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат НастройкиПечати;
	
КонецФункции

Функция ПустыеНастройкиАвтоматическойПечати()
	
	ПустыеНастройки = Новый Структура;
	
	ПустыеНастройки.Вставить("ОбъектМетаданных", Неопределено); // ИдентификаторыМетаданных, и расширения
	ПустыеНастройки.Вставить("Владелец"        , Неопределено); // Контрагенты, ДоговораКонтрагентов, НастройкиАвтоматическойпечатиБазовые
	ПустыеНастройки.Вставить("Унаследованы"    , Ложь);         // Булево
	ПустыеНастройки.Вставить("КомандыПечати"   , Неопределено); // Таблица значений
	
	Возврат ПустыеНастройки;
	
КонецФункции

Функция СписокКомандПечатиОбъекта(Знач ОбъектМетаданных) Экспорт
	
	СписокКоманд = Новый СписокЗначений;
	
	
	Если ТипЗнч(ОбъектМетаданных) = Тип("СправочникСсылка.ИдентификаторыОбъектовМетаданных") ИЛИ
		ТипЗнч(ОбъектМетаданных) = Тип("СправочникСсылка.ИдентификаторыОбъектовРасширений") тогда
		
		ПолноеИмя = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ОбъектМетаданных, "ПолноеИмя");
		МассивСтрок = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(ПолноеИмя,".");
		
		ВидОбъекта = МассивСтрок.Получить(0);
		ИмяОбъекта = МассивСтрок.Получить(1);
		
		ОбъектМетаданных = Метаданные[?(ВидОбъекта = "Документ", "Документы", "Справочники")][ИмяОбъекта];
		
	ИначеЕсли ТипЗнч(ОбъектМетаданных) <> Тип("ОбъектМетаданных") Тогда
		Возврат СписокКоманд;
	КонецЕсли;
	
	// Формирования состава печатных форм
	КомандыПечати = УправлениеПечатью.КомандыПечатиОбъекта(ОбъектМетаданных);
	
	Для Каждого КомандаПечати Из КомандыПечати Цикл
		
		Если КомандаПечати.ДополнительныеПараметры.Свойство("НеВыводитьВКомплекте") Тогда
			Продолжить;
		КонецЕсли;
		
		Если КомандаПечати.СкрытаФункциональнымиОпциями Тогда
			Продолжить;
		КонецЕсли;
		
		НовыйЭлемент = СписокКоманд.Добавить();
		ПараметрыПечатнойФормы = Новый Структура("Имя,
		                                         |Представление,
		                                         |МенеджерПечати");
		
		Если КомандаПечати.ДополнительныеПараметры.Свойство("ИдентификаторВКомплекте") Тогда
			ПараметрыПечатнойФормы.Имя = КомандаПечати.ДополнительныеПараметры.ИдентификаторВКомплекте;
		Иначе
			ПараметрыПечатнойФормы.Имя = КомандаПечати.Идентификатор;
		КонецЕсли;
		
		ПараметрыПечатнойФормы.МенеджерПечати = КомандаПечати.МенеджерПечати;
		ПараметрыПечатнойФормы.Представление = КомандаПечати.Представление;
		
		НовыйЭлемент.Представление = ПараметрыПечатнойФормы.Представление;
		НовыйЭлемент.Значение = ПараметрыПечатнойФормы;
		
	КонецЦикла;
	
	Возврат СписокКоманд;
	
КонецФункции

Функция СписокОбъектовМетаданных(ВсеОбъектыМетаданных = Ложь) Экспорт
	
	Список = Новый СписокЗначений;
	
	// Объекты метаданные для владельцев настроек
	Список.Добавить(Справочники.ИдентификаторыОбъектовМетаданных.НайтиПоРеквизиту("ПолноеИмя", "Документ.РеализацияТоваровУслуг"));
	
	// Объекты метаданные только для базовых настроек
	Если ВсеОбъектыМетаданных тогда
		Список.Добавить(Справочники.ИдентификаторыОбъектовРасширений.НайтиПоРеквизиту("ПолноеИмя", "Документ.МаршрутныйЛист"));
		Список.Добавить(Справочники.ИдентификаторыОбъектовРасширений.НайтиПоРеквизиту("ПолноеИмя", "Документ.ДвижениеМногооборотнойТары"));
	КонецЕсли;
	
	Возврат Список;
	
КонецФункции

Функция НайтиОбъектМетаданныхПоСсылке(Ссылка) Экспорт
	
	МетаданныеОбъекта = Ссылка.Метаданные();
	МетаданныеОбъектаИмя = МетаданныеОбъекта.Имя;
	МетаданныеОбъектаВид = "";
	
	Если НЕ Метаданные.Документы.Найти(МетаданныеОбъектаИмя) = Неопределено тогда
		МетаданныеОбъектаВид = "Документ";
	КонецЕсли;
	Если НЕ Метаданные.Справочники.Найти(МетаданныеОбъектаИмя) = Неопределено тогда
		МетаданныеОбъектаВид = "Справочник";
	КонецЕсли;
	
	ОбъектМетаданных = Справочники.ИдентификаторыОбъектовМетаданных.НайтиПоРеквизиту("ПолноеИмя", МетаданныеОбъектаВид + "." + МетаданныеОбъектаИмя);
	
	Если НЕ ЗначениеЗаполнено(ОбъектМетаданных) тогда
		ОбъектМетаданных = Справочники.ИдентификаторыОбъектовРасширений.НайтиПоРеквизиту("ПолноеИмя", МетаданныеОбъектаВид + "." + МетаданныеОбъектаИмя);
	КонецЕсли;
	
	Возврат ОбъектМетаданных;
	
КонецФункции