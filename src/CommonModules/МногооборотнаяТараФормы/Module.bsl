////////////////////////////////////////////////////////////////////////////////
// МногооборотнаяТараСервер: серверные процедуры и функции, вызываемые из формы
// документа "ДвижениеМногооборотнойТары".
//  
////////////////////////////////////////////////////////////////////////////////

Процедура ПриСозданииНаСервере(Форма, Отказ, СтандартнаяОбработка) Экспорт

	Элементы 	= Форма.Элементы;
	Объект		= Форма.Объект;
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКоманды.ПриСозданииНаСервере(Форма);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	// СтандартныеПодсистемы.ВерсионированиеОбъектов
	ВерсионированиеОбъектов.ПриСозданииНаСервере(Форма);
	// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов
	
	Если НЕ ЗначениеЗаполнено(Объект.Ссылка)
		И Форма.Параметры.Свойство("ЗначенияЗаполнения") Тогда
		
		Если Форма.Параметры.ЗначенияЗаполнения.Свойство("ВидОперации") тогда
			Форма.Объект.ВидОперации = Форма.Параметры.ЗначенияЗаполнения.ВидОперации;
		КонецЕсли;
		
		УстановитьЗаголовокФормыНаСервере(Форма);
		
	КонецЕсли;
	
	ВидНоменклатурыТары = ПредопределенныеЭлементыРасширенияСервер.ПредопределенноеЗначениеРасширения("Справочник", "ВидыНоменклатуры", "МногооборотнаяТара");
	
	ПараметрыВыбораМногооборотнаяТара = Новый Массив();
	ПараметрыВыбораМногооборотнаяТара.Добавить(Новый ПараметрВыбора("Отбор.ВидНоменклатуры", ВидНоменклатурыТары));
	
	НовыеПараметрыВыбораМногооборотнаяТара = Новый ФиксированныйМассив(ПараметрыВыбораМногооборотнаяТара);
	
	Элементы.НаВодителяМногооборотнаяТара.ПараметрыВыбора     = НовыеПараметрыВыбораМногооборотнаяТара;
	Элементы.ГрузополучателиМногооборотнаяТара.ПараметрыВыбора = НовыеПараметрыВыбораМногооборотнаяТара;
	
	МассивТипов = Новый Массив;
	Если Объект.ВидОперации = ПредопределенноеЗначение("Перечисление.Базар_ВидыДвиженийМногооборотнойТары.ВозвратПоставщику") тогда
		МассивТипов.Добавить(Тип("ДокументСсылка.ПоступлениеТоваровУслуг"));
	Иначе
		МассивТипов.Добавить(Тип("ДокументСсылка.МаршрутныйЛист"));
	КонецЕсли;
	ОписаниеТипа = Новый ОписаниеТипов(МассивТипов);

	Элементы.ДокументОснование.ОграничениеТипа = ОписаниеТипа;
	Объект.ДокументОснование = ОписаниеТипа.ПривестиЗначение(Объект.ДокументОснование);
	
КонецПроцедуры

Процедура ПриОткрытииНаСервере(Форма, Отказ) Экспорт
	
	Элементы 	= Форма.Элементы;
	Объект		= Форма.Объект;
	
	Форма.Организация = Справочники.Организации.ОрганизацияПоУмолчанию();
	Форма.ИспользуетсяНесколькоОрганизаций = Справочники.Организации.ИспользуетсяНесколькоОрганизаций();
	
	ВидНоменклатурыТары = ПредопределенныеЭлементыРасширенияСервер.ПредопределенноеЗначениеРасширения("Справочник", "ВидыНоменклатуры", "МногооборотнаяТара");
	ЭлементыМногооборотнойТары = МногооборотнаяТараСервер.СуществующиеЭлементыМногооборотнойТары();
	
	Если ЭлементыМногооборотнойТары.Количество() = 0 тогда
		ТекстПредупреждения = "Перед началом ввода документа """ +
		                       Строка(Объект.ВидОперации) +
		                       """, введите хотя бы один элемент справочника номенклатура с видом номенклатуры " +
		                       Строка(ВидНоменклатурыТары) + ", у которого имееются введенные количество места.";
		ОбщегоНазначения.СообщитьПользователю(ТекстПредупреждения);
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
	Элементы.ГрузополучателиОрганизация.Видимость = Форма.ИспользуетсяНесколькоОрганизаций;
	Элементы.НаВодителяОрганизация.Видимость      = Форма.ИспользуетсяНесколькоОрганизаций;
	
	УстановитьЗаголовокФормыНаСервере(Форма);
	
	Форма.ОбновитьНадписиНаФормеНаСервере();
	
КонецПроцедуры

Процедура ПриЧтенииНаСервере(Форма, ТекущийОбъект) Экспорт
	
	Объект = Форма.Объект;
	
	// СтандартныеПодсистемы.УправлениеДоступом
	Если ОбщегоНазначения.ПодсистемаСуществует("СтандартныеПодсистемы.УправлениеДоступом") Тогда
		МодульУправлениеДоступом = ОбщегоНазначения.ОбщийМодуль("УправлениеДоступом");
		МодульУправлениеДоступом.ПриЧтенииНаСервере(Форма, ТекущийОбъект);
	КонецЕсли;
	// Конец СтандартныеПодсистемы.УправлениеДоступом
	
	// СтандартныеПодсистемы.ДатыЗапретаИзменения
	ДатыЗапретаИзменения.ОбъектПриЧтенииНаСервере(Форма, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.ДатыЗапретаИзменения
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(Форма, Объект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

Процедура ПриЗаписиНаСервере(Форма, Отказ, ТекущийОбъект, ПараметрыЗаписи) Экспорт
	
	// СтандартныеПодсистемы.УправлениеДоступом
	УправлениеДоступом.ПослеЗаписиНаСервере(Форма.Объект, ТекущийОбъект, ПараметрыЗаписи);
	// Конец СтандартныеПодсистемы.УправлениеДоступом
	
КонецПроцедуры

Процедура УстановитьЗаголовокФормыНаСервере(Форма) Экспорт
	
	Объект = Форма.Объект;

	Форма.Заголовок = "";
	ТекстЗаголовка	= НСтр("ru = '"+ Строка(Объект.ВидОперации)+"'");
	
	Если ЗначениеЗаполнено(Объект.Ссылка) Тогда
		ТекстЗаголовка = ТекстЗаголовка + СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru=' %1 от %2'"), Объект.Номер, Объект.Дата);
	Иначе
		ТекстЗаголовка = ТекстЗаголовка + " (создание)";
	КонецЕсли;
	
	Форма.Заголовок = ТекстЗаголовка;

КонецПроцедуры
