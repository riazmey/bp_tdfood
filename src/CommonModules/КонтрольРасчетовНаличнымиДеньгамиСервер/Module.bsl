Процедура КонтрольРасчетовНаличнымиДеньгами(Объект, Договор, СуммаОборота, Отказ) Экспорт
	
	ДокументСсылка = Объект.Ссылка;
	ДанныеОборотов = ДанныеОборотовПоДоговоруНаличнойОплаты(Договор, ДокументСсылка, Объект.Дата);
	
	Если ЗначениеЗаполнено(ДанныеОборотов.Договор) тогда
	
		Если ТипЗнч(ДокументСсылка) = Тип("ДокументСсылка.РеализацияТоваровУслуг")
		 ИЛИ ТипЗнч(ДокументСсылка) = Тип("ДокументСсылка.СчетНаОплатуПокупателю") тогда
			
			Если СуммаОборота + ДанныеОборотов.СуммаОтгружено > ДанныеОборотов.МаксимальнаяСуммаРасчетаНаличкой тогда
				
				ОстатокСуммыКОтгрузке = ДанныеОборотов.МаксимальнаяСуммаРасчетаНаличкой - ДанныеОборотов.СуммаОтгружено;
				
				ТекстСообщения = "Превышение масимальной суммы расчетов наличными деньгами!" + 
					" Остаток суммы к отгрузке: " +
					Формат(ОстатокСуммыКОтгрузке,"ЧЦ=15; ЧДЦ=2") + " руб." +
					" из возможных " + 
					Формат(ДанныеОборотов.МаксимальнаяСуммаРасчетаНаличкой,"ЧЦ=15; ЧДЦ=2") + " руб.";
				
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
					ТекстСообщения, ,
					"Объект.ДоговорКонтрагента",
					"",
					Отказ
				);
				
			КонецЕсли;
			
		ИначеЕсли ТипЗнч(ДокументСсылка) = Тип("ДокументСсылка.ПриходныйКассовыйОрдер") Тогда
			
			Если СуммаОборота + ДанныеОборотов.СуммаПоступлениеДенег > ДанныеОборотов.МаксимальнаяСуммаРасчетаНаличкой тогда
				
				ОстатокСуммыКОплате = ДанныеОборотов.МаксимальнаяСуммаРасчетаНаличкой - ДанныеОборотов.СуммаПоступлениеДенег;
				
				ТекстСообщения = "Превышение масимальной суммы расчетов наличными деньгами!" + 
					" Остаток суммы к оплате: " +
					Формат(ОстатокСуммыКОплате,"ЧЦ=15; ЧДЦ=2") + " руб." +
					" из возможных " + 
					Формат(ДанныеОборотов.МаксимальнаяСуммаРасчетаНаличкой,"ЧЦ=15; ЧДЦ=2") + " руб.";
				
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
					ТекстСообщения, ,
					"РасшифровкаПлатежаДоговорКонтрагента",
					"",
					Отказ
				);
				
			КонецЕсли;
			
		ИначеЕсли ТипЗнч(ДокументСсылка) = Тип("ДокументСсылка.ПоступлениеНаРасчетныйСчет")
			  ИЛИ ТипЗнч(ДокументСсылка) = Тип("ДокументСсылка.СписаниеСРасчетногоСчета") тогда
			
			ТекстСообщения = "Нарушение контроля суммы расчетов наличными деньгами!" + 
				" По выбранному договору нельзя проводить безналичные расчеты!";
			
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
				ТекстСообщения, ,
				"РасшифровкаПлатежаДоговорКонтрагента",
				"",
				Отказ
			);
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

Функция ДанныеОборотовПоДоговоруНаличнойОплаты(Договор, Ссылка, ДатаРасчета)
	
	Результат = Новый Структура(
		"Ссылка,
		|ДатаРасчета,
		|Договор,
		|СуммаОтгружено,
		|СуммаПоступлениеДенег,
		|МаксимальнаяСуммаРасчетаНаличкой",
		Неопределено,
		Неопределено,
		0,
		0,
		0
	);
	
	Если НЕ ЗначениеЗаполнено(Договор) тогда
		Возврат Результат;
	КонецЕсли;
	
	Если НЕ ТипЗнч(Договор) = Тип("СправочникСсылка.ДоговорыКонтрагентов") тогда
		Возврат Результат;
	КонецЕсли;
	
	Если НЕ Договор.ОплатаЗаНаличныйРасчет тогда
		Возврат Результат;
	КонецЕсли;
	
	Результат.Договор = Договор;
	
	Если НЕ ЗначениеЗаполнено(ДатаРасчета) тогда
		ДатаРасчета = ТекущаяДата();
	КонецЕсли;
	
	Результат.Ссылка = Ссылка;
	Результат.ДатаРасчета = ДатаРасчета;
	
	СистемныеНастройки = ОбщегоНазначенияБазарСервер.СистемныеНастройкиБазар(ДатаРасчета);
	
	Если НЕ ЗначениеЗаполнено(СистемныеНастройки.МаксимальнаяСуммаРасчетаНаличкой) тогда
		Возврат Результат;
	КонецЕсли;
	
	Результат.МаксимальнаяСуммаРасчетаНаличкой = СистемныеНастройки.МаксимальнаяСуммаРасчетаНаличкой;
	
	СчетаУчетаИВидыСубконто = СчетаУчетаИВидыСубконто();
	
	Запрос = Новый Запрос;
	
	Для Каждого КлючИЗначение из СчетаУчетаИВидыСубконто цикл
		Запрос.УстановитьПараметр(КлючИЗначение.Ключ, КлючИЗначение.Значение);
	КонецЦикла;
	
	Для Каждого КлючИЗначение из Результат цикл
		Если ЗначениеЗаполнено(КлючИЗначение.Значение) тогда
			Запрос.УстановитьПараметр(КлючИЗначение.Ключ, КлючИЗначение.Значение);
		КонецЕсли;
	КонецЦикла;
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Касса.Субконто1 КАК Договор,
	|	СУММА(0) КАК СуммаОтгружено,
	|	СУММА(Касса.СуммаОборотКт) КАК СуммаПоступлениеДенег
	|ПОМЕСТИТЬ ВТ_Промежуточная
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Обороты(, &ДатаРасчета, Регистратор, Счет В (&СчетаРасчетов), &ВидыСубконтоРасчетов, Субконто1 = &Договор, КорСчет В (&СчетаКасса), &ВидыСубконтоКасса) КАК Касса
	|ГДЕ
	|	ВЫБОР
	|			КОГДА НЕ &Ссылка = НЕОПРЕДЕЛЕНО
	|				ТОГДА НЕ Касса.Регистратор = &Ссылка
	|			ИНАЧЕ ИСТИНА
	|		КОНЕЦ
	|
	|СГРУППИРОВАТЬ ПО
	|	Касса.Субконто1
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	РасчетыСПокупателями.Субконто1,
	|	СУММА(РасчетыСПокупателями.СуммаОборотДт),
	|	СУММА(0)
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Обороты(, &ДатаРасчета, Регистратор, Счет В (&СчетаРасчетов), &ВидыСубконтоРасчетов, Субконто1 = &Договор, , ) КАК РасчетыСПокупателями
	|ГДЕ
	|	ВЫБОР
	|			КОГДА НЕ &Ссылка = НЕОПРЕДЕЛЕНО
	|				ТОГДА НЕ РасчетыСПокупателями.Регистратор = &Ссылка
	|			ИНАЧЕ ИСТИНА
	|		КОНЕЦ
	|
	|СГРУППИРОВАТЬ ПО
	|	РасчетыСПокупателями.Субконто1
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_Промежуточная.Договор КАК Договор,
	|	СУММА(ВТ_Промежуточная.СуммаОтгружено) КАК СуммаОтгружено,
	|	СУММА(ВТ_Промежуточная.СуммаПоступлениеДенег) КАК СуммаПоступлениеДенег
	|ИЗ
	|	ВТ_Промежуточная КАК ВТ_Промежуточная
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТ_Промежуточная.Договор";
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если Выборка.Следующий() тогда
		ЗаполнитьЗначенияСвойств(Результат, Выборка);
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

Функция СчетаУчетаИВидыСубконто()
	
	Результат = Новый Структура(
		"СчетаРасчетов,
		|СчетаКасса,
		|ВидыСубконтоРасчетов,
		|ВидыСубконтоКасса"
	);
	
	Результат.СчетаРасчетов = Новый Массив;
	Результат.СчетаРасчетов.Добавить(ПланыСчетов.Хозрасчетный.РасчетыСПокупателями);
	Результат.СчетаРасчетов.Добавить(ПланыСчетов.Хозрасчетный.РасчетыПоАвансамПолученным);
	
	Результат.СчетаКасса = Новый Массив;
	Результат.СчетаКасса.Добавить(ПланыСчетов.Хозрасчетный.КассаОрганизации);
	
	Результат.ВидыСубконтоРасчетов = Новый Массив;
	Результат.ВидыСубконтоРасчетов.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Договоры);
	
	Результат.ВидыСубконтоКасса = Новый Массив;
	Результат.ВидыСубконтоКасса.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.СтатьиДвиженияДенежныхСредств);
	
	Возврат Результат;
	
КонецФункции