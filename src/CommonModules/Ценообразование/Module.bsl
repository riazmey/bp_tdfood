Функция ЦенаНоменклатуры(ВидЦен, НаДату, Номенклатура, Контрагент = Неопределено) Экспорт
	
	Отказ = Ложь;
	Запрос = Новый Запрос;
	
	Если НЕ ЗначениеЗаполнено(ВидЦен) ИЛИ
		 НЕ ЗначениеЗаполнено(НаДату) ИЛИ 
		 НЕ ЗначениеЗаполнено(Номенклатура) Тогда
		Возврат 0;
	КонецЕсли;
	
	МассивНоменклатуры = Новый Массив;
	МассивНоменклатуры.Добавить(Номенклатура);
	
	Запрос.УстановитьПараметр("Дата", НаДату);
	Запрос.УстановитьПараметр("МассивНоменклатуры", МассивНоменклатуры);
	
	Если ВидЦен = "ПрошлаяПродажа" тогда
		Если НЕ ЗначениеЗаполнено(Контрагент) тогда
			Возврат 0;
		КонецЕсли;
		Запрос.УстановитьПараметр("Контрагент", Контрагент);
		
	ИначеЕсли ВидЦен = "Закупочная" ИЛИ ВидЦен = "Продажа" ИЛИ ВидЦен = "Розница" тогда
		
		СистемныеНастройкиБазар = ОбщегоНазначенияБазарСервер.СистемныеНастройкиБазар(НаДату);
		
		Если ВидЦен = "Закупочная" тогда
			ТипЦенНастроек = "ТипЦенСебестоимость";
		ИначеЕсли ВидЦен = "Продажа" тогда
			ТипЦенНастроек = "ТипЦенПродажи";
		ИначеЕсли ВидЦен = "Розница" тогда
			ТипЦенНастроек = "ТипЦенРозницы";
		КонецЕсли;
		
		Если НЕ ЗначениеЗаполнено(СистемныеНастройкиБазар[ТипЦенНастроек]) тогда
			Возврат 0;
		КонецЕсли;
		
		Запрос.УстановитьПараметр("ТипЦен", СистемныеНастройкиБазар[ТипЦенНастроек]);
		
	Иначе
		Возврат 0;
		
	КонецЕсли;
	
	УстановитьТекстЗапросаПолученияЦены(ВидЦен, Запрос, Отказ);
	
	Если Отказ тогда
		Возврат 0;
	КонецЕсли;
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если РезультатЗапроса.Пустой() тогда
		Возврат 0;
	КонецЕсли;
	
	Выборка = РезультатЗапроса.Выбрать();
	Выборка.Следующий();
	
	Возврат Выборка.Цена;
	
КонецФункции

Процедура ОбновитьЦеныВТаблицеДокумента(Объект, ИмяТаблицы, ИмяПоля, ВидЦен) Экспорт
	
	Отказ = Ложь;
	Запрос = Новый Запрос;
	
	УстановитьПараметрыЗапросаПолученияЦены(Объект, ИмяТаблицы, ИмяПоля, ВидЦен, Запрос, Отказ);
	УстановитьТекстЗапросаПолученияЦены(ВидЦен, Запрос, Отказ);
	
	Если Отказ тогда
		Возврат;
	КонецЕсли;
	
	// Очистим все значения прошлых цен
	Для Каждого СтрокаТовары из Объект[ИмяТаблицы] цикл
		СтрокаТовары[ИмяПоля] = 0;
	КонецЦикла;
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() цикл
		
		ОтборыСтрок = Новый Структура;
		ОтборыСтрок.Вставить("Номенклатура", Выборка.Номенклатура);
		
		НайденыеСтроки = Объект[ИмяТаблицы].НайтиСтроки(ОтборыСтрок);
		
		Если НайденыеСтроки.Количество() = 0 тогда
			Продолжить;
		КонецЕсли;
		
		Для Каждого СтрокаТаблицы из НайденыеСтроки Цикл
			СтрокаТаблицы[ИмяПоля] = Выборка.Цена;
		КонецЦикла;
		
	КонецЦикла;
	
КонецПроцедуры

Процедура УстановитьТекстЗапросаПолученияЦены(ВидЦен, Запрос, Отказ)
	
	Если НЕ ЗначениеЗаполнено(ВидЦен) Тогда
		
		Отказ = Истина;
		Возврат;
		
	КонецЕсли;
	
	Если ВидЦен = "ПрошлаяПродажа" тогда
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	Базар_ЦеныПродажКонтрагентовСрезПоследних.Номенклатура КАК Номенклатура,
		|	Базар_ЦеныПродажКонтрагентовСрезПоследних.Цена КАК Цена
		|ИЗ
		|	РегистрСведений.Базар_ЦеныПродажКонтрагентов.СрезПоследних(
		|			&Дата,
		|			Номенклатура В (&МассивНоменклатуры)
		|				И Контрагент = &Контрагент) КАК Базар_ЦеныПродажКонтрагентовСрезПоследних
		|
		|СГРУППИРОВАТЬ ПО
		|	Базар_ЦеныПродажКонтрагентовСрезПоследних.Номенклатура,
		|	Базар_ЦеныПродажКонтрагентовСрезПоследних.Цена";
		
	Иначе
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	ЦеныНоменклатурыСрезПоследних.Номенклатура КАК Номенклатура,
		|	ЦеныНоменклатурыСрезПоследних.Цена КАК Цена
		|ИЗ
		|	РегистрСведений.ЦеныНоменклатуры.СрезПоследних(
		|			&Дата,
		|			ТипЦен = &ТипЦен
		|				И Номенклатура В (&МассивНоменклатуры)) КАК ЦеныНоменклатурыСрезПоследних
		|
		|СГРУППИРОВАТЬ ПО
		|	ЦеныНоменклатурыСрезПоследних.Номенклатура,
		|	ЦеныНоменклатурыСрезПоследних.Цена";
		
	КонецЕсли;
	
	Если ПустаяСтрока( Запрос.Текст) тогда
		
		Отказ = Истина;
		Возврат;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура УстановитьПараметрыЗапросаПолученияЦены(Объект, ИмяТаблицы, ИмяПоля, ВидЦен, Запрос, Отказ)
	
	Если НЕ ЗначениеЗаполнено(ИмяТаблицы) ИЛИ
		 НЕ ЗначениеЗаполнено(ИмяПоля) Тогда
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
	Если НЕ Объект.Свойство(ИмяТаблицы) тогда
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
	Если Объект[ИмяТаблицы].Количество() = 0 тогда
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
	Запрос.УстановитьПараметр("Дата", Объект.Дата);
	Запрос.УстановитьПараметр("МассивНоменклатуры", Объект[ИмяТаблицы].Выгрузить(, "Номенклатура").ВыгрузитьКолонку("Номенклатура"));
	
	Если ВидЦен = "ПрошлаяПродажа" тогда
		Запрос.УстановитьПараметр("Контрагент", Объект.Контрагент);
		
	ИначеЕсли ВидЦен = "Закупочная" ИЛИ ВидЦен = "Продажа" тогда
		
		СистемныеНастройкиБазар = ОбщегоНазначенияБазарСервер.СистемныеНастройкиБазар(Объект.Дата);
		
		Если ВидЦен = "Закупочная" тогда
			ТипЦенНастроек = "ТипЦенСебестоимость";
		Иначе
			ТипЦенНастроек = "ТипЦенПродажи";
		КонецЕсли;
		
		Если НЕ ЗначениеЗаполнено(СистемныеНастройкиБазар[ТипЦенНастроек]) тогда
			Отказ = Истина;
			Возврат;
		КонецЕсли;
		
		Запрос.УстановитьПараметр("ТипЦен", СистемныеНастройкиБазар[ТипЦенНастроек]);
		
	Иначе
		Отказ = Истина;
		Возврат;
		
	КонецЕсли;
	
КонецПроцедуры

Функция НайтиУстановкиЦенНоменклатуры(ДокументОснование, ТипЦен = Неопределено) Экспорт
	
	Если Не ЗначениеЗаполнено(ДокументОснование) тогда
		Возврат Неопределено;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ТипЦен) тогда
		ТипЦенЗапроса = ТипЦен;
	Иначе
		ТипЦенЗапроса = Справочники.ТипыЦенНоменклатуры.ПустаяСсылка();
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ДокументОснование", ДокументОснование);
	Запрос.УстановитьПараметр("ТипЦен", ТипЦенЗапроса);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	УстановкаЦенНоменклатуры.Ссылка КАК Ссылка,
	|	УстановкаЦенНоменклатуры.ПометкаУдаления КАК ПометкаУдаления,
	|	УстановкаЦенНоменклатуры.Проведен КАК Проведен
	|ИЗ
	|	Документ.УстановкаЦенНоменклатуры КАК УстановкаЦенНоменклатуры
	|ГДЕ
	|	УстановкаЦенНоменклатуры.ДокументОснование = &ДокументОснование
	|	И ВЫБОР
	|			КОГДА &ТипЦен = ЗНАЧЕНИЕ(Справочник.ТипыЦенНоменклатуры.ПустаяСсылка)
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ УстановкаЦенНоменклатуры.ТипЦен = &ТипЦен
	|		КОНЕЦ
	|
	|УПОРЯДОЧИТЬ ПО
	|	Проведен УБЫВ,
	|	ПометкаУдаления";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если РезультатЗапроса.Пустой() тогда
		Возврат Неопределено;
	Иначе
		Возврат РезультатЗапроса.Выгрузить().ВыгрузитьКолонку("Ссылка");
	КонецЕсли;
	
КонецФункции

Процедура КонтрольЦенПродажи(Объект, ИмяТаблицы, ИмяПоля, ВидЦен, Отказ) Экспорт
	
	Запрос = Новый Запрос;
	
	СистемныеНастройки = ОбщегоНазначенияБазарСервер.СистемныеНастройкиБазар(Объект.Дата);
	
	УстановитьПараметрыЗапросаПолученияЦены(Объект, ИмяТаблицы, ИмяПоля, ВидЦен, Запрос, Отказ);
	УстановитьТекстЗапросаПолученияЦены(ВидЦен, Запрос, Отказ);
	
	ТаблицаЦен = Запрос.Выполнить().Выгрузить();
	
	Для Каждого СтрокаТаблицы из Объект[ИмяТаблицы] цикл
		ОтборыСтрок = Новый Структура;
		ОтборыСтрок.Вставить("Номенклатура", СтрокаТаблицы[ИмяПоля]);
		
		НайденыеСтроки = ТаблицаЦен.НайтиСтроки(ОтборыСтрок);
		
		Если НайденыеСтроки.Количество() = 0 тогда
			Продолжить;
		КонецЕсли;
		
		Для Каждого СтрокаЦены из НайденыеСтроки Цикл
			
			Если СтрокаТаблицы.Цена < СтрокаЦены.Цена тогда
				
				ТекстСообщения = "Цена на товар " + СтрокаТаблицы[ИмяПоля] + ", не должна быть ниже " + Формат(СтрокаЦены.Цена,"ЧЦ=15; ЧДЦ=2") + " руб.";
				Поле = "Объект."+ИмяТаблицы+"[" + Строка(СтрокаТаблицы.НомерСтроки - 1) + "].Цена";
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, ,Поле, "", Отказ);
				
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЦикла;
	
КонецПроцедуры