#Область ПроведениеГосЗакупки

Процедура ОбработкаПроведенияГосЗакупки(Объект, СписокОшибокПриПроведении, Отказ) Экспорт
	
	Если Отказ тогда
		Возврат;
	КонецЕсли;
	
	ПараметрыПроведения = ПодготовитьПараметрыПроведенияДокументов(Объект);
	ПараметрыПроведения = ПодготовитьПараметрыЗапросаДляТаблицыНоменклатурыГосЗакупок(ПараметрыПроведения);
	
	ТаблицаТовары = ПодготовитьТаблицуТовары(ПараметрыПроведения);
	Если ТаблицаТовары = Неопределено тогда
		Возврат;
	КонецЕсли;
	
	ЭтоГрупповоеПерепроведение = ПроведениеСервер.ГрупповоеПерепроведение(Объект);
	
	ПараметрыПроведения.Вставить("ТаблицаТовары", ТаблицаТовары);
	
	Если НЕ ЭтоГрупповоеПерепроведение тогда
		
		ПараметрыПроведения.Вставить("ТаблицаНеОтгруженныхЗаказовНаДень", ПодготовитьТаблицуНеОтгруженныхЗаказовНаДень(ПараметрыПроведения));
		
		Если НЕ ТипЗнч(ПараметрыПроведения.Ссылка) = Тип("ДокументСсылка.СчетНаОплатуПокупателю") Тогда
			КонтрольОстатковТоварыБухУчет(ПараметрыПроведения, СписокОшибокПриПроведении, Отказ);
		КонецЕсли;
		
	КонецЕсли;
	
	Если ЭтоДоговорПоставкиГосЗакупок(Объект.ДоговорКонтрагента) тогда
		
		Если НЕ ЭтоГрупповоеПерепроведение тогда
			КонтрольОстатковТоварыГосЗакупок(ПараметрыПроведения, СписокОшибокПриПроведении, Отказ);
		КонецЕсли;
		
		ДвиженияТоварыГосЗакупок(ПараметрыПроведения, Отказ);
	КонецЕсли;
	
КонецПроцедуры

Функция ПодготовитьПараметрыПроведенияДокументов(Объект, ПараметрыПроведения = Неопределено)
	
	Если ПараметрыПроведения = Неопределено тогда
		ПараметрыПроведения = Новый Структура;
	КонецЕсли;
	
	ПараметрыПроведения.Вставить("Ссылка"             , Объект.Ссылка);
	ПараметрыПроведения.Вставить("Движения"           , Объект.Движения);
	ПараметрыПроведения.Вставить("Дата"               , Объект.Дата);
	Если ТипЗнч(ПараметрыПроведения.Ссылка) = Тип("ДокументСсылка.РеализацияТоваровУслуг") тогда
		ПараметрыПроведения.Вставить("ДатаОстатков"   , Объект.Дата);
	ИначеЕсли ТипЗнч(ПараметрыПроведения.Ссылка) = Тип("ДокументСсылка.СчетНаОплатуПокупателю") тогда
		ПараметрыПроведения.Вставить("ДатаОстатков"   , НачалоДня(Объект.Дата));
	КонецЕсли;
	ПараметрыПроведения.Вставить("Организация"        , Объект.Организация);
	ПараметрыПроведения.Вставить("ДоговорКонтрагента" , Объект.ДоговорКонтрагента);
	ПараметрыПроведения.Вставить("ТипНоменклатуры"    , "Номенклатура");
	ПараметрыПроведения.Вставить("БлокироватьДефициты", ТипЗнч(ПараметрыПроведения.Ссылка) = Тип("ДокументСсылка.РеализацияТоваровУслуг"));
	
	Возврат ПараметрыПроведения;
	
КонецФункции

Функция ПодготовитьТаблицуТовары(ПараметрыЗапроса)
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Ссылка", ПараметрыЗапроса.Ссылка);
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ДокументСсылкаТовары.Ссылка.Дата КАК Период,
	|	ДокументСсылкаТовары.Ссылка.Организация КАК Организация,
	|	ДокументСсылкаТовары.Ссылка.ДоговорКонтрагента КАК ДоговорКонтрагента,
	|	ДокументСсылкаТовары.НомерСтроки КАК НомерСтроки,
	|	ДокументСсылкаТовары.НоменклатураГосЗакупок КАК НоменклатураГосЗакупок,
	|	ДокументСсылкаТовары.НоменклатураГосЗакупок.Наименование КАК НоменклатураГосЗакупокНаименование,
	|	ДокументСсылкаТовары.Номенклатура КАК Номенклатура,
	|	ДокументСсылкаТовары.Номенклатура.Наименование КАК НоменклатураНаименование,
	|	ДокументСсылкаТовары.Номенклатура.ЕдиницаИзмерения КАК Единица,
	|	ДокументСсылкаТовары.НоменклатураГосЗакупок.ЕдиницаИзмеренияГосЗакупок КАК ЕдиницаИзмеренияГосЗакупок,
	|	ДокументСсылкаТовары.Количество КАК Количество,
	|	ДокументСсылкаТовары.КоличествоГосЗакупок КАК КоличествоГосЗакупок,
	|	ДокументСсылкаТовары.Цена КАК Цена,
	|	ДокументСсылкаТовары.ЦенаГосЗакупок КАК ЦенаГосЗакупок,
	|	ДокументСсылкаТовары.Сумма КАК Сумма,
	|	ДокументСсылкаТовары.КоэффициентГосЗакупок КАК КоэффициентГосЗакупок
	|ИЗ
	|	Документ." + ПараметрыЗапроса.Ссылка.Метаданные().Имя + ".Товары КАК ДокументСсылкаТовары
	|ГДЕ
	|	ДокументСсылкаТовары.Ссылка = &Ссылка
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки"; //" + ПараметрыЗапроса.Ссылка.Метаданные().Имя + "
	
	Результат = Запрос.Выполнить(); // " + ПараметрыЗапроса.Ссылка.Метаданные().Имя + "
	
	Если Результат.Пустой() тогда   // РеализацияТоваровУслуг
		Возврат Неопределено;
	Конецесли;
	
	Возврат Результат.Выгрузить();
	
КонецФункции

Функция ПодготовитьТаблицуНеОтгруженныхЗаказовНаДень(ПараметрыПроведения)
	
	Запрос = Новый Запрос;
	
	Для Каждого КлючИЗначение из ПараметрыПроведения цикл
		Запрос.УстановитьПараметр(КлючИЗначение.Ключ, КлючИЗначение.Значение);
	КонецЦикла;
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	СчетНаОплатуПокупателюТовары.Ссылка КАК СчетНаОплатуПокупателю,
	|	СчетНаОплатуПокупателюТовары.НоменклатураГосЗакупок КАК НоменклатураГосЗакупок,
	|	СчетНаОплатуПокупателюТовары.Номенклатура КАК Номенклатура,
	|	СчетНаОплатуПокупателюТовары.КоличествоГосЗакупок КАК КоличествоГосЗакупок,
	|	СчетНаОплатуПокупателюТовары.Количество КАК Количество,
	|	СчетНаОплатуПокупателюТовары.ЦенаГосЗакупок КАК ЦенаГосЗакупок
	|ПОМЕСТИТЬ СчетаНаОплатуПокупателю
	|ИЗ
	|	Документ.СчетНаОплатуПокупателю.Товары КАК СчетНаОплатуПокупателюТовары
	|ГДЕ
	|	СчетНаОплатуПокупателюТовары.Ссылка.Проведен = ИСТИНА
	|	И СчетНаОплатуПокупателюТовары.Ссылка.Дата МЕЖДУ НАЧАЛОПЕРИОДА(&Дата, ДЕНЬ) И КОНЕЦПЕРИОДА(&Дата, ДЕНЬ)
	|	И СчетНаОплатуПокупателюТовары.Ссылка <> &Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	РеализацияТоваровУслугТовары.Ссылка.СчетНаОплатуПокупателю КАК СчетНаОплатуПокупателю,
	|	РеализацияТоваровУслугТовары.НоменклатураГосЗакупок КАК НоменклатураГосЗакупок,
	|	РеализацияТоваровУслугТовары.КоличествоГосЗакупок КАК КоличествоГосЗакупок,
	|	РеализацияТоваровУслугТовары.Номенклатура КАК Номенклатура,
	|	РеализацияТоваровУслугТовары.Количество КАК Количество,
	|	РеализацияТоваровУслугТовары.ЦенаГосЗакупок КАК ЦенаГосЗакупок
	|ПОМЕСТИТЬ РеализацияТоваровУслуг
	|ИЗ
	|	Документ.РеализацияТоваровУслуг.Товары КАК РеализацияТоваровУслугТовары
	|ГДЕ
	|	РеализацияТоваровУслугТовары.Ссылка.СчетНаОплатуПокупателю <> &Ссылка
	|	И РеализацияТоваровУслугТовары.Ссылка.СчетНаОплатуПокупателю <> ЗНАЧЕНИЕ(Документ.СчетНаОплатуПокупателю.ПустаяСсылка)
	|	И РеализацияТоваровУслугТовары.Ссылка.Проведен = ИСТИНА
	|	И РеализацияТоваровУслугТовары.Ссылка.Дата МЕЖДУ НАЧАЛОПЕРИОДА(&Дата, ДЕНЬ) И КОНЕЦПЕРИОДА(&Дата, ДЕНЬ)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СчетаНаОплатуПокупателю.СчетНаОплатуПокупателю.ДоговорКонтрагента КАК ДоговорКонтрагента,
	|	СчетаНаОплатуПокупателю.НоменклатураГосЗакупок КАК НоменклатураГосЗакупок,
	|	СчетаНаОплатуПокупателю.Номенклатура КАК Номенклатура,
	|	СУММА(СчетаНаОплатуПокупателю.КоличествоГосЗакупок - РеализацияТоваровУслуг.КоличествоГосЗакупок) КАК КоличествоГосЗакупок,
	|	СУММА(СчетаНаОплатуПокупателю.Количество - РеализацияТоваровУслуг.Количество) КАК Количество,
	|	СчетаНаОплатуПокупателю.ЦенаГосЗакупок КАК ЦенаГосЗакупок
	|ИЗ
	|	СчетаНаОплатуПокупателю КАК СчетаНаОплатуПокупателю
	|		ЛЕВОЕ СОЕДИНЕНИЕ РеализацияТоваровУслуг КАК РеализацияТоваровУслуг
	|		ПО СчетаНаОплатуПокупателю.СчетНаОплатуПокупателю = РеализацияТоваровУслуг.СчетНаОплатуПокупателю
	|			И СчетаНаОплатуПокупателю.НоменклатураГосЗакупок = РеализацияТоваровУслуг.НоменклатураГосЗакупок
	|			И СчетаНаОплатуПокупателю.Номенклатура = РеализацияТоваровУслуг.Номенклатура
	|			И СчетаНаОплатуПокупателю.ЦенаГосЗакупок = РеализацияТоваровУслуг.ЦенаГосЗакупок
	|ГДЕ
	|	НЕ &БлокироватьДефициты
	|
	|СГРУППИРОВАТЬ ПО
	|	СчетаНаОплатуПокупателю.НоменклатураГосЗакупок,
	|	СчетаНаОплатуПокупателю.Номенклатура,
	|	СчетаНаОплатуПокупателю.СчетНаОплатуПокупателю.ДоговорКонтрагента,
	|	СчетаНаОплатуПокупателю.ЦенаГосЗакупок";
	
	Возврат Запрос.Выполнить().Выгрузить();
	
КонецФункции

Процедура КонтрольОстатковТоварыГосЗакупок(ПараметрыПроведения, СписокОшибокПриПроведении, Отказ)
	
	Запрос = Новый Запрос;
	
	Для Каждого КлючИЗначение из ПараметрыПроведения цикл
		Запрос.УстановитьПараметр(КлючИЗначение.Ключ, КлючИЗначение.Значение);
	КонецЦикла;
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ВЫРАЗИТЬ(ВЫБОР
	|			КОГДА &БлокироватьДефициты
	|				ТОГДА ТаблицаТовары.НомерСтроки
	|			ИНАЧЕ 0
	|		КОНЕЦ КАК ЧИСЛО(10, 0)) КАК НомерСтроки,
	|	ВЫРАЗИТЬ(ТаблицаТовары.НоменклатураГосЗакупок КАК Справочник.НоменклатураГосЗакупок) КАК НоменклатураГосЗакупок,
	|	ВЫРАЗИТЬ(ТаблицаТовары.НоменклатураГосЗакупокНаименование КАК СТРОКА(100)) КАК НоменклатураГосЗакупокНаименование,
	|	ВЫРАЗИТЬ(ТаблицаТовары.ЕдиницаИзмеренияГосЗакупок КАК Справочник.КлассификаторЕдиницИзмерения) КАК ЕдиницаИзмеренияГосЗакупок,
	|	ВЫРАЗИТЬ(ТаблицаТовары.КоличествоГосЗакупок КАК ЧИСЛО(15, 3)) КАК КоличествоГосЗакупок,
	|	ВЫРАЗИТЬ(ТаблицаТовары.ДоговорКонтрагента КАК Справочник.ДоговорыКонтрагентов) КАК ДоговорКонтрагента,
	|	ВЫРАЗИТЬ(ТаблицаТовары.ЦенаГосЗакупок КАК ЧИСЛО(15, 2)) КАК ЦенаГосЗакупок
	|ПОМЕСТИТЬ ТаблицаТовары
	|ИЗ
	|	&ТаблицаТовары КАК ТаблицаТовары
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаТовары.НоменклатураГосЗакупок КАК НоменклатураГосЗакупок,
	|	ТаблицаТовары.НоменклатураГосЗакупокНаименование КАК НоменклатураГосЗакупокНаименование,
	|	ТаблицаТовары.ЕдиницаИзмеренияГосЗакупок КАК ЕдиницаИзмеренияГосЗакупок,
	|	СУММА(ТаблицаТовары.КоличествоГосЗакупок) КАК КоличествоГосЗакупок,
	|	ТаблицаТовары.ЦенаГосЗакупок КАК ЦенаГосЗакупок,
	|	ТаблицаТовары.ДоговорКонтрагента КАК ДоговорКонтрагента
	|ПОМЕСТИТЬ ТаблицаТоварыСгрупированные
	|ИЗ
	|	ТаблицаТовары КАК ТаблицаТовары
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаТовары.НоменклатураГосЗакупок,
	|	ТаблицаТовары.НоменклатураГосЗакупокНаименование,
	|	ТаблицаТовары.ЕдиницаИзмеренияГосЗакупок,
	|	ТаблицаТовары.ДоговорКонтрагента,
	|	ТаблицаТовары.ЦенаГосЗакупок
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВЫРАЗИТЬ(ТаблицаНеОтгруженныхЗаказовНаДень.НоменклатураГосЗакупок КАК Справочник.НоменклатураГосЗакупок) КАК НоменклатураГосЗакупок,
	|	ВЫРАЗИТЬ(ТаблицаНеОтгруженныхЗаказовНаДень.КоличествоГосЗакупок КАК ЧИСЛО(15, 3)) КАК КоличествоГосЗакупок,
	|	ВЫРАЗИТЬ(ТаблицаНеОтгруженныхЗаказовНаДень.ЦенаГосЗакупок КАК ЧИСЛО(15, 3)) КАК ЦенаГосЗакупок
	|ПОМЕСТИТЬ ТаблицаНеОтгруженныхЗаказовНаДень
	|ИЗ
	|	&ТаблицаНеОтгруженныхЗаказовНаДень КАК ТаблицаНеОтгруженныхЗаказовНаДень
	|ГДЕ
	|	ТаблицаНеОтгруженныхЗаказовНаДень.ДоговорКонтрагента = &ДоговорКонтрагента
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТоварыГосЗакупокОстатки.НоменклатураГосЗакупок КАК НоменклатураГосЗакупок,
	|	ТоварыГосЗакупокОстатки.КоличествоОстаток КАК КоличествоОстатокГосЗакупок,
	|	ТоварыГосЗакупокОстатки.Цена КАК ЦенаГосЗакупок
	|ПОМЕСТИТЬ ТоварыГосЗакупокОстатки
	|ИЗ
	|	РегистрНакопления.ТоварыГосЗакупок.Остатки(
	|			&ДатаОстатков,
	|			ДоговорКонтрагента = &ДоговорКонтрагента
	|				И Организация = &Организация) КАК ТоварыГосЗакупокОстатки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТоварыГосЗакупокОбороты.НоменклатураГосЗакупок КАК НоменклатураГосЗакупок,
	|	ТоварыГосЗакупокОбороты.Цена КАК ЦенаГосЗакупок,
	|	ТоварыГосЗакупокОбороты.КоличествоПриход КАК КоличествоПриход
	|ПОМЕСТИТЬ ГосЗакупкиПриход
	|ИЗ
	|	РегистрНакопления.ТоварыГосЗакупок.Обороты(
	|			НАЧАЛОПЕРИОДА(&ДатаОстатков, ДЕНЬ),
	|			КОНЕЦПЕРИОДА(&ДатаОстатков, ДЕНЬ),
	|			День,
	|			ДоговорКонтрагента = &ДоговорКонтрагента
	|				И Организация = &Организация) КАК ТоварыГосЗакупокОбороты
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВЫРАЗИТЬ(&Дата КАК ДАТА) КАК Дата,
	|	ВЫРАЗИТЬ(&Склад КАК Справочник.Склады).Наименование КАК СкладНаименование,
	|	ТаблицаТовары.НомерСтроки КАК НомерСтроки,
	|	ТаблицаТоварыСгрупированные.ДоговорКонтрагента.Наименование КАК ДоговорНаименование,
	|	ТаблицаТоварыСгрупированные.НоменклатураГосЗакупок КАК НоменклатураГосЗакупок,
	|	ТаблицаТоварыСгрупированные.НоменклатураГосЗакупокНаименование КАК НоменклатураГосЗакупокНаименование,
	|	ТаблицаТоварыСгрупированные.ЕдиницаИзмеренияГосЗакупок.Наименование КАК ЕдиницаНаименование,
	|	ТаблицаТоварыСгрупированные.КоличествоГосЗакупок КАК Количество,
	|	ТаблицаТоварыСгрупированные.ЦенаГосЗакупок КАК ЦенаГосЗакупок,
	|	ТаблицаТоварыСгрупированные.КоличествоГосЗакупок + ЕСТЬNULL(ТаблицаНеОтгруженныхЗаказовНаДень.КоличествоГосЗакупок, 0) - (ЕСТЬNULL(ТоварыГосЗакупокОстатки.КоличествоОстатокГосЗакупок, 0) + ЕСТЬNULL(ГосЗакупкиПриход.КоличествоПриход, 0)) КАК КоличествоНехватает,
	|	ЕСТЬNULL(ТаблицаНеОтгруженныхЗаказовНаДень.КоличествоГосЗакупок, 0) КАК КоличествоНеОтгруженныхЗаказов,
	|	ЕСТЬNULL(ТоварыГосЗакупокОстатки.КоличествоОстатокГосЗакупок, 0) КАК КоличествоОстаток,
	|	ЕСТЬNULL(ГосЗакупкиПриход.КоличествоПриход, 0) КАК КоличествоПриход
	|ИЗ
	|	ТаблицаТоварыСгрупированные КАК ТаблицаТоварыСгрупированные
	|		ЛЕВОЕ СОЕДИНЕНИЕ ТоварыГосЗакупокОстатки КАК ТоварыГосЗакупокОстатки
	|		ПО ТаблицаТоварыСгрупированные.НоменклатураГосЗакупок = ТоварыГосЗакупокОстатки.НоменклатураГосЗакупок
	|			И ТаблицаТоварыСгрупированные.ЦенаГосЗакупок = ТоварыГосЗакупокОстатки.ЦенаГосЗакупок
	|		ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаНеОтгруженныхЗаказовНаДень КАК ТаблицаНеОтгруженныхЗаказовНаДень
	|		ПО ТаблицаТоварыСгрупированные.НоменклатураГосЗакупок = ТаблицаНеОтгруженныхЗаказовНаДень.НоменклатураГосЗакупок
	|			И ТаблицаТоварыСгрупированные.ЦенаГосЗакупок = ТаблицаНеОтгруженныхЗаказовНаДень.ЦенаГосЗакупок
	|		ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаТовары КАК ТаблицаТовары
	|		ПО ТаблицаТоварыСгрупированные.НоменклатураГосЗакупок = ТаблицаТовары.НоменклатураГосЗакупок
	|			И ТаблицаТоварыСгрупированные.ЦенаГосЗакупок = ТаблицаТовары.ЦенаГосЗакупок
	|		ЛЕВОЕ СОЕДИНЕНИЕ ГосЗакупкиПриход КАК ГосЗакупкиПриход
	|		ПО ТаблицаТоварыСгрупированные.НоменклатураГосЗакупок = ГосЗакупкиПриход.НоменклатураГосЗакупок
	|			И ТаблицаТоварыСгрупированные.ЦенаГосЗакупок = ГосЗакупкиПриход.ЦенаГосЗакупок
	|ГДЕ
	|	ТаблицаТоварыСгрупированные.КоличествоГосЗакупок + ЕСТЬNULL(ТаблицаНеОтгруженныхЗаказовНаДень.КоличествоГосЗакупок, 0) - (ЕСТЬNULL(ТоварыГосЗакупокОстатки.КоличествоОстатокГосЗакупок, 0) + ЕСТЬNULL(ГосЗакупкиПриход.КоличествоПриход, 0)) > 0";
		
	Выборка = Запрос.Выполнить().Выбрать();
		
	Пока Выборка.Следующий() Цикл
		
		СтрДанные = ПреобразоватьДанныеСообщенийПриПроведенииВСтроки(Выборка, "НоменклатураГосЗакупок");
		
		ТекстОшибки = "По договору (гос. закупки) """ + СтрДанные.Договор + """, товара """ +
		              СтрДанные.НоменклатураГосЗакупок + """ выписано больше, чем по спецификации:"
					  "   Выписано в текущем документе: " + СтрДанные.ВДокументе + ";" + Символы.ПС +
                      "   Остаток по спецификации (начало " + СтрДанные.Дата + "): " + СтрДанные.НачОстаток + ";";
		Если Выборка.КоличествоПриход > 0 тогда
			ТекстОшибки = ТекстОшибки + Символы.ПС + 
			          "   Поступило на спецификацию (за " + СтрДанные.Дата + "): " + СтрДанные.Поступило + ";";
		КонецЕсли;
		Если Выборка.КоличествоНеОтгруженныхЗаказов > 0 тогда
			ТекстОшибки = ТекстОшибки + Символы.ПС + 
			          "   Еще не отгружено (на " + СтрДанные.Дата + ", без тек. документа): " + СтрДанные.Заказы + ";";
		КонецЕсли;
		ТекстОшибки = ТекстОшибки +
					  Символы.ПС +"ИТОГО (нехватает по спецификации): " + СтрДанные.Нехватает + ".";
					  
		ДобавитьОшибкуПользователюПриПроведении(ПараметрыПроведения,
		                                        СписокОшибокПриПроведении,
		                                        СтрДанные.НоменклатураГосЗакупок,
												ТекстОшибки,
												Выборка.НомерСтроки);
		
		Отказ = Истина;
		
	КонецЦикла;
		
КонецПроцедуры

Процедура КонтрольОстатковТоварыБухУчет(ПараметрыПроведения, СписокОшибокПриПроведении, Отказ)
	
	Запрос = Новый Запрос;
	
	Для Каждого КлючИЗначение из ПараметрыПроведения цикл
		Запрос.УстановитьПараметр(КлючИЗначение.Ключ, КлючИЗначение.Значение);
	КонецЦикла;
	Запрос.УстановитьПараметр("Проведен", ПараметрыПроведения.Ссылка.Проведен);
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ВЫРАЗИТЬ(ТаблицаТовары.ДоговорКонтрагента КАК Справочник.ДоговорыКонтрагентов) КАК ДоговорКонтрагента,
	|	ВЫРАЗИТЬ(ТаблицаТовары.НомерСтроки КАК ЧИСЛО(10, 0)) КАК НомерСтроки,
	|	ВЫРАЗИТЬ(ТаблицаТовары.Номенклатура КАК Справочник.Номенклатура) КАК Номенклатура,
	|	ВЫРАЗИТЬ(ТаблицаТовары.НоменклатураНаименование КАК СТРОКА(100)) КАК НоменклатураНаименование,
	|	ВЫРАЗИТЬ(ТаблицаТовары.Единица КАК Справочник.КлассификаторЕдиницИзмерения) КАК Единица,
	|	ВЫРАЗИТЬ(ТаблицаТовары.Количество КАК ЧИСЛО(15, 2)) КАК Количество
	|ПОМЕСТИТЬ ТаблицаТовары
	|ИЗ
	|	&ТаблицаТовары КАК ТаблицаТовары
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВЫРАЗИТЬ(ТаблицаНеОтгруженныхЗаказовНаДень.Номенклатура КАК Справочник.Номенклатура) КАК Номенклатура,
	|	ВЫРАЗИТЬ(ТаблицаНеОтгруженныхЗаказовНаДень.Количество КАК ЧИСЛО(15, 3)) КАК Количество
	|ПОМЕСТИТЬ ТаблицаНеОтгруженныхЗаказовНаДень
	|ИЗ
	|	&ТаблицаНеОтгруженныхЗаказовНаДень КАК ТаблицаНеОтгруженныхЗаказовНаДень
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВЫРАЗИТЬ(ХозрасчетныйОстаткиИОбороты.Субконто1 КАК Справочник.Номенклатура) КАК Номенклатура,
	|	ЕСТЬNULL(ХозрасчетныйОстаткиИОбороты.КоличествоНачальныйОстаток, 0) КАК КоличествоОстаток,
	|	ЕСТЬNULL(ХозрасчетныйОстаткиИОбороты.КоличествоОборот, 0) * -1 КАК КоличествоОборот
	|ПОМЕСТИТЬ НачОстаткиИРасходБухУчет
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.ОстаткиИОбороты(
	|			НАЧАЛОПЕРИОДА(&ДатаОстатков, ДЕНЬ),
	|			КОНЕЦПЕРИОДА(&ДатаОстатков, ДЕНЬ),
	|			День,
	|			,
	|			Счет В (&СчетаЗапасов),
	|			&ВидыСубконто,
	|			Организация = &Организация
	|				И Субконто1 В
	|					(ВЫБРАТЬ
	|						ТаблицаТовары.Номенклатура КАК Номенклатура
	|					ИЗ
	|						ТаблицаТовары КАК ТаблицаТовары)
	|				И Субконто2 = &Склад) КАК ХозрасчетныйОстаткиИОбороты
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВЫРАЗИТЬ(&Дата КАК ДАТА) КАК Дата,
	|	ВЫРАЗИТЬ(&Склад КАК Справочник.Склады).Наименование КАК СкладНаименование,
	|	ТаблицаТовары.ДоговорКонтрагента.Наименование КАК ДоговорНаименование,
	|	ТаблицаТовары.НомерСтроки КАК НомерСтроки,
	|	ТаблицаТовары.Номенклатура КАК Номенклатура,
	|	ТаблицаТовары.НоменклатураНаименование КАК НоменклатураНаименование,
	|	ТаблицаТовары.Единица.Наименование КАК ЕдиницаНаименование,
	|	СУММА(ТаблицаТовары.Количество) КАК Количество,
	|	СУММА(ТаблицаТовары.Количество + ЕСТЬNULL(ТаблицаНеОтгруженныхЗаказовНаДень.Количество, 0) + ЕСТЬNULL(НачОстаткиИРасходБухУчет.КоличествоОборот, 0) - ВЫБОР
	|			КОГДА &Проведен
	|				ТОГДА ТаблицаТовары.Количество
	|			ИНАЧЕ 0
	|		КОНЕЦ - ЕСТЬNULL(НачОстаткиИРасходБухУчет.КоличествоОстаток, 0)) КАК КоличествоНехватает,
	|	СУММА(ЕСТЬNULL(ТаблицаНеОтгруженныхЗаказовНаДень.Количество, 0)) КАК КоличествоНеОтгруженныхЗаказов,
	|	СУММА(ЕСТЬNULL(НачОстаткиИРасходБухУчет.КоличествоОстаток, 0)) КАК КоличествоОстаток,
	|	СУММА(ЕСТЬNULL(НачОстаткиИРасходБухУчет.КоличествоОборот, 0)) КАК КоличествоОборот,
	|	0 КАК КоличествоПриход
	|ИЗ
	|	ТаблицаТовары КАК ТаблицаТовары
	|		ЛЕВОЕ СОЕДИНЕНИЕ НачОстаткиИРасходБухУчет КАК НачОстаткиИРасходБухУчет
	|		ПО ТаблицаТовары.Номенклатура = НачОстаткиИРасходБухУчет.Номенклатура
	|		ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаНеОтгруженныхЗаказовНаДень КАК ТаблицаНеОтгруженныхЗаказовНаДень
	|		ПО ТаблицаТовары.Номенклатура = ТаблицаНеОтгруженныхЗаказовНаДень.Номенклатура
	|ГДЕ
	|	ТаблицаТовары.Количество + ЕСТЬNULL(ТаблицаНеОтгруженныхЗаказовНаДень.Количество, 0) + ЕСТЬNULL(НачОстаткиИРасходБухУчет.КоличествоОборот, 0) - ВЫБОР
	|			КОГДА &Проведен
	|				ТОГДА ТаблицаТовары.Количество
	|			ИНАЧЕ 0
	|		КОНЕЦ - ЕСТЬNULL(НачОстаткиИРасходБухУчет.КоличествоОстаток, 0) > 0
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаТовары.НомерСтроки,
	|	ТаблицаТовары.Номенклатура,
	|	ТаблицаТовары.НоменклатураНаименование,
	|	ТаблицаТовары.Единица.Наименование,
	|	ТаблицаТовары.ДоговорКонтрагента.Наименование";
	
	Выборка = Запрос.Выполнить().Выбрать();
		
	Пока Выборка.Следующий() Цикл

		СтрДанные = ПреобразоватьДанныеСообщенийПриПроведенииВСтроки(Выборка, "Номенклатура");
		
		ТекстОшибки = "На складе """ + СтрДанные.Склад + """, нехватает " + 
		              " товара """ + СтрДанные.Номенклатура + ":" + Символы.ПС +
					  "   Выписано в текущем документе: " + СтрДанные.ВДокументе + ";" + Символы.ПС +
                      "   Остаток на складе (начало " + СтрДанные.Дата + "): " + СтрДанные.НачОстаток + ";" + Символы.ПС +
                      "   Оробот в течение дня (сумма прихода и расхода): " + СтрДанные.Оборот + ";";

		Если Выборка.КоличествоНеОтгруженныхЗаказов > 0 тогда
			ТекстОшибки = ТекстОшибки + Символы.ПС + 
			          "   Еще не отгружено (на " + СтрДанные.Дата + ", без тек. документа): " + СтрДанные.Заказы + ";";
		КонецЕсли;
		ТекстОшибки = ТекстОшибки +
					  Символы.ПС +"ИТОГО (нехватает): " + СтрДанные.Нехватает + ".";
		
		ДобавитьОшибкуПользователюПриПроведении(ПараметрыПроведения,
		                                        СписокОшибокПриПроведении,
		                                        СтрДанные.Номенклатура,
		                                        ТекстОшибки,
		                                        Выборка.НомерСтроки);
		
		Отказ = Истина;
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ДобавитьОшибкуПользователюПриПроведении(ПараметрыПроведения, СписокОшибокПриПроведении, ГруппаОшибки, ТекстОшибки, НомерСтроки)
	
	ОшибкаСуществует = Ложь;
	Если НЕ СписокОшибокПриПроведении = Неопределено тогда
		Для каждого Ошибка Из СписокОшибокПриПроведении.СписокОшибок Цикл
			Если СписокОшибокПриПроведении.ГруппыОшибок[ГруппаОшибки] <> Неопределено Тогда
				ОшибкаСуществует = Истина;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	Если НЕ ОшибкаСуществует тогда
		
		Если ПараметрыПроведения.БлокироватьДефициты тогда
			ОбщегоНазначенияКлиентСервер.ДобавитьОшибкуПользователю(СписокОшибокПриПроведении,
		                                                        	"Объект.Товары[%1].Количество",
			                                                        ТекстОшибки,
																	ГруппаОшибки,
																	НомерСтроки - 1);
		Иначе
			ОбщегоНазначенияКлиентСервер.ДобавитьОшибкуПользователю(СписокОшибокПриПроведении,
		                                                        	Неопределено,
			                                                        ТекстОшибки,
																	ГруппаОшибки);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

Функция ПреобразоватьДанныеСообщенийПриПроведенииВСтроки(Данные, ТипНоменклатуры)
	
	Параметры = Новый Структура;
	Параметры.Вставить("Дата"         , Формат(Данные.Дата, "ДЛФ=D"));
	Параметры.Вставить("Договор"      , СокрЛП(Данные.ДоговорНаименование));
	Параметры.Вставить("Склад"        , СокрЛП(Данные.СкладНаименование));
	Параметры.Вставить("Единица"      , СокрЛП(Данные.ЕдиницаНаименование));
	Параметры.Вставить(ТипНоменклатуры, СокрЛП(Данные[ТипНоменклатуры + "Наименование"]));
	Параметры.Вставить("ВДокументе"   , Формат(Данные.Количество, "ЧЦ=15; ЧДЦ=3; ЧН=") + " " + Параметры.Единица);
	Параметры.Вставить("Поступило"    , Формат(Данные.КоличествоПриход, "ЧЦ=15; ЧДЦ=3; ЧН=") + " " + Параметры.Единица);
	Параметры.Вставить("Нехватает"    , Формат(Данные.КоличествоНехватает, "ЧЦ=15; ЧДЦ=3; ЧН=") + " " + Параметры.Единица);
	Параметры.Вставить("НачОстаток"   , Формат(Данные.КоличествоОстаток, "ЧЦ=15; ЧДЦ=3; ЧН=") + " " + Параметры.Единица);
	Если ТипНоменклатуры = "Номенклатура" тогда
		Параметры.Вставить("Оборот"       , Формат(Данные.КоличествоОборот, "ЧЦ=15; ЧДЦ=3; ЧН=") + " " + Параметры.Единица);
	КонецЕсли;
	Параметры.Вставить("Заказы"       , Формат(Данные.КоличествоНеОтгруженныхЗаказов, "ЧЦ=15; ЧДЦ=3; ЧН=") + " " + Параметры.Единица);
	
	Возврат Параметры;
	
КонецФункции

Процедура ДвиженияТоварыГосЗакупок(Параметры, Отказ)
	
	Если Отказ тогда
		Возврат;
	КонецЕсли;
	
	Если ЭтоДоговорПоставкиГосЗакупок(Параметры.ДоговорКонтрагента)
	И ТипЗнч(Параметры.Ссылка) = Тип("ДокументСсылка.РеализацияТоваровУслуг") тогда
		
		ДвиженияГосЗакупок = Параметры.Движения.ТоварыГосЗакупок;
		ТаблицаТоваров = Параметры.ТаблицаТовары.Скопировать();
		
		ТаблицаТоваров.Колонки.Добавить("ВидДвижения");
		ТаблицаТоваров.ЗаполнитьЗначения(ВидДвиженияНакопления.Расход, "ВидДвижения");
		
		Для Каждого СтрокаТовары из ТаблицаТоваров цикл
			СтрокаТовары.Количество = СтрокаТовары.КоличествоГосЗакупок;
			СтрокаТовары.Цена = СтрокаТовары.ЦенаГосЗакупок;
			СтрокаТовары.ЕдиницаИзмеренияГосЗакупок = СтрокаТовары.ЕдиницаИзмеренияГосЗакупок;
		КонецЦикла;
		
		ДвиженияГосЗакупок.Загрузить(ТаблицаТоваров);
		ДвиженияГосЗакупок.Записать();
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

Функция ПечатноеНаименованиеНоменклатурыГосЗакупок(ДоговорКонтрагента, НоменклатураГосЗакупок, ЦенаГосЗакупок) Экспорт
		
	Если НЕ ЗначениеЗаполнено(ДоговорКонтрагента) тогда
		Возврат "";
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(НоменклатураГосЗакупок) тогда
		Возврат "";
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
	               |	ПечатныеНаименованияСпецификаций.НоменклатураГосЗакупок КАК НоменклатураГосЗакупок,
	               |	ПечатныеНаименованияСпецификаций.ПечатноеНаименование КАК ПечатноеНаименование
	               |ИЗ
	               |	РегистрСведений.Базар_ПечатныеНаименованияСпецификаций КАК ПечатныеНаименованияСпецификаций
	               |ГДЕ
	               |	ПечатныеНаименованияСпецификаций.ДоговорКонтрагента = &ДоговорКонтрагента
	               |	И ПечатныеНаименованияСпецификаций.НоменклатураГосЗакупок = &НоменклатураГосЗакупок
	               |	И ПечатныеНаименованияСпецификаций.ЦенаГосЗакупок = &ЦенаГосЗакупок
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	ПечатныеНаименованияСпецификаций.НоменклатураГосЗакупок,
	               |	ПечатныеНаименованияСпецификаций.ПечатноеНаименование";
	Запрос.УстановитьПараметр("ДоговорКонтрагента", ДоговорКонтрагента);
	Запрос.УстановитьПараметр("НоменклатураГосЗакупок", НоменклатураГосЗакупок);
	Запрос.УстановитьПараметр("ЦенаГосЗакупок", ЦенаГосЗакупок);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если Выборка.Количество() = 0 тогда
		Возврат НоменклатураГосЗакупок.НаименованиеПолное;
	Иначе
		Выборка.Следующий();
		Возврат Выборка.ПечатноеНаименование;
	КонецЕсли;
	
КонецФункции

Функция ТаблицаДокументовУчаствующихВДвиженияхГосЗакупокСУсловием(ИмяРеквизита, Значение, МассивИсключенныхДокументов = Неопределено) Экспорт
	
	Если НЕ ЗначениеЗаполнено(МассивИсключенныхДокументов) тогда
		МассивИсключенныхДокументов = Новый Массив;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Значение", Значение);
	Запрос.УстановитьПараметр("МассивИсключенныхДокументов", МассивИсключенныхДокументов);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ЕСТЬNULL(ДанныеПервичныхДокументов.Документ, Базар_ДанныеПервичныхДокументов.Документ) КАК Документ,
	|	ЕСТЬNULL(ДанныеПервичныхДокументов.Дата, Базар_ДанныеПервичныхДокументов.Дата) КАК Дата,
	|	ЕСТЬNULL(ДанныеПервичныхДокументов.Номер, Базар_ДанныеПервичныхДокументов.Номер) КАК Номер
	|ПОМЕСТИТЬ ДанныеПервичныхДокументов
	|ИЗ
	|	РегистрСведений.ДанныеПервичныхДокументов КАК ДанныеПервичныхДокументов
	|		ПОЛНОЕ СОЕДИНЕНИЕ РегистрСведений.Базар_ДанныеПервичныхДокументов КАК Базар_ДанныеПервичныхДокументов
	|		ПО ДанныеПервичныхДокументов.Документ = Базар_ДанныеПервичныхДокументов.Документ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТоварыГосЗакупокОбороты.Регистратор КАК Документ,
	|	ДанныеПервичныхДокументов.Дата КАК Дата,
	|	ДанныеПервичныхДокументов.Номер КАК Номер
	|ИЗ
	|	РегистрНакопления.ТоварыГосЗакупок.Обороты(, , Регистратор, "+ИмяРеквизита+" = &Значение) КАК ТоварыГосЗакупокОбороты
	|		ЛЕВОЕ СОЕДИНЕНИЕ ДанныеПервичныхДокументов КАК ДанныеПервичныхДокументов
	|		ПО ТоварыГосЗакупокОбороты.Регистратор = ДанныеПервичныхДокументов.Документ
	|ГДЕ
	|	НЕ ТоварыГосЗакупокОбороты.Регистратор В (&МассивИсключенныхДокументов)";
	
	Возврат Запрос.Выполнить().Выгрузить(); //"+ИмяРеквизита+"
	
КонецФункции

Процедура НормализоватьТаблицуФормыТоварыПриИзмененииДоговораКонтрагента(ДатаОстатков, Организация, ДоговорКонтрагента, ТаблицаТовары, СуммаВключаетНДС, ТипЗначенияСсылки) Экспорт
	
	Если ТаблицаТовары.Количество() = 0 тогда
		Возврат;
	КонецЕсли;
	
	ПараметрыТаблицыНоменклатурыГосЗакупок = Новый Структура;
	ПараметрыТаблицыНоменклатурыГосЗакупок.Вставить("ДатаОстатков", ДатаОстатков);
	ПараметрыТаблицыНоменклатурыГосЗакупок.Вставить("ПоказатьЦены", Ложь);
	ПараметрыТаблицыНоменклатурыГосЗакупок.Вставить("ПоказатьОстатки", Истина);
	ПараметрыТаблицыНоменклатурыГосЗакупок.Вставить("ОтборПоОстаткам", Истина);
	ПараметрыТаблицыНоменклатурыГосЗакупок.Вставить("ДоговорКонтрагента", ДоговорКонтрагента);
	ПараметрыТаблицыНоменклатурыГосЗакупок.Вставить("ТипНоменклатуры", "НоменклатураГосЗакупок");
	
	ПараметрыТаблицыНоменклатуры = Новый Структура;
	ПараметрыТаблицыНоменклатуры.Вставить("ДатаОстатков", ДатаОстатков);
	ПараметрыТаблицыНоменклатуры.Вставить("ПоказатьЦены", Истина);
	ПараметрыТаблицыНоменклатуры.Вставить("ПоказатьОстатки", Истина);
	ПараметрыТаблицыНоменклатуры.Вставить("ОтборПоОстаткам", Истина);
	ПараметрыТаблицыНоменклатуры.Вставить("Организация", Организация);
	ПараметрыТаблицыНоменклатуры.Вставить("ТипНоменклатуры", "Номенклатура");
	
	ЭтоДоговорПоставкиГосЗакупок = ЭтоДоговорПоставкиГосЗакупок(ДоговорКонтрагента);
	
	Если ЭтоДоговорПоставкиГосЗакупок тогда
		ТаблицаНоменклатурыГосЗакупок = ТаблицаНоменклатурыГосЗакупок(ПараметрыТаблицыНоменклатурыГосЗакупок);
		Если ТаблицаНоменклатурыГосЗакупок = Неопределено тогда
			ТаблицаТовары.Очистить();
			Возврат;
		КонецЕсли;
	Иначе
		ТаблицаЦенОстатковНоменклатуры = ТаблицаНоменклатурыГосЗакупок(ПараметрыТаблицыНоменклатуры);
		Если ТаблицаЦенОстатковНоменклатуры = Неопределено тогда
			ТаблицаТовары.Очистить();
			Возврат;
		КонецЕсли;
	КонецЕсли;
	
	
	КоличествоСтрок = ТаблицаТовары.Количество();
	ИндексСтроки = 0;
	Пока ИндексСтроки <= (КоличествоСтрок - 1) цикл
		
		СтрокаТовары = ТаблицаТовары.Получить(ИндексСтроки);
		УдалитьСтроку = Ложь;
		
		Если ЭтоДоговорПоставкиГосЗакупок тогда
			
			Отборы = Новый Структура("НоменклатураГосЗакупок", СтрокаТовары.НоменклатураГосЗакупок);
			НайденыеСтрокиПоОстаткамКонтракта = ТаблицаНоменклатурыГосЗакупок.НайтиСтроки(Отборы);
			
			Если НайденыеСтрокиПоОстаткамКонтракта.Количество() = 0 тогда
				УдалитьСтроку = Истина;
			Иначе
				СтрокаТаблицыОстатковКонтракта = НайденыеСтрокиПоОстаткамКонтракта.Получить(0);
				ПараметрыТаблицыНоменклатуры.Вставить("НоменклатураГосЗакупок", СтрокаТовары.НоменклатураГосЗакупок);
				ТаблицаНоменклатуры = ТаблицаНоменклатурыГосЗакупок(ПараметрыТаблицыНоменклатуры);
				
				Если ТаблицаНоменклатуры = Неопределено тогда
					УдалитьСтроку = Истина;
				Иначе
					СтрокаТаблицыНоменклатуры = ТаблицаНоменклатуры.Получить(0);
					ДанныеЦены = ВернутьЦенуНоменклатурыГосЗаказа(ДоговорКонтрагента,
	                                                              СтрокаТовары.НоменклатураГосЗакупок,
	                                                              СтрокаТовары.Номенклатура);
																  
					СтрокаТовары.Количество = ?(СтрокаТовары.Количество > СтрокаТаблицыНоменклатуры.КоличествоОстаток, СтрокаТаблицыНоменклатуры.КоличествоОстаток, СтрокаТовары.Количество);
					ГосЗакупкиКлиентСервер.ЗаполнитьДанныеСтрокиТовары(СтрокаТовары, ДанныеЦены);
				КонецЕсли;
			КонецЕсли;
			
		Иначе
			Отборы = Новый Структура("Номенклатура", СтрокаТовары.Номенклатура);
			НайденыеСтрокиЦенОстатковНоменклатуры = ТаблицаЦенОстатковНоменклатуры.НайтиСтроки(Отборы);
			
			Если НайденыеСтрокиЦенОстатковНоменклатуры.Количество() = 0 тогда
				УдалитьСтроку = Истина;
			Иначе
				СтрокаТаблицыЦенОстатковНоменклатуры = НайденыеСтрокиЦенОстатковНоменклатуры.Получить(0);
				СтрокаТовары.Количество = ?(СтрокаТовары.Количество > СтрокаТаблицыЦенОстатковНоменклатуры.КоличествоОстаток, СтрокаТаблицыЦенОстатковНоменклатуры.КоличествоОстаток, СтрокаТовары.Количество);
				СтрокаТовары.Цена = СтрокаТаблицыЦенОстатковНоменклатуры.Цена;
			КонецЕсли;
		КонецЕсли;
		
		Если УдалитьСтроку тогда
			ТаблицаТовары.Удалить(ИндексСтроки);
			ИндексСтроки = ИндексСтроки - 1;
			КоличествоСтрок = КоличествоСтрок - 1;
		Иначе
			ГосЗакупкиКлиентСервер.ТоварыПересчитатьСуммуСуммуНДСиВсего(СтрокаТовары, СуммаВключаетНДС);
		КонецЕсли;
		
		ИндексСтроки = ИндексСтроки + 1;
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ПересчитатьКоличествоИЦену(Форма, ИдентификаторСтроки = Неопределено) Экспорт
	
	Объект = Форма.Объект;
	Элементы = Форма.Элементы;
	
	Если ИдентификаторСтроки = Неопределено тогда
		ИдентификаторСтроки = Элементы.Товары.ТекущаяСтрока;
	КонецЕсли;
	
	Строка = Объект.Товары.НайтиПоИдентификатору(ИдентификаторСтроки);
	
	Если Форма.ЭтоДокументГосЗакупок тогда
		
		Если Строка.НоменклатураГосЗакупок.ЕдиницаИзмеренияГосЗакупок.Дробная тогда
			КоличествоГосЗакупок = Строка.КоличествоГосЗакупок;
		Иначе
			КоличествоГосЗакупок = Окр(Строка.КоличествоГосЗакупок, 0, 1);
		КонецЕсли;
		Строка.КоличествоГосЗакупок = КоличествоГосЗакупок;
		Строка.Сумма = КоличествоГосЗакупок * Строка.ЦенаГосЗакупок;
		
		Если Строка.Номенклатура.ЕдиницаИзмерения.Дробная тогда
			Количество = КоличествоГосЗакупок * Строка.КоэффициентГосЗакупок;
		Иначе
			Количество = Окр(КоличествоГосЗакупок * Строка.КоэффициентГосЗакупок, 0, 1);
		КонецЕсли;
		Строка.Количество = Количество;
		
	Иначе
		
		Если Строка.Номенклатура.ЕдиницаИзмерения.Дробная тогда
			Количество = Строка.Количество;
		Иначе
			Количество = Окр(Строка.Количество, 0, 1);
		КонецЕсли;
		Строка.Количество = Количество;
		Строка.Сумма = Количество * Строка.Цена;
		
	КонецЕсли;
	
	Если Строка.Количество = 0 тогда
		Строка.Цена = 0;
	Иначе
		Строка.Цена = Строка.Сумма / Строка.Количество;
	КонецЕсли;
	
КонецПроцедуры

Функция ЭтоДоговорПоставкиГосЗакупок(ДоговорКонтрагента) Экспорт
	
	Если ДоговорКонтрагента.ВидВзаиморасчетов = ПредопределенныеЭлементыРасширенияСервер.ПредопределенноеЗначениеРасширения("Справочник", "ВидыВзаиморасчетов", "ПокупательАукцион") ИЛИ
		 ДоговорКонтрагента.ВидВзаиморасчетов = ПредопределенныеЭлементыРасширенияСервер.ПредопределенноеЗначениеРасширения("Справочник", "ВидыВзаиморасчетов", "ПокупательКонкурсКотировка") ИЛИ
		 ДоговорКонтрагента.ВидВзаиморасчетов = ПредопределенныеЭлементыРасширенияСервер.ПредопределенноеЗначениеРасширения("Справочник", "ВидыВзаиморасчетов", "ПокупательПрямойДоговорБюджет") ИЛИ
		 ДоговорКонтрагента.ВидВзаиморасчетов = ПредопределенныеЭлементыРасширенияСервер.ПредопределенноеЗначениеРасширения("Справочник", "ВидыВзаиморасчетов", "ПокупательПрямойДоговорВнебюджет") ТОГДА
		Возврат Истина;
		
	Иначе
		Возврат Ложь;
		
	КонецЕсли;
	
КонецФункции

Функция ВернутьЦенуНоменклатурыГосЗаказа(ДоговорКонтрагента, НоменклатураГосЗакупок, Номенклатура, ДатаЦены = Неопределено) Экспорт
	
	ПараметрыВозврата = Новый Структура("НоменклатураГосЗакупок,
	                                    |ЕдиницаИзмеренияГосЗакупок,
	                                    |КоэффициентГосЗакупок,
	                                    |ЦенаГосЗакупок,
	                                    |Номенклатура,
	                                    |ЕдиницаИзмерения");
	
	Если ДатаЦены = Неопределено тогда
		ДатаЦены = ТекущаяДатаСеанса();
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ТоварыГосЗакупокОстатки.Цена КАК Цена,
	|	ТоварыГосЗакупокОстатки.НоменклатураГосЗакупок КАК НоменклатураГосЗакупок
	|ПОМЕСТИТЬ ГосЗакупкиЦены
	|ИЗ
	|	РегистрНакопления.ТоварыГосЗакупок.Остатки(
	|			&ДатаЦены,
	|			НоменклатураГосЗакупок = &НоменклатураГосЗакупок
	|				И ДоговорКонтрагента = &ДоговорКонтрагента) КАК ТоварыГосЗакупокОстатки
	|ГДЕ
	|	ТоварыГосЗакупокОстатки.ДоговорКонтрагента = &ДоговорКонтрагента
	|	И ТоварыГосЗакупокОстатки.НоменклатураГосЗакупок = &НоменклатураГосЗакупок
	|	И ТоварыГосЗакупокОстатки.КоличествоОстаток > 0
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВЫРАЗИТЬ(ГосЗакупкиЦены.Цена КАК ЧИСЛО(15, 2)) КАК ЦенаГосЗакупок,
	|	НоменклатураГосЗакупокНоменклатура.Ссылка.ЕдиницаИзмеренияГосЗакупок КАК ЕдиницаИзмеренияГосЗакупок,
	|	НоменклатураГосЗакупокНоменклатура.Ссылка.ЕдиницаИзмеренияГосЗакупок.Дробная КАК ЕдиницаИзмеренияГосЗакупокДробная,
	|	НоменклатураГосЗакупокНоменклатура.КоэффициентГосЗакупок КАК КоэффициентГосЗакупок,
	|	НоменклатураГосЗакупокНоменклатура.Ссылка КАК НоменклатураГосЗакупок,
	|	НоменклатураГосЗакупокНоменклатура.Номенклатура КАК Номенклатура,
	|	НоменклатураГосЗакупокНоменклатура.Номенклатура.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	НоменклатураГосЗакупокНоменклатура.Номенклатура.ЕдиницаИзмерения.Дробная КАК ЕдиницаИзмеренияДробная
	|ИЗ
	|	Справочник.НоменклатураГосЗакупок.Номенклатура КАК НоменклатураГосЗакупокНоменклатура
	|		ЛЕВОЕ СОЕДИНЕНИЕ ГосЗакупкиЦены КАК ГосЗакупкиЦены
	|		ПО НоменклатураГосЗакупокНоменклатура.Ссылка = ГосЗакупкиЦены.НоменклатураГосЗакупок
	|ГДЕ
	|	НоменклатураГосЗакупокНоменклатура.Ссылка = &НоменклатураГосЗакупок
	|	И НоменклатураГосЗакупокНоменклатура.Номенклатура = &Номенклатура
	|
	|СГРУППИРОВАТЬ ПО
	|	ВЫРАЗИТЬ(ГосЗакупкиЦены.Цена КАК ЧИСЛО(15, 2)),
	|	НоменклатураГосЗакупокНоменклатура.КоэффициентГосЗакупок,
	|	НоменклатураГосЗакупокНоменклатура.Ссылка,
	|	НоменклатураГосЗакупокНоменклатура.Номенклатура,
	|	НоменклатураГосЗакупокНоменклатура.Ссылка.ЕдиницаИзмеренияГосЗакупок,
	|	НоменклатураГосЗакупокНоменклатура.Номенклатура.ЕдиницаИзмерения";
	
	Запрос.УстановитьПараметр("НоменклатураГосЗакупок", НоменклатураГосЗакупок);
	Запрос.УстановитьПараметр("ДоговорКонтрагента", ДоговорКонтрагента);
	Запрос.УстановитьПараметр("Номенклатура", Номенклатура);
	Запрос.УстановитьПараметр("ДатаЦены", ДатаЦены);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если РезультатЗапроса.Пустой() тогда
		Возврат Неопределено;
	Иначе
		Выборка = РезультатЗапроса.Выбрать();
		Выборка.Следующий();
		
		ЗаполнитьЗначенияСвойств(ПараметрыВозврата, Выборка);
		
		Возврат ПараметрыВозврата;
	КонецЕсли;
	
КонецФункции

Функция СписокВыбораНоменклатурыИлиНоменклатурыГосЗакупок(ПередаваемыеПараметры) Экспорт
	
	СписокНоменклатуры = Новый СписокЗначений;
	
	ТаблицаНоменклатурыГосЗакупок = ТаблицаНоменклатурыГосЗакупок(ПередаваемыеПараметры);
	
	Если ТаблицаНоменклатурыГосЗакупок = Неопределено тогда
		Возврат СписокНоменклатуры;
	КонецЕсли;
	
	Для Каждого СтрокаТаблицы из ТаблицаНоменклатурыГосЗакупок цикл
		
		СтрокаКолОстаток = Формат(СтрокаТаблицы.КоличествоОстаток, "ЧЦ=15; ЧДЦ=3; ЧН=0,000");
		
		Если ПередаваемыеПараметры.ТипНоменклатуры = "НоменклатураГосЗакупок" тогда
			СтрокаЦена = Формат(СтрокаТаблицы.ЦенаГосЗакупок, "ЧЦ=15; ЧДЦ=2");
			Представление = СтрокаТаблицы.Наименование + ", по цене "+СтрокаЦена+" руб. (ост. по спецификации: " + СтрокаКолОстаток + " "+ Строка(СтрокаТаблицы.ЕдиницаИзмеренияГосЗакупок) + ")";
			
		ИначеЕсли ПередаваемыеПараметры.ТипНоменклатуры = "Номенклатура" тогда
			Представление = СтрокаТаблицы.Наименование + ", (ост. на складе: " + СтрокаКолОстаток + " "+ Строка(СтрокаТаблицы.ЕдиницаИзмерения) + ")";
			
		КонецЕсли;
		
		СтруктураЗначения = Новый Структура;
		СтруктураЗначения.Вставить(ПередаваемыеПараметры.ТипНоменклатуры, СтрокаТаблицы[ПередаваемыеПараметры.ТипНоменклатуры]);
		СтруктураЗначения.Вставить("КоличествоОстаток", СтрокаТаблицы.КоличествоОстаток);
		
		Если НЕ ТаблицаНоменклатурыГосЗакупок.Колонки.Найти("ЦенаГосЗакупок") = Неопределено тогда
			СтруктураЗначения.Вставить("ЦенаГосЗакупок", СтрокаТаблицы.ЦенаГосЗакупок);
		КонецЕсли;
		
		Если НЕ ТаблицаНоменклатурыГосЗакупок.Колонки.Найти("НоменклатураГосЗакупок") = Неопределено тогда
			СтруктураЗначения.Вставить("НоменклатураГосЗакупок", СтрокаТаблицы.НоменклатураГосЗакупок);
		КонецЕсли;
		
		Если ПередаваемыеПараметры.Свойство("НоменклатураГосЗакупок") тогда
			СтруктураЗначения.Вставить("НоменклатураГосЗакупок", ПередаваемыеПараметры.НоменклатураГосЗакупок);
		КонецЕсли;
		
		Если НЕ ТаблицаНоменклатурыГосЗакупок.Колонки.Найти("КоэффициентГосЗакупок") = Неопределено тогда
			СтруктураЗначения.Вставить("КоэффициентГосЗакупок", СтрокаТаблицы.КоэффициентГосЗакупок);
		КонецЕсли;
		
		Если НЕ ТаблицаНоменклатурыГосЗакупок.Колонки.Найти("ЕдиницаИзмеренияГосЗакупок") = Неопределено тогда
			СтруктураЗначения.Вставить("ЕдиницаИзмеренияГосЗакупок", СтрокаТаблицы.ЕдиницаИзмеренияГосЗакупок);
		КонецЕсли;
		
		СписокНоменклатуры.Добавить(СтруктураЗначения, Представление);
	КонецЦикла;
	
	Возврат СписокНоменклатуры;
	
КонецФункции

// Возвращает таблицу значений для подсистемы ГосЗакупки, согласно переданным параметрам.
//
// Параметры:
//  Параметры	 - Структура - Параметры компоновки таблицы
//    ОБЩИЕ параметры:
//    *                  ТипНоменклатуры        - Строка - (Обязательный) Определяет какая таблица будет возвращена: Номенклатура/НоменклатураГосЗакупок
//    *                  Дата                   - Дата   - Если не заполнено, то ТекущаяДата()
//    *                  ПоказатьЦены           - Булево - Если не заполнено, то "истина"
//    *                  ПоказатьОстатки        - Булево - Если не заполнено, то "истина"
//    *                  ОтборПоОстаткам        - Булево - Если не заполнено, то "ложь"
//    *                                                    Если ПоказатьОстатки = "ложь", то ОтборПоОстаткам = "ложь"
//    ВИДТАБЛИЦЫ = "НоменклатураГосЗакупок", тогда набор параметров следующий:
//    *                  ДоговорКонтрагента - СправочникСсылка - (Обязательный)
//    ВИДТАБЛИЦЫ = "Номенклатура", тогда набор параметров следующий:
//    *                  НоменклатураГосЗакупок - СправочникСсылка - Если не заполнено, то по всем Номенклатурам (не по гос. закупкам)
//    *                  Организация            - СправочникСсылка - Если не заполнено, то по всем организациям
//    *                  Склад                  - СправочникСсылка - Если не заполнено, то срез последних Базар_Настройки.СкладОтгрузки
//    *                                                              если и там не заполнено, то по всем складам
//    *                  СчетаЗапасов           - Массив           - Если не заполнено, то (примерно):
//    *                                                              10.01, 10.02, 10.03, 10.04, 10.05,
//    *                                                              10.06, 10.08, 10.09, 10.10, 21, 41.01,
//    *                                                              41.02, 41.03, 41.04, 41.К, 43, 002
//    *                  ТипЦен                 - СправочникСсылка - Если не заполнено, то срез последних Базар_Настройки.ТипЦенПродажи,
//    *                                                              если и там не заполнено, то ПоказатьЦены = ложь
//    *                  Валюта                 - СправочникСсылка - Если не заполнено, то срез последних Базар_Настройки.ТипЦенПродажи.Валюта
//    *                                                              если и там не заполнено, то используется валюта регламентированного учета
// 
// Возвращаемое значение:
//  ТаблицаЗначений - Подготовленная таблица значений
//
Функция ТаблицаНоменклатурыГосЗакупок(Параметры) Экспорт
	
	Если ТипЗнч(Параметры) <> Тип("Структура") тогда
		Возврат Неопределено;
	КонецЕсли;
		
	ПараметрыЗапроса = ПодготовитьПараметрыЗапросаДляТаблицыНоменклатурыГосЗакупок(Параметры);
	
	Если НЕ ЗначениеЗаполнено(ПараметрыЗапроса) тогда
		Возврат Неопределено;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = ТекстЗапросаТаблицыНоменклатурыГосЗакупок(Параметры);
	
	Для Каждого КлючИЗначение из ПараметрыЗапроса цикл
		Запрос.УстановитьПараметр(КлючИЗначение.Ключ, КлючИЗначение.Значение);
	КонецЦикла;
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если РезультатЗапроса.Пустой() тогда
		Возврат Неопределено;
	Иначе
		Возврат РезультатЗапроса.Выгрузить();
	КонецЕсли;
	
КонецФункции

Функция ПодготовитьПараметрыЗапросаДляТаблицыНоменклатурыГосЗакупок(Параметры) Экспорт
	
	ПараметрыЗапроса = Новый Структура;
	
	// Установим все переметры в качестве параметров запроса,
	// это для некоторых запросов необходимо - избыточность в угоду
	// удобства программирования ;-)
	Для Каждого КлючИЗначение из Параметры цикл
		ПараметрыЗапроса.Вставить(КлючИЗначение.Ключ, КлючИЗначение.Значение);
	КонецЦикла;
	
	// Дата расчета остатков и получения цен
	УстановитьПараметрЗапроса(ПараметрыЗапроса, Параметры,
							  "ДатаОстатков", Тип("Дата"),
							  ТекущаяДата());
	
	// Отображать цены
	УстановитьПараметрЗапроса(ПараметрыЗапроса, Параметры,
							  "ПоказатьЦены", Тип("Булево"),
							  ВРЕГ(Параметры.ТипНоменклатуры) = Врег("НоменклатураГосЗакупок"));
	
	// Отображать остатки
	УстановитьПараметрЗапроса(ПараметрыЗапроса, Параметры,
							  "ПоказатьОстатки", Тип("Булево"),
							  Истина);
	
	// Выводить только когда остатки <> 0
	Если НЕ ПараметрыЗапроса.ПоказатьОстатки тогда
		ПараметрыЗапроса.Вставить("ОтборПоОстаткам", Ложь);
	Иначе
		УстановитьПараметрЗапроса(ПараметрыЗапроса, Параметры,
								  "ОтборПоОстаткам", Тип("Булево"),
								  Ложь);
	КонецЕсли;
	
	Если ВРЕГ(Параметры.ТипНоменклатуры) = Врег("НоменклатураГосЗакупок") тогда
		УстановитьПараметрЗапроса(ПараметрыЗапроса, Параметры,
								  "ДоговорКонтрагента", Тип("СправочникСсылка.ДоговорыКонтрагентов"),
								  Неопределено);
		Если НЕ ЗначениеЗаполнено(ПараметрыЗапроса.ДоговорКонтрагента) тогда
			Возврат Неопределено;
		КонецЕсли;

	ИначеЕсли ВРЕГ(Параметры.ТипНоменклатуры) = Врег("Номенклатура") тогда
		
		СистемныеНастройкиБазар = ОбщегоНазначенияБазарСервер.СистемныеНастройкиБазар(ПараметрыЗапроса.ДатаОстатков);
		
		УстановитьПараметрЗапроса(ПараметрыЗапроса, Параметры,
								  "НоменклатураГосЗакупок", Тип("СправочникСсылка.НоменклатураГосЗакупок"),
								  ПредопределенноеЗначение("Справочник.НоменклатураГосЗакупок.ПустаяСсылка"));
		
		УстановитьПараметрЗапроса(ПараметрыЗапроса, Параметры,
								  "Организация", Тип("СправочникСсылка.Организации"),
								  ПредопределенноеЗначение("Справочник.Организации.ПустаяСсылка"));
		
		УстановитьПараметрЗапроса(ПараметрыЗапроса, Параметры,
								  "Склад", Тип("СправочникСсылка.Склады"),
								  СистемныеНастройкиБазар.СкладОтгрузки);
		
		ВидыСубконто = Новый Массив;
		ВидыСубконто.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Номенклатура);
		ВидыСубконто.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Склады);
		ПараметрыЗапроса.Вставить("ВидыСубконто", ВидыСубконто);
		
		УстановитьПараметрЗапроса(ПараметрыЗапроса, Параметры,
								  "СчетаЗапасов", Тип("Массив"),
								  МассивСчетовЗапасов(ВидыСубконто));
		
		Если Параметры.Свойство("Валюта") тогда
			Если ТипЗнч(Параметры.Валюта) = Тип("СправочникСсылка.Валюты") тогда
				ПараметрыЗапроса.Вставить("Валюта", Параметры.Валюта);
			КонецЕсли;
		КонецЕсли;
		
		УстановитьПараметрЗапроса(ПараметрыЗапроса, Параметры,
								  "ТипЦен", Тип("СправочникСсылка.ТипыЦенНоменклатуры"),
								  СистемныеНастройкиБазар.ТипЦенПродажи);
		
		Если НЕ ЗначениеЗаполнено(ПараметрыЗапроса.ТипЦен) тогда
			ПараметрыЗапроса.ПоказатьЦены = Ложь;
		КонецЕсли;
		
		Если НЕ ПараметрыЗапроса.Свойство("Валюта") тогда
			Если ЗначениеЗаполнено(ПараметрыЗапроса.ТипЦен) Тогда
				ПараметрыЗапроса.Вставить("Валюта", ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ПараметрыЗапроса.ТипЦен, "ВалютаЦены"));
			Иначе
				ПараметрыЗапроса.Вставить("Валюта", ОбщегоНазначенияБПВызовСервераПовтИсп.ПолучитьВалютуРегламентированногоУчета());
			КонецЕсли;
		КонецЕсли;
				
	КонецЕсли;
	
	Возврат ПараметрыЗапроса;
	
КонецФункции

Процедура УстановитьПараметрЗапроса(ПараметрыПриемник, ПараметрыИсточник, ИмяПараметра, ТипПараметра, ЗначениеПоУмолчанию)
	
	Если ПараметрыИсточник.Свойство(ИмяПараметра) тогда
		Если ТипЗнч(ПараметрыИсточник[ИмяПараметра]) = ТипПараметра тогда
			Если ЗначениеЗаполнено(ПараметрыИсточник[ИмяПараметра]) тогда
				ПараметрыПриемник.Вставить(ИмяПараметра, ПараметрыИсточник[ИмяПараметра]);
			Иначе
				ПараметрыПриемник.Вставить(ИмяПараметра, ЗначениеПоУмолчанию);
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	Если НЕ ПараметрыПриемник.Свойство(ИмяПараметра) тогда
		ПараметрыПриемник.Вставить(ИмяПараметра, ЗначениеПоУмолчанию);
	КонецЕсли;
	
КонецПроцедуры

Функция МассивСчетовЗапасов(Знач СписокСубконто) Экспорт

	Запрос = Новый Запрос;
	
	Исключения = Новый Массив;
	Исключения.Добавить(ПланыСчетов.Хозрасчетный.Продажи);
	Исключения.Добавить(ПланыСчетов.Хозрасчетный.ГТД);
	Исключения.Добавить(ПланыСчетов.Хозрасчетный.МатериальныеЦенностиВЭксплуатации);
	Исключения.Добавить(ПланыСчетов.Хозрасчетный.МатериалыПереданныеВПереработку);
	Исключения.Добавить(ПланыСчетов.Хозрасчетный.СпецодеждаВЭксплуатации);
	Исключения.Добавить(ПланыСчетов.Хозрасчетный.СпецоснасткаВЭксплуатации);
	Исключения.Добавить(ПланыСчетов.Хозрасчетный.ПроизводствоИзДавальческогоСырья);
	Исключения.Добавить(ПланыСчетов.Хозрасчетный.ОсновноеПроизводство);
	Исключения.Добавить(ПланыСчетов.Хозрасчетный.ТоварыВРозничнойТорговлеВПродажныхЦенахАТТ);
	Исключения.Добавить(ПланыСчетов.Хозрасчетный.ПокупныеТоварыОтгруженные);
	Исключения.Добавить(ПланыСчетов.Хозрасчетный.ГотоваяПродукцияОтгруженная);
	Исключения.Добавить(ПланыСчетов.Хозрасчетный.ПрочиеТоварыОтгруженные);
	Исключения.Добавить(ПланыСчетов.Хозрасчетный.МатериалыПринятыеВПереработкуВПроизводстве);
	Исключения.Добавить(ПланыСчетов.Хозрасчетный.ТоварыНаСкладе);
	Исключения.Добавить(ПланыСчетов.Хозрасчетный.ТоварыПереданныеНаКомиссию);
	Исключения.Добавить(ПланыСчетов.Хозрасчетный.ТМЦпринятыеНаОтветственноеХранение);
	Исключения.Добавить(ПланыСчетов.Хозрасчетный.КорректировкаКомТоваровПрошлогоПериода);
	Исключения.Добавить(ПланыСчетов.Хозрасчетный.ОборудованиеПринятоеДляМонтажа);
	Исключения.Добавить(ПланыСчетов.Хозрасчетный.БланкиСтрогойОтчетности);
	Исключения.Добавить(ПланыСчетов.Хозрасчетный.ОборудованиеКУстановке);
	Исключения.Добавить(ПланыСчетов.Хозрасчетный.ПриобретениеКомпонентовОсновныхСредств);
	Исключения.Добавить(ПланыСчетов.Хозрасчетный.МатериалыПринятыеВПереработку);
	
	Запрос.УстановитьПараметр("СписокСубконто", СписокСубконто);
	Запрос.УстановитьПараметр("Исключения", Исключения);
	
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ХозрасчетныйВидыСубконто.Ссылка
	|ИЗ
	|	ПланСчетов.Хозрасчетный.ВидыСубконто КАК ХозрасчетныйВидыСубконто
	|ГДЕ
	|	ХозрасчетныйВидыСубконто.ВидСубконто В(&СписокСубконто)
	|	И НЕ ХозрасчетныйВидыСубконто.Ссылка В ИЕРАРХИИ(&Исключения)
	|	И НЕ ХозрасчетныйВидыСубконто.Ссылка.ЗапретитьИспользоватьВПроводках
	|	И ХозрасчетныйВидыСубконто.Ссылка.Количественный
	|	И НЕ ХозрасчетныйВидыСубконто.ТолькоОбороты";
	
	Возврат Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка");
	
КонецФункции

Функция ТекстЗапросаТаблицыНоменклатурыГосЗакупок(Параметры)
	
	Если ВРЕГ(Параметры.ТипНоменклатуры) = Врег("НоменклатураГосЗакупок") тогда
		ТекстЗапроса = 
		"ВЫБРАТЬ
		|	ТоварыГосЗакупокОстатки.НоменклатураГосЗакупок КАК НоменклатураГосЗакупок,
		|	ТоварыГосЗакупокОстатки.Цена КАК Цена,
		|	СУММА(ТоварыГосЗакупокОстатки.КоличествоОстаток) КАК КоличествоОстаток
		|ПОМЕСТИТЬ ОстаткиТоваровГосЗакупки
		|ИЗ
		|	РегистрНакопления.ТоварыГосЗакупок.Остатки(&ДатаОстатков, &ПоказатьОстатки) КАК ТоварыГосЗакупокОстатки
		|ГДЕ
		|	ТоварыГосЗакупокОстатки.ДоговорКонтрагента = &ДоговорКонтрагента
		|	И ТоварыГосЗакупокОстатки.КоличествоОстаток > 0
		|
		|СГРУППИРОВАТЬ ПО
		|	ТоварыГосЗакупокОстатки.НоменклатураГосЗакупок,
		|	ТоварыГосЗакупокОстатки.Цена
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	СправочникНоменклатураГосЗакупок.Ссылка КАК НоменклатураГосЗакупок,
		|	СправочникНоменклатураГосЗакупок.Наименование КАК Наименование,
		|	СправочникНоменклатураГосЗакупок.НаименованиеПолное КАК НаименованиеПолное,
		|	СправочникНоменклатураГосЗакупок.Код КАК Код,
		|	СправочникНоменклатураГосЗакупок.ЕдиницаИзмеренияГосЗакупок КАК ЕдиницаИзмеренияГосЗакупок,
		|	СУММА(ВЫРАЗИТЬ(ВЫБОР
		|				КОГДА &ПоказатьОстатки
		|					ТОГДА ОстаткиТоваровГосЗакупки.КоличествоОстаток
		|				ИНАЧЕ 0
		|			КОНЕЦ КАК ЧИСЛО(15, 3))) КАК КоличествоОстаток,
		|	ВЫРАЗИТЬ(ВЫБОР
		|			КОГДА &ПоказатьЦены
		|				ТОГДА ОстаткиТоваровГосЗакупки.Цена
		|			ИНАЧЕ 0
		|		КОНЕЦ КАК ЧИСЛО(15, 2)) КАК ЦенаГосЗакупок,
		|	ВЫБОР
		|		КОГДА &ПоказатьОстатки
		|			ТОГДА ВЫБОР
		|					КОГДА ЕСТЬNULL(ОстаткиТоваровГосЗакупки.КоличествоОстаток, 0) <> 0
		|						ТОГДА ИСТИНА
		|					ИНАЧЕ ЛОЖЬ
		|				КОНЕЦ
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ КАК ЕстьОстаток
		|ИЗ
		|	ОстаткиТоваровГосЗакупки КАК ОстаткиТоваровГосЗакупки
		|		ПОЛНОЕ СОЕДИНЕНИЕ Справочник.НоменклатураГосЗакупок КАК СправочникНоменклатураГосЗакупок
		|		ПО (ВЫБОР
		|				КОГДА &ПоказатьОстатки
		|					ТОГДА ОстаткиТоваровГосЗакупки.НоменклатураГосЗакупок = СправочникНоменклатураГосЗакупок.Ссылка
		|				ИНАЧЕ ЛОЖЬ
		|			КОНЕЦ)
		|ГДЕ
		|	НЕ СправочникНоменклатураГосЗакупок.ЭтоГруппа
		|	И ВЫБОР
		|			КОГДА &ОтборПоОстаткам
		|					И &ПоказатьОстатки
		|				ТОГДА СправочникНоменклатураГосЗакупок.Ссылка В (ОстаткиТоваровГосЗакупки.НоменклатураГосЗакупок)
		|			ИНАЧЕ ИСТИНА
		|		КОНЕЦ
		|
		|СГРУППИРОВАТЬ ПО
		|	СправочникНоменклатураГосЗакупок.Ссылка,
		|	СправочникНоменклатураГосЗакупок.Наименование,
		|	СправочникНоменклатураГосЗакупок.НаименованиеПолное,
		|	СправочникНоменклатураГосЗакупок.Код,
		|	СправочникНоменклатураГосЗакупок.ЕдиницаИзмеренияГосЗакупок,
		|	ВЫРАЗИТЬ(ВЫБОР
		|			КОГДА &ПоказатьЦены
		|				ТОГДА ОстаткиТоваровГосЗакупки.Цена
		|			ИНАЧЕ 0
		|		КОНЕЦ КАК ЧИСЛО(15, 2)),
		|	ВЫБОР
		|		КОГДА &ПоказатьОстатки
		|			ТОГДА ВЫБОР
		|					КОГДА ЕСТЬNULL(ОстаткиТоваровГосЗакупки.КоличествоОстаток, 0) <> 0
		|						ТОГДА ИСТИНА
		|					ИНАЧЕ ЛОЖЬ
		|				КОНЕЦ
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ
		|
		|УПОРЯДОЧИТЬ ПО
		|	Наименование";
		
	ИначеЕсли ВРЕГ(Параметры.ТипНоменклатуры) = Врег("Номенклатура") тогда
		ТекстЗапроса = 
		"ВЫБРАТЬ
		|	НоменклатураГосЗакупокНоменклатура.Номенклатура КАК Номенклатура,
		|	НоменклатураГосЗакупокНоменклатура.КоэффициентГосЗакупок КАК КоэффициентГосЗакупок,
		|	НоменклатураГосЗакупокНоменклатура.Номенклатура.ЕдиницаИзмерения КАК ЕдиницаИзмерения
		|ПОМЕСТИТЬ СправочникНоменклатураГосЗакупок
		|ИЗ
		|	Справочник.НоменклатураГосЗакупок.Номенклатура КАК НоменклатураГосЗакупокНоменклатура
		|ГДЕ
		|	ВЫБОР
		|			КОГДА &НоменклатураГосЗакупок = ЗНАЧЕНИЕ(Справочник.НоменклатураГосЗакупок.ПустаяСсылка)
		|				ТОГДА ИСТИНА
		|			ИНАЧЕ НоменклатураГосЗакупокНоменклатура.Ссылка = &НоменклатураГосЗакупок
		|		КОНЕЦ
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ЦеныНоменклатуры.Номенклатура КАК Номенклатура,
		|	ЦеныНоменклатуры.Номенклатура.Наименование КАК Наименование,
		|	ЦеныНоменклатуры.Номенклатура.НаименованиеПолное КАК НаименованиеПолное,
		|	ЦеныНоменклатуры.Номенклатура.Код КАК Код,
		|	ЦеныНоменклатуры.Номенклатура.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
		|	ЦеныНоменклатуры.Цена КАК Цена,
		|	ЦеныНоменклатуры.Валюта КАК Валюта
		|ПОМЕСТИТЬ ЦеныНоменклатуры
		|ИЗ
		|	РегистрСведений.ЦеныНоменклатуры.СрезПоследних(
		|			&ДатаОстатков,
		|			ВЫБОР
		|					КОГДА &ПоказатьЦены
		|						ТОГДА ТипЦен = &ТипЦен
		|								И Валюта = &Валюта
		|					ИНАЧЕ ЛОЖЬ
		|				КОНЕЦ
		|				И ВЫБОР
		|					КОГДА &НоменклатураГосЗакупок = ЗНАЧЕНИЕ(Справочник.НоменклатураГосЗакупок.ПустаяСсылка)
		|						ТОГДА ИСТИНА
		|					ИНАЧЕ Номенклатура В
		|							(ВЫБРАТЬ
		|								СправочникНоменклатураГосЗакупок.Номенклатура КАК Номенклатура
		|							ИЗ
		|								СправочникНоменклатураГосЗакупок КАК СправочникНоменклатураГосЗакупок)
		|				КОНЕЦ) КАК ЦеныНоменклатуры,
		|	СправочникНоменклатураГосЗакупок КАК СправочникНоменклатураГосЗакупок
		|ГДЕ
		|	ВЫБОР
		|			КОГДА &ПоказатьЦены
		|				ТОГДА ЦеныНоменклатуры.ТипЦен = &ТипЦен
		|			ИНАЧЕ ЛОЖЬ
		|		КОНЕЦ
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВЫРАЗИТЬ(ОстаткиНаСкладе.Субконто1 КАК Справочник.Номенклатура) КАК Номенклатура,
		|	ВЫРАЗИТЬ(ОстаткиНаСкладе.Субконто1 КАК Справочник.Номенклатура).Наименование КАК Наименование,
		|	ВЫРАЗИТЬ(ОстаткиНаСкладе.Субконто1 КАК Справочник.Номенклатура).НаименованиеПолное КАК НаименованиеПолное,
		|	ВЫРАЗИТЬ(ОстаткиНаСкладе.Субконто1 КАК Справочник.Номенклатура).Код КАК Код,
		|	ВЫРАЗИТЬ(ОстаткиНаСкладе.Субконто1 КАК Справочник.Номенклатура).ЕдиницаИзмерения КАК ЕдиницаИзмерения,
		|	ЕСТЬNULL(ОстаткиНаСкладе.КоличествоОстаток, 0) КАК КоличествоОстаток
		|ПОМЕСТИТЬ ОстаткиНаСкладе
		|ИЗ
		|	РегистрБухгалтерии.Хозрасчетный.Остатки(
		|			&ДатаОстатков,
		|			Счет В (&СчетаЗапасов),
		|			&ВидыСубконто,
		|			ВЫБОР
		|					КОГДА &ПоказатьОстатки
		|						ТОГДА ВЫБОР
		|									КОГДА &Организация <> ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
		|										ТОГДА Организация = &Организация
		|									ИНАЧЕ ИСТИНА
		|								КОНЕЦ
		|								И ВЫБОР
		|									КОГДА &Склад <> ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка)
		|										ТОГДА Субконто2 = &Склад
		|									ИНАЧЕ ИСТИНА
		|								КОНЕЦ
		|					ИНАЧЕ ЛОЖЬ
		|				КОНЕЦ
		|				И ВЫБОР
		|					КОГДА &НоменклатураГосЗакупок = ЗНАЧЕНИЕ(Справочник.НоменклатураГосЗакупок.ПустаяСсылка)
		|						ТОГДА ИСТИНА
		|					ИНАЧЕ Субконто1 В
		|							(ВЫБРАТЬ
		|								СправочникНоменклатураГосЗакупок.Номенклатура КАК Номенклатура
		|							ИЗ
		|								СправочникНоменклатураГосЗакупок КАК СправочникНоменклатураГосЗакупок)
		|				КОНЕЦ) КАК ОстаткиНаСкладе
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ СправочникНоменклатураГосЗакупок КАК СправочникНоменклатураГосЗакупок
		|		ПО ОстаткиНаСкладе.Субконто1 = СправочникНоменклатураГосЗакупок.Номенклатура
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ЕСТЬNULL(ОстаткиНаСкладе.Номенклатура, ЦеныНоменклатуры.Номенклатура) КАК Номенклатура,
		|	ЕСТЬNULL(ОстаткиНаСкладе.ЕдиницаИзмерения, ЦеныНоменклатуры.ЕдиницаИзмерения) КАК ЕдиницаИзмерения,
		|	ВЫРАЗИТЬ(ЕСТЬNULL(ЦеныНоменклатуры.Цена, 0) КАК ЧИСЛО(15, 3)) КАК Цена,
		|	ЕСТЬNULL(ЦеныНоменклатуры.Валюта, ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка)) КАК Валюта,
		|	СУММА(ВЫРАЗИТЬ(ЕСТЬNULL(ОстаткиНаСкладе.КоличествоОстаток, 0) КАК ЧИСЛО(15, 3))) КАК КоличествоОстаток
		|ПОМЕСТИТЬ ОстаткиИЦеныНоменклатуры
		|ИЗ
		|	ОстаткиНаСкладе КАК ОстаткиНаСкладе
		|		ПОЛНОЕ СОЕДИНЕНИЕ ЦеныНоменклатуры КАК ЦеныНоменклатуры
		|		ПО ОстаткиНаСкладе.Номенклатура = ЦеныНоменклатуры.Номенклатура
		|
		|СГРУППИРОВАТЬ ПО
		|	ЕСТЬNULL(ОстаткиНаСкладе.Номенклатура, ЦеныНоменклатуры.Номенклатура),
		|	ЕСТЬNULL(ЦеныНоменклатуры.Валюта, ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка)),
		|	ЕСТЬNULL(ОстаткиНаСкладе.ЕдиницаИзмерения, ЦеныНоменклатуры.ЕдиницаИзмерения),
		|	ВЫРАЗИТЬ(ЕСТЬNULL(ЦеныНоменклатуры.Цена, 0) КАК ЧИСЛО(15, 3))
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ЕСТЬNULL(ОстаткиИЦеныНоменклатуры.Номенклатура, СправочникНоменклатураГосЗакупок.Номенклатура) КАК Номенклатура,
		|	ВЫРАЗИТЬ(ЕСТЬNULL(ОстаткиИЦеныНоменклатуры.Номенклатура, СправочникНоменклатураГосЗакупок.Номенклатура) КАК Справочник.Номенклатура).Наименование КАК Наименование,
		|	ВЫРАЗИТЬ(ЕСТЬNULL(ОстаткиИЦеныНоменклатуры.Номенклатура, СправочникНоменклатураГосЗакупок.Номенклатура) КАК Справочник.Номенклатура).НаименованиеПолное КАК НаименованиеПолное,
		|	ВЫРАЗИТЬ(ЕСТЬNULL(ОстаткиИЦеныНоменклатуры.Номенклатура, СправочникНоменклатураГосЗакупок.Номенклатура) КАК Справочник.Номенклатура).Код КАК Код,
		|	ЕСТЬNULL(ОстаткиИЦеныНоменклатуры.ЕдиницаИзмерения, СправочникНоменклатураГосЗакупок.ЕдиницаИзмерения) КАК ЕдиницаИзмерения,
		|	ВЫРАЗИТЬ(ЕСТЬNULL(СправочникНоменклатураГосЗакупок.КоэффициентГосЗакупок, 0) КАК ЧИСЛО(10, 5)) КАК КоэффициентГосЗакупок,
		|	ВЫРАЗИТЬ(ЕСТЬNULL(ОстаткиИЦеныНоменклатуры.Цена, 0) КАК ЧИСЛО(15, 2)) КАК Цена,
		|	ЕСТЬNULL(ОстаткиИЦеныНоменклатуры.Валюта, ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка)) КАК Валюта,
		|	ВЫРАЗИТЬ(ЕСТЬNULL(ОстаткиИЦеныНоменклатуры.КоличествоОстаток, 0) КАК ЧИСЛО(15, 3)) КАК КоличествоОстаток,
		|	ВЫБОР
		|		КОГДА &ПоказатьОстатки
		|			ТОГДА ВЫБОР
		|					КОГДА ЕСТЬNULL(ОстаткиИЦеныНоменклатуры.КоличествоОстаток, 0) <> 0
		|						ТОГДА ИСТИНА
		|					ИНАЧЕ ЛОЖЬ
		|				КОНЕЦ
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ КАК ЕстьОстаток
		|ИЗ
		|	СправочникНоменклатураГосЗакупок КАК СправочникНоменклатураГосЗакупок
		|		ПОЛНОЕ СОЕДИНЕНИЕ ОстаткиИЦеныНоменклатуры КАК ОстаткиИЦеныНоменклатуры
		|		ПО СправочникНоменклатураГосЗакупок.Номенклатура = ОстаткиИЦеныНоменклатуры.Номенклатура
		|ГДЕ
		|	ВЫБОР
		|			КОГДА &ОтборПоОстаткам
		|					И &ПоказатьОстатки
		|				ТОГДА ОстаткиИЦеныНоменклатуры.КоличествоОстаток > 0
		|			ИНАЧЕ ИСТИНА
		|		КОНЕЦ
		|
		|УПОРЯДОЧИТЬ ПО
		|	ЕстьОстаток УБЫВ,
		|	КоличествоОстаток УБЫВ,
		|	Наименование";
		
	КонецЕсли;
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТребуемаяДатаСпецификацииДоговора(ДоговорКонтрагента) Экспорт
	
	ДатаЗаключенияДоговора = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ДоговорКонтрагента, "Дата");
	НачалоДействияДеговора = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ДоговорКонтрагента, "НачалоДействия");
	
	Возврат Мин(ДатаЗаключенияДоговора, НачалоДействияДеговора);
	
КонецФункции

Функция ДанныеСпецификацииДоговора(ДоговорКонтрагента) Экспорт
	
	СтруктураВозврата = Новый Структура;
	СтруктураВозврата.Вставить("Ссылка"            , ПредопределенноеЗначение("Документ.СпецификацияДоговора.ПустаяСсылка"));
	СтруктураВозврата.Вставить("ДоговорКонтрагента", ПредопределенноеЗначение("Справочник.ДоговорыКонтрагентов.ПустаяСсылка"));
	СтруктураВозврата.Вставить("Комментарий"       , "");
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ДоговорКонтрагента", ДоговорКонтрагента);
	
	Запрос.Текст =
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	ТоварыГосЗакупокОбороты.Регистратор КАК Ссылка,
	|	ТоварыГосЗакупокОбороты.Регистратор.ДоговорКонтрагента КАК ДоговорКонтрагента,
	|	ВЫРАЗИТЬ(ТоварыГосЗакупокОбороты.Регистратор.Комментарий КАК СТРОКА(250)) КАК Комментарий
	|ИЗ
	|	РегистрНакопления.ТоварыГосЗакупок.Обороты(, , Регистратор, ДоговорКонтрагента = &ДоговорКонтрагента) КАК ТоварыГосЗакупокОбороты
	|ГДЕ
	|	ТоварыГосЗакупокОбороты.Регистратор ССЫЛКА Документ.СпецификацияДоговора
	|	И ТоварыГосЗакупокОбороты.КоличествоПриход > 0
	|
	|СГРУППИРОВАТЬ ПО
	|	ТоварыГосЗакупокОбороты.Регистратор,
	|	ТоварыГосЗакупокОбороты.Регистратор.ДоговорКонтрагента,
	|	ВЫРАЗИТЬ(ТоварыГосЗакупокОбороты.Регистратор.Комментарий КАК СТРОКА(250))";
	
	ДанныеСпецификации = Запрос.Выполнить().Выбрать();
	
	Если ДанныеСпецификации.Следующий() тогда
		ЗаполнитьЗначенияСвойств(СтруктураВозврата, ДанныеСпецификации);
	КонецЕсли;
	
	Возврат СтруктураВозврата;
	
КонецФункции

Процедура ПриИзмененииСуммаГосЗакупок(СтрокаТаблицы) Экспорт

	Если СтрокаТаблицы.Сумма > 0 тогда
		Если СтрокаТаблицы.ЦенаГосЗакупок = 0 тогда
			СтрокаТаблицы.КоличествоГосЗакупок = 0;
			СтрокаТаблицы.Количество = 0;
			СтрокаТаблицы.Цена = 0;
			СтрокаТаблицы.Сумма = 0;
		Иначе
			Если СтрокаТаблицы.ЕдиницаИзмеренияГосЗакупок.Дробная тогда
				КоличествоГосЗакупок = СтрокаТаблицы.Сумма / СтрокаТаблицы.ЦенаГосЗакупок;
			Иначе
				КоличествоГосЗакупок = Окр(СтрокаТаблицы.Сумма / СтрокаТаблицы.ЦенаГосЗакупок, 0,1);
				СтрокаТаблицы.Сумма = КоличествоГосЗакупок * СтрокаТаблицы.ЦенаГосЗакупок;
			КонецЕсли;
			СтрокаТаблицы.КоличествоГосЗакупок = КоличествоГосЗакупок;
			
			Если СтрокаТаблицы.ЕдиницаИзмерения.Дробная тогда
				Количество = СтрокаТаблицы.КоличествоГосЗакупок * СтрокаТаблицы.КоэффициентГосЗакупок;
			Иначе
				Количество = Окр(СтрокаТаблицы.КоличествоГосЗакупок * СтрокаТаблицы.КоэффициентГосЗакупок, 0,1);
			КонецЕсли;
			СтрокаТаблицы.Количество = Количество;
			
			Если СтрокаТаблицы.Количество = 0 тогда
				СтрокаТаблицы.Цена = 0;
			Иначе
				СтрокаТаблицы.Цена = СтрокаТаблицы.Сумма / СтрокаТаблицы.Количество;
			КонецЕсли;
		КонецЕсли;
	Иначе
		СтрокаТаблицы.КоличествоГосЗакупок = 0;
		СтрокаТаблицы.Количество = 0;
		СтрокаТаблицы.Цена = 0;
	КонецЕсли;
	
КонецПроцедуры