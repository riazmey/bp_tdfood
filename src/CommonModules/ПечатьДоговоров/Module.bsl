&Вместо("ЗначениеПараметра")
Функция Базар_ЗначениеПараметра(Знач ИмяПараметра, СведенияОСделке, ЗначенияСоставногоПараметра, Успешно) Экспорт

	ИмяПараметра = ВРег(ИмяПараметра);
	СведенияОДоговоре     = СведенияОСделке.СведенияОДоговоре;
	СведенияОКонтрагенте  = СведенияОСделке.СведенияОКонтрагенте;
	СведенияОбОрганизации = СведенияОСделке.СведенияОбОрганизации;
	СведенияДокумента	  = СведенияОСделке.СведенияДокумента;

	Результат = Неопределено;
	Успешно = Истина;
	
	Если ИмяПараметра = Врег("АдресЭлектроннойПочтыКонтрагента") Тогда
		
		Если ЗначениеЗаполнено(СведенияОКонтрагенте.Email) Тогда
			Результат = СведенияОКонтрагенте.Email;
		Иначе
			Результат = СтроковыеФункцииКлиентСервер.СформироватьСтрокуСимволов("_", 20);
			Успешно = Ложь;
		КонецЕсли;
	
	ИначеЕсли ИмяПараметра = Врег("АдресЭлектроннойПочтыОрганизации") Тогда
	
		Если ЗначениеЗаполнено(СведенияОбОрганизации.Email) Тогда
			Результат = СведенияОбОрганизации.Email;
		Иначе
			Результат = СтроковыеФункцииКлиентСервер.СформироватьСтрокуСимволов("_", 20);
			Успешно = Ложь;
		КонецЕсли;
	
	ИначеЕсли ИмяПараметра = Врег("БанковскиеРеквизитыКонтрагента") Тогда
	
		Если ЗначениеЗаполнено(СведенияОКонтрагенте.НомерСчета) Тогда
			НомерСчета = СведенияОКонтрагенте.НомерСчета;
		Иначе
			НомерСчета = СтроковыеФункцииКлиентСервер.СформироватьСтрокуСимволов("_", 20);
			Успешно = Ложь;
		КонецЕсли;
	
		Если ЗначениеЗаполнено(СведенияОКонтрагенте.Банк) Тогда
			Банк = СведенияОКонтрагенте.Банк;
		Иначе
			Банк = СтроковыеФункцииКлиентСервер.СформироватьСтрокуСимволов("_", 30);
			Успешно = Ложь;
		КонецЕсли;
		
		Если ЗначениеЗаполнено(СведенияОКонтрагенте.БИК) Тогда
			БИК = СведенияОКонтрагенте.БИК;
		Иначе
			БИК = СтроковыеФункцииКлиентСервер.СформироватьСтрокуСимволов("_", 9);
			Успешно = Ложь;
		КонецЕсли;
		
		Если ЗначениеЗаполнено(СведенияОКонтрагенте.КоррСчет) Тогда
			КоррСчет = СведенияОКонтрагенте.КоррСчет;
		Иначе
			КоррСчет = СтроковыеФункцииКлиентСервер.СформироватьСтрокуСимволов("_", 20);
			Успешно = Ложь;
		КонецЕсли;

		Результат = НСтр("ru = 'р/с %1% в банке %2%, БИК %3%, к/с %4%'");
		ЗначенияСоставногоПараметра.Добавить(НомерСчета);
		ЗначенияСоставногоПараметра.Добавить(Банк);
		ЗначенияСоставногоПараметра.Добавить(БИК);
		ЗначенияСоставногоПараметра.Добавить(КоррСчет);
		
	ИначеЕсли ИмяПараметра = Врег("БанковскиеРеквизитыОрганизации") Тогда

		Если ЗначениеЗаполнено(СведенияОбОрганизации.НомерСчета) Тогда
			НомерСчета = СведенияОбОрганизации.НомерСчета;
		Иначе
			НомерСчета = СтроковыеФункцииКлиентСервер.СформироватьСтрокуСимволов("_", 20);
			Успешно = Ложь;
		КонецЕсли;
	
		Если ЗначениеЗаполнено(СведенияОбОрганизации.Банк) Тогда
			Банк = СведенияОбОрганизации.Банк;
		Иначе
			Банк = СтроковыеФункцииКлиентСервер.СформироватьСтрокуСимволов("_", 30);
			Успешно = Ложь;
		КонецЕсли;
		
		Если ЗначениеЗаполнено(СведенияОбОрганизации.БИК) Тогда
			БИК = СведенияОбОрганизации.БИК;
		Иначе
			БИК = СтроковыеФункцииКлиентСервер.СформироватьСтрокуСимволов("_", 9);
			Успешно = Ложь;
		КонецЕсли;
		
		Если ЗначениеЗаполнено(СведенияОбОрганизации.КоррСчет) Тогда
			КоррСчет = СведенияОбОрганизации.КоррСчет;
		Иначе
			КоррСчет = СтроковыеФункцииКлиентСервер.СформироватьСтрокуСимволов("_", 20);
			Успешно = Ложь;
		КонецЕсли;

		Результат = НСтр("ru = 'р/с %1% в банке %2%, БИК %3%, к/с %4%'");
		ЗначенияСоставногоПараметра.Добавить(НомерСчета);
		ЗначенияСоставногоПараметра.Добавить(Банк);
		ЗначенияСоставногоПараметра.Добавить(БИК);
		ЗначенияСоставногоПараметра.Добавить(КоррСчет);

	ИначеЕсли ИмяПараметра = Врег("ГородПоПочтовомуАдресуКонтрагента") Тогда
		
		ГородПоПочтовомуАдресу = УправлениеКонтактнойИнформациейБП.НаселенныйПунктПоАдресу(
			СведенияОКонтрагенте.ЗначениеJSONПочтовыйАдрес);
		
		Если ЗначениеЗаполнено(ГородПоПочтовомуАдресу) Тогда
			Результат = ГородПоПочтовомуАдресу;
		Иначе
			Результат = СтроковыеФункцииКлиентСервер.СформироватьСтрокуСимволов("_", 30);
			Успешно = Ложь;
		КонецЕсли;
	
	ИначеЕсли ИмяПараметра = Врег("ГородПоПочтовомуАдресуОрганизации") Тогда
		
		ГородПоПочтовомуАдресу = УправлениеКонтактнойИнформациейБП.НаселенныйПунктПоАдресу(
			СведенияОбОрганизации.ЗначениеJSONПочтовыйАдрес);
		
		Если ЗначениеЗаполнено(ГородПоПочтовомуАдресу) Тогда
			Результат = ГородПоПочтовомуАдресу;
		Иначе
			Результат = СтроковыеФункцииКлиентСервер.СформироватьСтрокуСимволов("_", 30);
			Успешно = Ложь;
		КонецЕсли;
		
	ИначеЕсли ИмяПараметра = Врег("ГородПоФактическомуАдресуКонтрагента") Тогда
		
		ГородПоФактическомуАдресу = УправлениеКонтактнойИнформациейБП.НаселенныйПунктПоАдресу(
			СведенияОКонтрагенте.ЗначениеJSONФактическийАдрес);
		
		Если ЗначениеЗаполнено(ГородПоФактическомуАдресу) Тогда
			Результат = ГородПоФактическомуАдресу;
		Иначе
			Результат = СтроковыеФункцииКлиентСервер.СформироватьСтрокуСимволов("_", 30);
			Успешно = Ложь;
		КонецЕсли;
	
	ИначеЕсли ИмяПараметра = Врег("ГородПоФактическомуАдресуОрганизации") Тогда
		
		ГородПоФактическомуАдресу = УправлениеКонтактнойИнформациейБП.НаселенныйПунктПоАдресу(
			СведенияОбОрганизации.ЗначениеJSONФактическийАдрес);
		
		Если ЗначениеЗаполнено(ГородПоФактическомуАдресу) Тогда
			Результат = ГородПоФактическомуАдресу;
		Иначе
			Результат = СтроковыеФункцииКлиентСервер.СформироватьСтрокуСимволов("_", 30);
			Успешно = Ложь;
		КонецЕсли;
		
	ИначеЕсли ИмяПараметра = Врег("ГородПоЮридическомуАдресуКонтрагента") Тогда
		
		ГородПоЮридическомуАдресу = УправлениеКонтактнойИнформациейБП.НаселенныйПунктПоАдресу(
			СведенияОКонтрагенте.ЗначениеJSONЮридическийАдрес);
		
		Если ЗначениеЗаполнено(ГородПоЮридическомуАдресу) Тогда
			Результат = ГородПоЮридическомуАдресу;
		Иначе
			Результат = СтроковыеФункцииКлиентСервер.СформироватьСтрокуСимволов("_", 30);
			Успешно = Ложь;
		КонецЕсли;

	ИначеЕсли ИмяПараметра = Врег("ГородПоЮридическомуАдресуОрганизации") Тогда
		
		ГородПоЮридическомуАдресу = УправлениеКонтактнойИнформациейБП.НаселенныйПунктПоАдресу(
			СведенияОбОрганизации.ЗначениеJSONЮридическийАдрес);
		
		Если ЗначениеЗаполнено(ГородПоЮридическомуАдресу) Тогда
			Результат = ГородПоЮридическомуАдресу;
		Иначе
			Результат = СтроковыеФункцииКлиентСервер.СформироватьСтрокуСимволов("_", 30);
			Успешно = Ложь;
		КонецЕсли;
		
	ИначеЕсли ИмяПараметра = Врег("ДатаДоговора") Тогда 
		
		Если ЗначениеЗаполнено(СведенияОДоговоре.Дата) Тогда
			Результат = Формат(СведенияОДоговоре.Дата, "ДЛФ=DD");
		Иначе
			Результат = НСтр("ru = '"" __ "" ______________ 20__ г.'");
			Успешно = Ложь;
		КонецЕсли;
		
	ИначеЕсли ИмяПараметра = Врег("ДатаДокумента") Тогда 
		
		Если ЗначениеЗаполнено(СведенияДокумента.ДатаДокумента) Тогда
			Результат = Формат(СведенияДокумента.ДатаДокумента, "ДЛФ=DD");
		Иначе
			Результат = НСтр("ru = '"" __ "" ______________ 20__ г.'");
			Успешно = Ложь;
		КонецЕсли;
		
	ИначеЕсли ИмяПараметра = Врег("НомерДокумента") Тогда 
		
		Если ЗначениеЗаполнено(СведенияДокумента.НомерДокумента) Тогда
			Результат = СокрЛП(СведенияДокумента.НомерДокумента);
		Иначе
			Результат = СтроковыеФункцииКлиентСервер.СформироватьСтрокуСимволов("_", 10);
			Успешно = Ложь;
		КонецЕсли;
		
	ИначеЕсли ИмяПараметра = Врег("ВСоответствииСЗакономРегулирующийОтношенияПоДоговору") Тогда 
		
		Если ЗначениеЗаполнено(СведенияОДоговоре.ЗаконРегулирующийОтношения) Тогда
			Если СведенияОДоговоре.ЗаконРегулирующийОтношения = Перечисления.Базар_ЗаконРегулирующийОтношенияПоДоговору.ФЗ44 тогда
				Результат = "требованиями пункта ____ части 1 статьи 93 Федерального закона от 05.04.2013 г. № 44-ФЗ ""О контрактной системе в сфере закупок товаров, работ, услуг для обеспечения государственных и муниципальных нужд""";
			ИначеЕсли СведенияОДоговоре.ЗаконРегулирующийОтношения = Перечисления.Базар_ЗаконРегулирующийОтношенияПоДоговору.ФЗ223 тогда
				Результат = "Федерального закона от 18.07.2011 г. № 223-ФЗ ""О закупках товаров, работ, услуг отдельными видами юридических лиц""";
			ИначеЕсли СведенияОДоговоре.ЗаконРегулирующийОтношения = Перечисления.Базар_ЗаконРегулирующийОтношенияПоДоговору.ГКРФ тогда
				Результат = "Федерального закона от 30.11.1994 г. № 51-ФЗ ""Гражданский кодекс Российской Федерации""";
			КонецЕсли;
		Иначе
			Результат = СтроковыеФункцииКлиентСервер.СформироватьСтрокуСимволов("_", 30);
			Успешно = Ложь;                   
		КонецЕсли;
	
	ИначеЕсли ИмяПараметра = Врег("ДокументУдостоверяющийЛичностьКонтрагента") Тогда

		Если СведенияОКонтрагенте.ЮридическоеФизическоеЛицо = Перечисления.ЮридическоеФизическоеЛицо.ЮридическоеЛицо Тогда
			// Для юридических лиц параметр не применяется, может присутствовать в шаблоне
			// при использовании единого шаблона для юр.лиц и физ.лиц.
			Результат = "";
		ИначеЕсли ЗначениеЗаполнено(СведенияОКонтрагенте.ДокументУдостоверяющийЛичность) Тогда
			Результат = СведенияОКонтрагенте.ДокументУдостоверяющийЛичность;
		Иначе
			// Вставляем строку без переносов, чтобы сработало автоперенос в форматированном документе.
			Результат = НСтр("ru = 'Паспорт гражданина РФ, серия %1%, № %2% выдан: %3%, действует до: %4%, %5%, № подр. %6%'");
			ЗначенияСоставногоПараметра.Добавить("____"); 	// серия
			ЗначенияСоставногоПараметра.Добавить("______"); // номер
			ЗначенияСоставногоПараметра.Добавить("______________ 20__ г."); // выдан
			ЗначенияСоставногоПараметра.Добавить("______________ 20__ г."); // действует до
			ЗначенияСоставногоПараметра.Добавить("_________________________________"); // кем выдан
			ЗначенияСоставногоПараметра.Добавить("_______"); // № подразделения
			
			Успешно = Ложь;
		КонецЕсли;
	
	ИначеЕсли СтрНачинаетсяС(ИмяПараметра, Врег("ДолжностьРуководителяКонтрагента")) Тогда
		
		Если ЗначениеЗаполнено(СведенияОДоговоре.ДолжностьРуководителяКонтрагента) Тогда
			
			Падеж = ПечатьДоговоровКлиентСервер.ПадежПоИмениПараметра(ИмяПараметра);
			ПустойДоговор = Справочники.ДоговорыКонтрагентов.ПустаяСсылка(); // для любого договора
			Результат = СклонениеПредставленийОбъектов.ПросклонятьПредставление(
				СведенияОДоговоре.ДолжностьРуководителяКонтрагента, Падеж, ПустойДоговор);
				
		ИначеЕсли СведенияОКонтрагенте.ЮридическоеФизическоеЛицо = Перечисления.ЮридическоеФизическоеЛицо.ФизическоеЛицо Тогда
			// У физического лица может и не быть должности, если, например, он действует сам за себя.
			Результат = "";
		Иначе
			Результат = СтроковыеФункцииКлиентСервер.СформироватьСтрокуСимволов("_", 30);
			Успешно = Ложь;
		КонецЕсли;

	ИначеЕсли СтрНачинаетсяС(ИмяПараметра, Врег("ДолжностьРуководителяОрганизации")) Тогда
		
		Если ЗначениеЗаполнено(СведенияОДоговоре.ДолжностьРуководителя) Тогда
			
			Падеж = ПечатьДоговоровКлиентСервер.ПадежПоИмениПараметра(ИмяПараметра);
			Результат = СклонениеПредставленийОбъектов.ПросклонятьПредставление(
					Строка(СведенияОДоговоре.ДолжностьРуководителя), Падеж, СведенияОДоговоре.ДолжностьРуководителя);
			
		ИначеЕсли СведенияОбОрганизации.ЮридическоеФизическоеЛицо = Перечисления.ЮридическоеФизическоеЛицо.ФизическоеЛицо Тогда
			// У физического лица может и не быть должности, если, например, он действует сам за себя.
			Результат = "";
		Иначе
			Результат = СтроковыеФункцииКлиентСервер.СформироватьСтрокуСимволов("_", 30);
			Успешно = Ложь;
		КонецЕсли;
	
	ИначеЕсли ИмяПараметра = Врег("ИНН_КППКонтрагента") Тогда
	
		Если ЗначениеЗаполнено(СведенияОКонтрагенте.ИНН) Тогда
			ИНН = СведенияОКонтрагенте.ИНН;
		ИначеЕсли СведенияОКонтрагенте.ЮридическоеФизическоеЛицо = Перечисления.ЮридическоеФизическоеЛицо.ФизическоеЛицо Тогда
			ИНН = СтроковыеФункцииКлиентСервер.СформироватьСтрокуСимволов("_", 12);
			Успешно = Ложь;
		Иначе
			ИНН = СтроковыеФункцииКлиентСервер.СформироватьСтрокуСимволов("_", 10);
			Успешно = Ложь;
		КонецЕсли;

		Если ЗначениеЗаполнено(СведенияОКонтрагенте.КПП) Тогда
			КПП = СведенияОКонтрагенте.КПП;
		ИначеЕсли СведенияОКонтрагенте.ЮридическоеФизическоеЛицо = Перечисления.ЮридическоеФизическоеЛицо.ЮридическоеЛицо Тогда
			КПП = СтроковыеФункцииКлиентСервер.СформироватьСтрокуСимволов("_", 9);
			Успешно = Ложь;
		КонецЕсли;
		
		Если СведенияОКонтрагенте.ЮридическоеФизическоеЛицо = Перечисления.ЮридическоеФизическоеЛицо.ФизическоеЛицо Тогда
			Результат = НСтр("ru = 'ИНН: %1%'");
		Иначе
			Результат = НСтр("ru = 'ИНН / КПП: %1% / %2%'");
		КонецЕсли;
		
		ЗначенияСоставногоПараметра.Добавить(ИНН);
		ЗначенияСоставногоПараметра.Добавить(КПП);
	
	ИначеЕсли ИмяПараметра = Врег("ИНН_КППОрганизации") Тогда
	
		Если ЗначениеЗаполнено(СведенияОбОрганизации.ИНН) Тогда
			ИНН = СведенияОбОрганизации.ИНН;
		ИначеЕсли СведенияОбОрганизации.ЮридическоеФизическоеЛицо = Перечисления.ЮридическоеФизическоеЛицо.ФизическоеЛицо Тогда
			ИНН = СтроковыеФункцииКлиентСервер.СформироватьСтрокуСимволов("_", 12);
			Успешно = Ложь;
		Иначе
			ИНН = СтроковыеФункцииКлиентСервер.СформироватьСтрокуСимволов("_", 10);
			Успешно = Ложь;
		КонецЕсли;

		Если ЗначениеЗаполнено(СведенияОбОрганизации.КПП) Тогда
			КПП = СведенияОбОрганизации.КПП;
		ИначеЕсли СведенияОбОрганизации.ЮридическоеФизическоеЛицо = Перечисления.ЮридическоеФизическоеЛицо.ЮридическоеЛицо Тогда
			КПП = СтроковыеФункцииКлиентСервер.СформироватьСтрокуСимволов("_", 9);
			Успешно = Ложь;
		КонецЕсли;
		
		Если СведенияОбОрганизации.ЮридическоеФизическоеЛицо = Перечисления.ЮридическоеФизическоеЛицо.ФизическоеЛицо Тогда
			Результат = НСтр("ru = 'ИНН: %1%'");
		Иначе
			Результат = НСтр("ru = 'ИНН / КПП: %1% / %2%'");
		КонецЕсли;
		
		ЗначенияСоставногоПараметра.Добавить(ИНН);
		ЗначенияСоставногоПараметра.Добавить(КПП);

	ИначеЕсли ИмяПараметра = Врег("НомерДоговора") Тогда
		
		Если ЗначениеЗаполнено(СведенияОДоговоре.Номер) Тогда
			Результат = СведенияОДоговоре.Номер;
		Иначе
			Результат = СтроковыеФункцииКлиентСервер.СформироватьСтрокуСимволов("_", 10);
			Успешно = Ложь;
		КонецЕсли;
		
	ИначеЕсли ИмяПараметра = Врег("НомерРеестровойЗаписи") Тогда
		
		Если ЗначениеЗаполнено(СведенияОДоговоре.НомерРеестровойЗаписи) Тогда
			Результат = СведенияОДоговоре.НомерРеестровойЗаписи;
		Иначе
			Результат = СтроковыеФункцииКлиентСервер.СформироватьСтрокуСимволов("_", 10);
			Успешно = Ложь;
		КонецЕсли;
		
	ИначеЕсли ИмяПараметра = Врег("ОГРНКонтрагента") Тогда
	
		Если ЗначениеЗаполнено(СведенияОКонтрагенте.ОГРН) Тогда
			ОГРН = СведенияОКонтрагенте.ОГРН;
		ИначеЕсли СведенияОКонтрагенте.ЮридическоеФизическоеЛицо = Перечисления.ЮридическоеФизическоеЛицо.ФизическоеЛицо Тогда
			// Для физлиц ОГРНИП может отсутствовать, если это не ИП, поэтому если не заполнено, то не показываем ничего.
			Результат = "";
		Иначе
			ОГРН = СтроковыеФункцииКлиентСервер.СформироватьСтрокуСимволов("_", 15);
			Успешно = Ложь;
		КонецЕсли;
		
		Если ЗначениеЗаполнено(ОГРН) Тогда
		
			Если СведенияОКонтрагенте.ЮридическоеФизическоеЛицо = Перечисления.ЮридическоеФизическоеЛицо.ФизическоеЛицо Тогда
				Результат = НСтр("ru = 'ОГРНИП: %1%'");
			Иначе
				Результат = НСтр("ru = 'ОГРН: %1%'");
			КонецЕсли;

			ЗначенияСоставногоПараметра.Добавить(ОГРН);
		КонецЕсли;

	ИначеЕсли ИмяПараметра = Врег("ОГРНОрганизации") Тогда
	
		Если ЗначениеЗаполнено(СведенияОбОрганизации.ОГРН) Тогда
			ОГРН = СведенияОбОрганизации.ОГРН;
		ИначеЕсли СведенияОбОрганизации.ЮридическоеФизическоеЛицо = Перечисления.ЮридическоеФизическоеЛицо.ФизическоеЛицо Тогда
			// Для физлиц ОГРНИП может отсутствовать, если это не ИП, поэтому если не заполнено, то не показываем ничего.
			Результат = "";
		Иначе
			ОГРН = СтроковыеФункцииКлиентСервер.СформироватьСтрокуСимволов("_", 15);
			Успешно = Ложь;
		КонецЕсли;
		
		Если ЗначениеЗаполнено(ОГРН) Тогда
		
			Если СведенияОбОрганизации.ЮридическоеФизическоеЛицо = Перечисления.ЮридическоеФизическоеЛицо.ФизическоеЛицо Тогда
				Результат = НСтр("ru = 'ОГРНИП: %1%'");
			Иначе
				Результат = НСтр("ru = 'ОГРН: %1%'");
			КонецЕсли;

			ЗначенияСоставногоПараметра.Добавить(ОГРН);
		КонецЕсли;
		
	ИначеЕсли ИмяПараметра = Врег("ОснованиеПолномочийРуководителяКонтрагента") Тогда
	
		Если ЗначениеЗаполнено(СведенияОДоговоре.ЗаРуководителяКонтрагентаПоПриказу) Тогда
			Результат = СведенияОДоговоре.ЗаРуководителяКонтрагентаПоПриказу;
		ИначеЕсли СведенияОКонтрагенте.ЮридическоеФизическоеЛицо = Перечисления.ЮридическоеФизическоеЛицо.ЮридическоеЛицо Тогда
			Результат = НСтр("ru = 'Устава'");
		ИначеЕсли СведенияОКонтрагенте.ЮридическоеФизическоеЛицо = Перечисления.ЮридическоеФизическоеЛицо.ФизическоеЛицо Тогда
			Результат = "";
		Иначе
			Результат = СтроковыеФункцииКлиентСервер.СформироватьСтрокуСимволов("_", 10);
			Успешно = Ложь;
		КонецЕсли;

	ИначеЕсли ИмяПараметра = Врег("ОснованиеПолномочийРуководителяОрганизации") Тогда
	
		Если ЗначениеЗаполнено(СведенияОДоговоре.ЗаРуководителяПоПриказу) Тогда
			Результат = СведенияОДоговоре.ЗаРуководителяПоПриказу;
		ИначеЕсли СведенияОбОрганизации.ЮридическоеФизическоеЛицо = Перечисления.ЮридическоеФизическоеЛицо.ЮридическоеЛицо Тогда
			Результат = НСтр("ru = 'Устава'");
		ИначеЕсли СведенияОбОрганизации.ЮридическоеФизическоеЛицо = Перечисления.ЮридическоеФизическоеЛицо.ФизическоеЛицо Тогда
			Результат = "";
		Иначе
			Результат = СтроковыеФункцииКлиентСервер.СформироватьСтрокуСимволов("_", 10);
			Успешно = Ложь;
		КонецЕсли;

	ИначеЕсли ИмяПараметра = Врег("ПолноеНаименованиеОрганизации") Тогда
	
		Если ЗначениеЗаполнено(СведенияОбОрганизации.ПолноеНаименование) Тогда
			Результат = СведенияОбОрганизации.ПолноеНаименование;
		ИначеЕсли ЗначениеЗаполнено(СведенияОбОрганизации.СокращенноеНаименование) Тогда
			Результат = СведенияОбОрганизации.СокращенноеНаименование;
		ИначеЕсли ЗначениеЗаполнено(СведенияОбОрганизации.Представление) Тогда
			Результат = СведенияОбОрганизации.Представление;
		Иначе
			Результат = СтроковыеФункцииКлиентСервер.СформироватьСтрокуСимволов("_", 50);
			Успешно = Ложь;
		КонецЕсли;
		
	ИначеЕсли ИмяПараметра = Врег("ПредставлениеОрганизации") Тогда
	
		Если ЗначениеЗаполнено(СведенияОбОрганизации.Представление) Тогда
			Результат = СведенияОбОрганизации.Представление;
		ИначеЕсли ЗначениеЗаполнено(СведенияОбОрганизации.СокращенноеНаименование) Тогда
			Результат = СведенияОбОрганизации.СокращенноеНаименование;
		Иначе
			Результат = СтроковыеФункцииКлиентСервер.СформироватьСтрокуСимволов("_", 50);
			Успешно = Ложь;
		КонецЕсли;
	
	ИначеЕсли ИмяПараметра = Врег("ПолноеНаименованиеКонтрагента") Тогда

		Если ЗначениеЗаполнено(СведенияОКонтрагенте.ПолноеНаименование) Тогда
			Результат = СведенияОКонтрагенте.ПолноеНаименование;
		ИначеЕсли ЗначениеЗаполнено(СведенияОКонтрагенте.СокращенноеНаименование) Тогда
			Результат = СведенияОКонтрагенте.СокращенноеНаименование;
		ИначеЕсли ЗначениеЗаполнено(СведенияОКонтрагенте.Представление) Тогда
			Результат = СведенияОКонтрагенте.Представление;
		Иначе
			Результат = СтроковыеФункцииКлиентСервер.СформироватьСтрокуСимволов("_", 50);
			Успешно = Ложь;
		КонецЕсли;
		
	ИначеЕсли ИмяПараметра = Врег("ПредставлениеКонтрагента") Тогда

		Если ЗначениеЗаполнено(СведенияОКонтрагенте.Представление) Тогда
			Результат = СведенияОКонтрагенте.Представление;
		ИначеЕсли ЗначениеЗаполнено(СведенияОКонтрагенте.СокращенноеНаименование) Тогда
			Результат = СведенияОКонтрагенте.СокращенноеНаименование;
		Иначе
			Результат = СтроковыеФункцииКлиентСервер.СформироватьСтрокуСимволов("_", 50);
			Успешно = Ложь;
		КонецЕсли;
		
	ИначеЕсли ИмяПараметра = Врег("ПочтовыйАдресКонтрагента") Тогда
	
		Если ЗначениеЗаполнено(СведенияОКонтрагенте.ПочтовыйАдрес) Тогда
			Результат = СведенияОКонтрагенте.ПочтовыйАдрес;
		Иначе
			Результат = СтроковыеФункцииКлиентСервер.СформироватьСтрокуСимволов("_", 50);
			Успешно = Ложь;
		КонецЕсли;
		
	ИначеЕсли ИмяПараметра = Врег("АдресДоставкиКонтрагента") Тогда
	
		Если ЗначениеЗаполнено(СведенияОДоговоре.АдресДоставкиКонтрагента) Тогда
			Результат = СведенияОДоговоре.АдресДоставкиКонтрагента.ПредставлениеПолное;
		Иначе
			Результат = СтроковыеФункцииКлиентСервер.СформироватьСтрокуСимволов("_", 50);
			Успешно = Ложь;
		КонецЕсли;
	
	ИначеЕсли ИмяПараметра = Врег("ПочтовыйАдресОрганизации") Тогда

		Если ЗначениеЗаполнено(СведенияОбОрганизации.ПочтовыйАдрес) Тогда
			Результат = СведенияОбОрганизации.ПочтовыйАдрес;
		Иначе
			Результат = СтроковыеФункцииКлиентСервер.СформироватьСтрокуСимволов("_", 50);
			Успешно = Ложь;
		КонецЕсли;
		
	ИначеЕсли ИмяПараметра = Врег("ПредставительКонтрагента") Тогда
		
		Результат = ЗначениеПараметраПредставительКонтрагента(СведенияОСделке, ЗначенияСоставногоПараметра, Успешно);

	ИначеЕсли ИмяПараметра = Врег("ПредставительОрганизации") Тогда

		Результат = ЗначениеПараметраПредставительОрганизации(СведенияОСделке, ЗначенияСоставногоПараметра, Успешно);
		
	ИначеЕсли СтрНачинаетсяС(ИмяПараметра, Врег("РуководительКонтрагента")) Тогда
		
		Падеж = ПечатьДоговоровКлиентСервер.ПадежПоИмениПараметра(ИмяПараметра);
		
		Если ЗначениеЗаполнено(СведенияОДоговоре.РуководительКонтрагента) Тогда
			
			Если ИмяПараметра = Врег("РуководительКонтрагентаСокращенно") Тогда
				Результат = ОтветственныеЛицаБП.СокращенноеФИО(СведенияОДоговоре.РуководительКонтрагента);
			Иначе
				РуководительКонтрагентаПол = ПечатьДоговоровКлиентСервер.ПорядковыйНомерПола(СведенияОДоговоре.ПолРуководителяКонтрагента);
				Результат = СклонениеПредставленийОбъектов.ПросклонятьФИО(
					СведенияОДоговоре.РуководительКонтрагента,
					Падеж,
					ПустойДоговор,
					РуководительКонтрагентаПол);
			КонецЕсли;
			
		ИначеЕсли СведенияОКонтрагенте.ЮридическоеФизическоеЛицо = Перечисления.ЮридическоеФизическоеЛицо.ФизическоеЛицо Тогда
			// У физического лица может не быть руководителя, тогда выводим его самого
			
			Если ИмяПараметра = Врег("РуководительКонтрагентаСокращенно") Тогда
				Результат = ОтветственныеЛицаБП.СокращенноеФИО(СведенияОКонтрагенте.ПолноеНаименование);
			Иначе
				ПолФизическогоЛица = СотрудникиКлиентСервер.ОпределитьПолПоОтчеству(СокрП(СведенияОКонтрагенте.ПолноеНаименование));
				РуководительКонтрагентаПол = ПечатьДоговоровКлиентСервер.ПорядковыйНомерПола(ПолФизическогоЛица);
				Результат = СклонениеПредставленийОбъектов.ПросклонятьФИО(
					СведенияОКонтрагенте.ПолноеНаименование,
					Падеж,
					СведенияОДоговоре.Владелец,
					РуководительКонтрагентаПол);
			КонецЕсли;
			
		Иначе
			
			Результат = СтроковыеФункцииКлиентСервер.СформироватьСтрокуСимволов("_", 30);
			Успешно = Ложь;
			
		КонецЕсли;
		
	ИначеЕсли СтрНачинаетсяС(ИмяПараметра, Врег("РуководительОрганизации")) Тогда
		
		Если ЗначениеЗаполнено(СведенияОДоговоре.Руководитель) Тогда
			
			Если ИмяПараметра = Врег("РуководительОрганизацииСокращенно") тогда
				Результат = ОтветственныеЛицаБП.СокращенноеФИО(СведенияОДоговоре.РуководительФИО);
			Иначе
				Падеж = ПечатьДоговоровКлиентСервер.ПадежПоИмениПараметра(ИмяПараметра);
				РуководительПол = ПечатьДоговоровКлиентСервер.ПорядковыйНомерПола(СведенияОДоговоре.РуководительПол);
				Результат = СклонениеПредставленийОбъектов.ПросклонятьФИО(
					СведенияОДоговоре.РуководительФИО,
					Падеж,
					СведенияОДоговоре.Руководитель,
					РуководительПол);
			КонецЕсли;
			
		Иначе
			
			Результат = СтроковыеФункцииКлиентСервер.СформироватьСтрокуСимволов("_", 30);
			Успешно = Ложь;
			
		КонецЕсли;
		
		
	ИначеЕсли СтрНачинаетсяС(ИмяПараметра, Врег("РуководительФИО")) Тогда
		
		Если ЗначениеЗаполнено(СведенияДокумента.РуководительФИО) Тогда
			
			Если ИмяПараметра = Врег("РуководительФИОСокращенное") тогда
				Результат = ОтветственныеЛицаБП.СокращенноеФИО(СведенияДокумента.РуководительФИО);
			Иначе
				Результат = СведенияДокумента.РуководительФИО;
			КонецЕсли;
			
		Иначе
			
			Результат = СтроковыеФункцииКлиентСервер.СформироватьСтрокуСимволов("_", 20);
			Успешно = Ложь;
			
		КонецЕсли;
		
		
	ИначеЕсли СтрНачинаетсяС(ИмяПараметра, Врег("РуководительДолжность")) Тогда
		
		Если ЗначениеЗаполнено(СведенияДокумента.РуководительДолжность) Тогда
			
			Если ЗначениеЗаполнено(СведенияДокумента.РуководительДолжностьНаименование) Тогда
				Результат = СведенияДокумента.РуководительДолжностьНаименование;
			Иначе
				Результат = СведенияДокумента.РуководительДолжность.Наименование;
			КонецЕсли;
			
		Иначе
			
			Результат = СтроковыеФункцииКлиентСервер.СформироватьСтрокуСимволов("_", 30);
			Успешно = Ложь;
			
		КонецЕсли;
		
	ИначеЕсли СтрНачинаетсяС(ИмяПараметра, Врег("ЗаРуководителяНаОсновании")) Тогда
		
		Если ЗначениеЗаполнено(СведенияДокумента.ЗаРуководителяНаОсновании) Тогда
			
			Если ЗначениеЗаполнено(СведенияДокумента.ЗаРуководителяНаОснованииНаименование) Тогда
				Результат = "Основание подписи: " + СведенияДокумента.ЗаРуководителяНаОснованииНаименование;
			Иначе
				Результат = "Основание подписи: " + СведенияДокумента.ЗаРуководителяНаОсновании.Наименование;
			КонецЕсли;
			
		Иначе
			
			Результат = СтроковыеФункцииКлиентСервер.СформироватьСтрокуСимволов("_", 20);
			Успешно = Ложь;
			
		КонецЕсли;
		
	ИначеЕсли ИмяПараметра = Врег("СвидетельствоКонтрагента") Тогда
	
		Если СведенияОКонтрагенте.ЮридическоеФизическоеЛицо = Перечисления.ЮридическоеФизическоеЛицо.ЮридическоеЛицо Тогда
			// Реквизит в справочнике доступен только для ИП
			Результат = "";
		ИначеЕсли НЕ ЗначениеЗаполнено(СведенияОКонтрагенте.ОГРН) Тогда
			// Физлицо может быть частным лицом (не ИП), в таком случае реквизиты свидетельства не выводим
			Результат = "";
		Иначе
			Если ЗначениеЗаполнено(СведенияОКонтрагенте.СвидетельствоСерияНомер) Тогда
				СвидетельствоСерияНомер = СведенияОКонтрагенте.СвидетельствоСерияНомер;
			Иначе
				СвидетельствоСерияНомер = СтроковыеФункцииКлиентСервер.СформироватьСтрокуСимволов("_", 12);
				Успешно = Ложь;
			КонецЕсли;
		
			Если ЗначениеЗаполнено(СведенияОКонтрагенте.СвидетельствоДатаВыдачи) Тогда
				ДатаВыдачиСтрокой = Формат(СведенияОКонтрагенте.СвидетельствоДатаВыдачи, "ДЛФ=DD");
			Иначе
				ДатаВыдачиСтрокой = НСтр("ru = '"" __ "" ______________ 20__ г.'");
				Успешно = Ложь;
			КонецЕсли;
			Результат = НСтр("ru = 'Свидетельство о государственной регистрации %1% от %2%'");
			ЗначенияСоставногоПараметра.Добавить(СвидетельствоСерияНомер);
			ЗначенияСоставногоПараметра.Добавить(ДатаВыдачиСтрокой);
		КонецЕсли;

	ИначеЕсли ИмяПараметра = Врег("СвидетельствоОрганизации") Тогда
	
		Если СведенияОбОрганизации.ЮридическоеФизическоеЛицо = Перечисления.ЮридическоеФизическоеЛицо.ЮридическоеЛицо Тогда
			// Реквизит в справочнике доступен только для ИП
			Результат = "";
		Иначе
			Если ЗначениеЗаполнено(СведенияОбОрганизации.СвидетельствоСерияНомер) Тогда
				СвидетельствоСерияНомер = СведенияОбОрганизации.СвидетельствоСерияНомер;
			Иначе
				СвидетельствоСерияНомер = СтроковыеФункцииКлиентСервер.СформироватьСтрокуСимволов("_", 12);
				Успешно = Ложь;
			КонецЕсли;
		
			Если ЗначениеЗаполнено(СведенияОбОрганизации.СвидетельствоДатаВыдачи) Тогда
				ДатаВыдачиСтрокой = Формат(СведенияОбОрганизации.СвидетельствоДатаВыдачи, "ДЛФ=DD");
			Иначе
				ДатаВыдачиСтрокой = НСтр("ru = '"" __ "" ______________ 20__ г.'");
				Успешно = Ложь;
			КонецЕсли;
			Результат = НСтр("ru = 'Свидетельство о государственной регистрации %1% от %2%'");
			ЗначенияСоставногоПараметра.Добавить(СвидетельствоСерияНомер);
			ЗначенияСоставногоПараметра.Добавить(ДатаВыдачиСтрокой);
		КонецЕсли;

	ИначеЕсли ИмяПараметра = Врег("СловоИменуемоеДляКонтрагента") Тогда
		
		Если ЗначениеЗаполнено(СведенияОКонтрагенте.ИндивидуальныйПредприниматель) Тогда
			ПолФизическогоЛица = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(
				СведенияОКонтрагенте.ИндивидуальныйПредприниматель, "Пол");
			Если ПолФизическогоЛица = Перечисления.ПолФизическогоЛица.Мужской Тогда
				ОкончаниеМорфемы = "ый";
			ИначеЕсли ПолФизическогоЛица = Перечисления.ПолФизическогоЛица.Женский Тогда
				ОкончаниеМорфемы = "ай";
			Иначе
				ОкончаниеМорфемы = "ое (-ый, -ая)";
			КонецЕсли;
		ИначеЕсли СведенияОКонтрагенте.ЮридическоеФизическоеЛицо = Перечисления.ЮридическоеФизическоеЛицо.ФизическоеЛицо Тогда
			ПолФизическогоЛица = СотрудникиКлиентСервер.ОпределитьПолПоОтчеству(СокрП(СведенияОКонтрагенте.ПолноеНаименование));
			Если ПолФизическогоЛица = Перечисления.ПолФизическогоЛица.Мужской Тогда
				ОкончаниеМорфемы = "ый";
			ИначеЕсли ПолФизическогоЛица = Перечисления.ПолФизическогоЛица.Женский Тогда
				ОкончаниеМорфемы = "ая";
			Иначе
				ОкончаниеМорфемы = "ое (-ый, -ая)";
			КонецЕсли;
		ИначеЕсли СведенияОКонтрагенте.ЮридическоеФизическоеЛицо = Перечисления.ЮридическоеФизическоеЛицо.ЮридическоеЛицо Тогда
			ОкончаниеМорфемы = "ое";
		Иначе
			ОкончаниеМорфемы = "ое (-ый, -ая)";
		КонецЕсли;
		
		Результат = "именуем" + ОкончаниеМорфемы;
		
	ИначеЕсли ИмяПараметра = Врег("СловоИменуемоеДляОрганизации") Тогда
		
		Если ЗначениеЗаполнено(СведенияОбОрганизации.ИндивидуальныйПредприниматель) Тогда
			ПолФизическогоЛица = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(
				СведенияОбОрганизации.ИндивидуальныйПредприниматель, "Пол");
			Если ПолФизическогоЛица = Перечисления.ПолФизическогоЛица.Мужской Тогда
				ОкончаниеМорфемы = "ый";
			ИначеЕсли ПолФизическогоЛица = Перечисления.ПолФизическогоЛица.Женский Тогда
				ОкончаниеМорфемы = "ая";
			Иначе
				ОкончаниеМорфемы = "ое (-ый, -ая)";
			КонецЕсли;
		ИначеЕсли СведенияОбОрганизации.ЮридическоеФизическоеЛицо = Перечисления.ЮридическоеФизическоеЛицо.ЮридическоеЛицо Тогда
			ОкончаниеМорфемы = "ое";
		Иначе
			ОкончаниеМорфемы = "ое (-ый, -ая)";
		КонецЕсли;
		
		Результат = "именуем" + ОкончаниеМорфемы;
		
	ИначеЕсли ИмяПараметра = Врег("НачалоДействияДоговора") Тогда
	
		Если ЗначениеЗаполнено(СведенияОДоговоре.НачалоДействия) Тогда
			Результат = Формат(СведенияОДоговоре.НачалоДействия, "ДЛФ=DD");
		Иначе
			Результат = НСтр("ru = '"" __ "" ______________ 20__ г.'");
			Успешно = Ложь;                   
		КонецЕсли;
		
	ИначеЕсли ИмяПараметра = Врег("СрокДействияДоговора") Тогда
	
		Если ЗначениеЗаполнено(СведенияОДоговоре.СрокДействия) Тогда
			Результат = Формат(СведенияОДоговоре.СрокДействия, "ДЛФ=DD");
		Иначе
			Результат = НСтр("ru = '"" __ "" ______________ 20__ г.'");
			Успешно = Ложь;                   
		КонецЕсли;
		
	ИначеЕсли ИмяПараметра = Врег("СрокДействияДоговораСОплатой") Тогда
	
		Если ЗначениеЗаполнено(СведенияОДоговоре.СрокДействия) Тогда
			СрокДействияДоговораСОплатой = СведенияОДоговоре.СрокДействия + 30 * 86400;
			Результат = Формат(СрокДействияДоговораСОплатой, "ДЛФ=DD");
		Иначе
			Результат = НСтр("ru = '"" __ "" ______________ 20__ г.'");
			Успешно = Ложь;                   
		КонецЕсли;		
		
	ИначеЕсли ИмяПараметра = Врег("СрокОплатыПоДоговору") Тогда
	
		Если ЗначениеЗаполнено(СведенияОДоговоре.СрокОплаты) Тогда
			Результат = Формат(СведенияОДоговоре.СрокОплаты, "ЧГ=");
		Иначе
			Результат = СтроковыеФункцииКлиентСервер.СформироватьСтрокуСимволов("_", 3);
			Успешно = Ложь;
		КонецЕсли;
	
	ИначеЕсли ИмяПараметра = Врег("СрокОплатыПоДоговоруПрописью") Тогда
		
		Если ЗначениеЗаполнено(СведенияОДоговоре.СрокОплаты) Тогда
			Результат = ЧислоПрописью(СведенияОДоговоре.СрокОплаты, , ", , , м, , , , ж, 0");
		Иначе
			Результат = СтроковыеФункцииКлиентСервер.СформироватьСтрокуСимволов("_", 15);
			Успешно = Ложь;
		КонецЕсли;
	
	ИначеЕсли ИмяПараметра = Врег("СуммаДокумента") Тогда
		
		Если СведенияДокумента <> Неопределено
			И ЗначениеЗаполнено(СведенияДокумента.СуммаСНДС) Тогда
			Результат = ОбщегоНазначенияБПВызовСервера.ФорматСумм(
				СведенияДокумента.СуммаСНДС, СведенияДокумента.ВалютаДокумента);
		Иначе
			Результат = СтроковыеФункцииКлиентСервер.СформироватьСтрокуСимволов("_", 15);
			Успешно = Ложь;
		КонецЕсли;

	ИначеЕсли ИмяПараметра = Врег("СуммаДокументаПрописью") Тогда
		
		Если СведенияДокумента <> Неопределено
			И ЗначениеЗаполнено(СведенияДокумента.СуммаСНДС) Тогда
			Результат = ОбщегоНазначенияБПВызовСервера.СформироватьСуммуПрописью(
				СведенияДокумента.СуммаСНДС, СведенияДокумента.ВалютаДокумента);
		Иначе
			Результат = СтроковыеФункцииКлиентСервер.СформироватьСтрокуСимволов("_", 30);
			Успешно = Ложь;
		КонецЕсли;

	ИначеЕсли ИмяПараметра = Врег("СуммаДокументаБезНДС") Тогда
		
		Если СведенияДокумента <> Неопределено
			И СведенияДокумента.СуммаСНДС - СведенияДокумента.СуммаНДС <> 0 Тогда
			Результат = ОбщегоНазначенияБПВызовСервера.ФорматСумм(
				СведенияДокумента.СуммаСНДС - СведенияДокумента.СуммаНДС, СведенияДокумента.ВалютаДокумента);
		Иначе
			Результат = СтроковыеФункцииКлиентСервер.СформироватьСтрокуСимволов("_", 15);
			Успешно = Ложь;
		КонецЕсли;

	ИначеЕсли ИмяПараметра = Врег("СуммаДокументаБезНДСПрописью") Тогда
		
		Если СведенияДокумента <> Неопределено
			И СведенияДокумента.СуммаСНДС - СведенияДокумента.СуммаНДС <> 0 Тогда
			Результат = ОбщегоНазначенияБПВызовСервера.СформироватьСуммуПрописью(
				СведенияДокумента.СуммаСНДС - СведенияДокумента.СуммаНДС, СведенияДокумента.ВалютаДокумента);
		Иначе
			Результат = СтроковыеФункцииКлиентСервер.СформироватьСтрокуСимволов("_", 30);
			Успешно = Ложь;
		КонецЕсли;

	ИначеЕсли ИмяПараметра = Врег("СуммаНДС") Тогда
		
		Если СведенияДокумента <> Неопределено Тогда
			Если ЗначениеЗаполнено(СведенияДокумента.СуммаНДС) Тогда
				Результат = ОбщегоНазначенияБПВызовСервера.ФорматСумм(
					СведенияДокумента.СуммаНДС, СведенияДокумента.ВалютаДокумента);
			Иначе
				Результат = НСтр("ru = 'Без налога (НДС)'");
			КонецЕсли;
		Иначе
			Результат = СтроковыеФункцииКлиентСервер.СформироватьСтрокуСимволов("_", 15);
			Успешно = Ложь;
		КонецЕсли;

	ИначеЕсли ИмяПараметра = Врег("СуммаНДСПрописью") Тогда
		
		Если СведенияДокумента <> Неопределено Тогда
			Если ЗначениеЗаполнено(СведенияДокумента.СуммаНДС) Тогда
				Результат = ОбщегоНазначенияБПВызовСервера.СформироватьСуммуПрописью(
					СведенияДокумента.СуммаНДС, СведенияДокумента.ВалютаДокумента);
			Иначе
				Результат = НСтр("ru = 'Без налога (НДС)'");
			КонецЕсли;
		Иначе
			Результат = СтроковыеФункцииКлиентСервер.СформироватьСтрокуСимволов("_", 15);
			Успешно = Ложь;
		КонецЕсли;
	
	ИначеЕсли ИмяПараметра = Врег("ТелефонКонтрагента") Тогда
		
		Если ЗначениеЗаполнено(СведенияОКонтрагенте.Телефоны) Тогда
			Результат = СведенияОКонтрагенте.Телефоны;
		Иначе
			Результат = СтроковыеФункцииКлиентСервер.СформироватьСтрокуСимволов("_", 20);
			Успешно = Ложь;
		КонецЕсли;
	
	ИначеЕсли ИмяПараметра = Врег("ТелефонОрганизации") Тогда

		Если ЗначениеЗаполнено(СведенияОбОрганизации.Телефоны) Тогда
			Результат = СведенияОбОрганизации.Телефоны;
		Иначе
			Результат = СтроковыеФункцииКлиентСервер.СформироватьСтрокуСимволов("_", 20);
			Успешно = Ложь;
		КонецЕсли;
	
	ИначеЕсли ИмяПараметра = Врег("ФаксКонтрагента") Тогда

		Если ЗначениеЗаполнено(СведенияОКонтрагенте.Факс) Тогда
			Результат = СведенияОКонтрагенте.Факс;
		Иначе
			Результат = СтроковыеФункцииКлиентСервер.СформироватьСтрокуСимволов("_", 20);
			Успешно = Ложь;
		КонецЕсли;
	
	ИначеЕсли ИмяПараметра = Врег("ФаксОрганизации") Тогда

		Если ЗначениеЗаполнено(СведенияОбОрганизации.Факс) Тогда
			Результат = СведенияОбОрганизации.Факс;
		Иначе
			Результат = СтроковыеФункцииКлиентСервер.СформироватьСтрокуСимволов("_", 20);
			Успешно = Ложь;
		КонецЕсли;
	
	ИначеЕсли ИмяПараметра = Врег("ФактическийАдресКонтрагента") Тогда
	
		Если ЗначениеЗаполнено(СведенияОКонтрагенте.ФактическийАдрес) Тогда
			Результат = СведенияОКонтрагенте.ФактическийАдрес;
		Иначе
			Результат = СтроковыеФункцииКлиентСервер.СформироватьСтрокуСимволов("_", 50);
			Успешно = Ложь;
		КонецЕсли;
	
	ИначеЕсли ИмяПараметра = Врег("ФактическийАдресОрганизации") Тогда

		Если ЗначениеЗаполнено(СведенияОбОрганизации.ФактическийАдрес) Тогда
			Результат = СведенияОбОрганизации.ФактическийАдрес;
		Иначе
			Результат = СтроковыеФункцииКлиентСервер.СформироватьСтрокуСимволов("_", 50);
			Успешно = Ложь;
		КонецЕсли;
	
	ИначеЕсли ИмяПараметра = Врег("ЮридическийАдресКонтрагента") Тогда

		Если ЗначениеЗаполнено(СведенияОКонтрагенте.ЮридическийАдрес) Тогда
			Результат = СведенияОКонтрагенте.ЮридическийАдрес;
		Иначе
			Результат = СтроковыеФункцииКлиентСервер.СформироватьСтрокуСимволов("_", 50);
			Успешно = Ложь;
		КонецЕсли;
	
	ИначеЕсли ИмяПараметра = Врег("ЮридическийАдресОрганизации") Тогда
	
		Если ЗначениеЗаполнено(СведенияОбОрганизации.ЮридическийАдрес) Тогда
			Результат = СведенияОбОрганизации.ЮридическийАдрес;
		Иначе
			Результат = СтроковыеФункцииКлиентСервер.СформироватьСтрокуСимволов("_", 50);
			Успешно = Ложь;
		КонецЕсли;
		
	ИначеЕсли ИмяПараметра = Врег("СловоВТомЧислеНДС") Тогда
	
		Если ЗначениеЗаполнено(СведенияДокумента.СловоВТомЧислеНДС) Тогда
			Результат = СведенияДокумента.СловоВТомЧислеНДС;
		Иначе
			Результат = "";
			Успешно = Ложь;
		КонецЕсли;
		
	ИначеЕсли ИмяПараметра = Врег("СловоДоговорИлиКонтракт") Тогда
	
		Если ЗначениеЗаполнено(СведенияОДоговоре.СловоДоговорИлиКонтракт) Тогда
			Результат = СведенияОДоговоре.СловоДоговорИлиКонтракт;
		Иначе
			Результат = "договор";
			Успешно = Ложь;
		КонецЕсли;
		
	ИначеЕсли ИмяПараметра = Врег("СловоСНДСБезНДС") Тогда
	
		Если ЗначениеЗаполнено(СведенияДокумента.СловоСНДСБезНДС) Тогда
			Результат = СведенияДокумента.СловоСНДСБезНДС;
		Иначе
			Результат = "";
			Успешно = Ложь;
		КонецЕсли;	
	
	Иначе
		// Пытаемся найти в таблицах доп. свойств
		СтрокаТаблицы = СведенияОДоговоре.ТаблицаДопСвойств.Найти(ИмяПараметра, "НаименованиеСвойства");
		Если СтрокаТаблицы = Неопределено Тогда
			СтрокаТаблицы = СведенияОКонтрагенте.ТаблицаДопСвойств.Найти(ИмяПараметра, "НаименованиеСвойства");
		КонецЕсли;
		Если СтрокаТаблицы = Неопределено Тогда
			СтрокаТаблицы = СведенияОбОрганизации.ТаблицаДопСвойств.Найти(ИмяПараметра, "НаименованиеСвойства");
		КонецЕсли;
		Если СведенияДокумента.Свойство("ТаблицаДопСвойств") тогда
			Если СтрокаТаблицы = Неопределено
				И СведенияДокумента <> Неопределено Тогда
				СтрокаТаблицы = СведенияДокумента.ТаблицаДопСвойств.Найти(ИмяПараметра, "НаименованиеСвойства");
			КонецЕсли;
		КонецЕсли;
		
		Если СтрокаТаблицы <> Неопределено Тогда
			Результат = ПредставлениеДопСвойства(СтрокаТаблицы);
		КонецЕсли;
		
		Если Результат = Неопределено Тогда
			Результат = СтроковыеФункцииКлиентСервер.СформироватьСтрокуСимволов("_", 30);
			Успешно = Ложь;
		КонецЕсли;
	
	КонецЕсли;

	// Для некоторых параметров может быть пустая строка, 
	// поэтому проверяем только на Неопределено.
	Если Результат = Неопределено Тогда
		Результат = СтроковыеФункцииКлиентСервер.СформироватьСтрокуСимволов("_", 30);
		Успешно = Ложь;
	КонецЕсли;

	Возврат Результат;

КонецФункции

&Вместо("СведенияОСделке")
Функция Базар_СведенияОСделке(СсылкаНаОбъект, ШаблонДоговора) Экспорт
	
	ДанныеОСделке = ПродолжитьВызов(СсылкаНаОбъект, ШаблонДоговора);
	ДоговорКонтрагента = ДоговорКонтрагентаДляОбъекта(СсылкаНаОбъект);
	
	Если НЕ ЗначениеЗаполнено(ДоговорКонтрагента) Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	Если ДанныеОСделке.Свойство("СведенияОСчетеНаОплату") тогда
		ДанныеОСделке.Вставить("СведенияДокумента", ДанныеОСделке.СведенияОСчетеНаОплату);
		ДанныеОСделке.Удалить("СведенияОСчетеНаОплату");
	КонецЕсли;
	
	ДанныеОСделке.СведенияОДоговоре.Вставить("ЭтоДоговорПоставкиГосЗакупок", ГосЗакупкиСервер.ЭтоДоговорПоставкиГосЗакупок(ДоговорКонтрагента));
	
	Если ДанныеОСделке.СведенияОДоговоре.ЭтоДоговорПоставкиГосЗакупок тогда
		НаименованиеДоговора = ДоговорКонтрагента.Наименование;
		Если СтрНайти(НаименованиеДоговора, "контракт") > 0 ИЛИ
			СтрНайти(НаименованиеДоговора, "договор") = 0 тогда
			ДанныеОСделке.СведенияОДоговоре.Вставить("СловоДоговорИлиКонтракт", "контракт");
		Иначе
			ДанныеОСделке.СведенияОДоговоре.Вставить("СловоДоговорИлиКонтракт", "договор");
		КонецЕсли;
	Иначе
		ДанныеОСделке.СведенияОДоговоре.Вставить("СловоДоговорИлиКонтракт", "договор");
	КонецЕсли;
	
	Если ДанныеОСделке.Свойство("СведенияОДоговоре") тогда
		ДанныеАдресаДоставки = УправлениеКонтактнойИнформациейСлужебный.ДанныеАдресаДоставкиПоУмолчанию(ДоговорКонтрагента.Владелец);
		
		ДанныеОСделке.СведенияОДоговоре.Вставить("АдресДоставкиКонтрагента", ДанныеАдресаДоставки);
		ДанныеОСделке.СведенияОДоговоре.Вставить("НачалоДействия", ДоговорКонтрагента.НачалоДействия);
		ДанныеОСделке.СведенияОДоговоре.Вставить("НомерРеестровойЗаписи", ДоговорКонтрагента.НомерРеестровойЗаписи);
		ДанныеОСделке.СведенияОДоговоре.Вставить("ЗаконРегулирующийОтношения", ДоговорКонтрагента.ЗаконРегулирующийОтношения);
		
	КонецЕСли;
	
	СведенияДокумента = СведенияОДокументе(ДоговорКонтрагента, СсылкаНаОбъект);
	ДанныеОСделке.Вставить("СведенияДокумента", СведенияДокумента);

	Возврат ДанныеОСделке;

КонецФункции

Функция СведенияОДокументе(ДоговорКонтрагента, Знач СсылкаНаДокумент)
	
	СведенияДокумента = ПустыеСведенияДокумента();
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ДоговорКонтрагента", ДоговорКонтрагента);
	
	Если ТипЗнч(СсылкаНаДокумент) = Тип("ДокументСсылка.РеализацияТоваровУслуг") тогда
		
		Запрос.УстановитьПараметр("Ссылка", СсылкаНаДокумент);
		Запрос.УстановитьПараметр("ЭтоКонтрактныйДоговор", ГосЗакупкиСервер.ЭтоДоговорПоставкиГосЗакупок(ДоговорКонтрагента));
		
		Запрос.Текст =
		"ВЫБРАТЬ
		|	ПечатныеНаименованияСпецификаций.НоменклатураГосЗакупок КАК НоменклатураГосЗакупок,
		|	МАКСИМУМ(ПечатныеНаименованияСпецификаций.ПечатноеНаименование) КАК ПечатноеНаименование
		|ПОМЕСТИТЬ ПечатныеНаименованияСпецификаций
		|ИЗ
		|	РегистрСведений.Базар_ПечатныеНаименованияСпецификаций КАК ПечатныеНаименованияСпецификаций
		|ГДЕ
		|	ПечатныеНаименованияСпецификаций.ДоговорКонтрагента = &ДоговорКонтрагента
		|	И &ЭтоКонтрактныйДоговор
		|
		|СГРУППИРОВАТЬ ПО
		|	ПечатныеНаименованияСпецификаций.НоменклатураГосЗакупок
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	РеализацияТоваровУслугТовары.Ссылка КАК Ссылка,
		|	РеализацияТоваровУслугТовары.НомерСтроки КАК НомерСтроки,
		|	ЕСТЬNULL(ПечатныеНаименованияСпецификаций.ПечатноеНаименование, РеализацияТоваровУслугТовары.Номенклатура.НаименованиеПолное) КАК Наименование,
		|	ВЫБОР
		|		КОГДА &ЭтоКонтрактныйДоговор
		|			ТОГДА РеализацияТоваровУслугТовары.ЕдиницаИзмеренияГосЗакупок
		|		ИНАЧЕ РеализацияТоваровУслугТовары.ЕдиницаИзмерения
		|	КОНЕЦ КАК ЕдиницаИзмерения,
		|	ПРЕДСТАВЛЕНИЕ(РеализацияТоваровУслугТовары.СтавкаНДС) КАК СтавкаНДС,
		|	СУММА(ВЫБОР
		|			КОГДА &ЭтоКонтрактныйДоговор
		|				ТОГДА РеализацияТоваровУслугТовары.КоличествоГосЗакупок
		|			ИНАЧЕ РеализацияТоваровУслугТовары.Количество
		|		КОНЕЦ) КАК Количество,
		|	ВЫБОР
		|		КОГДА &ЭтоКонтрактныйДоговор
		|			ТОГДА РеализацияТоваровУслугТовары.ЦенаГосЗакупок
		|		ИНАЧЕ РеализацияТоваровУслугТовары.Цена
		|	КОНЕЦ КАК Цена,
		|	СУММА(ВЫБОР
		|			КОГДА РеализацияТоваровУслугТовары.Ссылка.СуммаВключаетНДС
		|				ТОГДА РеализацияТоваровУслугТовары.Сумма
		|			ИНАЧЕ РеализацияТоваровУслугТовары.Сумма + РеализацияТоваровУслугТовары.СуммаНДС
		|		КОНЕЦ) КАК СуммаСНДС,
		|	СУММА(РеализацияТоваровУслугТовары.СуммаНДС) КАК СуммаНДС
		|ИЗ
		|	Документ.РеализацияТоваровУслуг.Товары КАК РеализацияТоваровУслугТовары
		|		ЛЕВОЕ СОЕДИНЕНИЕ ПечатныеНаименованияСпецификаций КАК ПечатныеНаименованияСпецификаций
		|		ПО РеализацияТоваровУслугТовары.НоменклатураГосЗакупок = ПечатныеНаименованияСпецификаций.НоменклатураГосЗакупок
		|			И (&ЭтоКонтрактныйДоговор)
		|ГДЕ
		|	РеализацияТоваровУслугТовары.Ссылка = &Ссылка
		|
		|СГРУППИРОВАТЬ ПО
		|	РеализацияТоваровУслугТовары.НомерСтроки,
		|	РеализацияТоваровУслугТовары.Ссылка,
		|	ВЫБОР
		|		КОГДА &ЭтоКонтрактныйДоговор
		|			ТОГДА РеализацияТоваровУслугТовары.ЕдиницаИзмеренияГосЗакупок
		|		ИНАЧЕ РеализацияТоваровУслугТовары.ЕдиницаИзмерения
		|	КОНЕЦ,
		|	ЕСТЬNULL(ПечатныеНаименованияСпецификаций.ПечатноеНаименование, РеализацияТоваровУслугТовары.Номенклатура.НаименованиеПолное),
		|	ВЫБОР
		|		КОГДА &ЭтоКонтрактныйДоговор
		|			ТОГДА РеализацияТоваровУслугТовары.ЦенаГосЗакупок
		|		ИНАЧЕ РеализацияТоваровУслугТовары.Цена
		|	КОНЕЦ,
		|	ПРЕДСТАВЛЕНИЕ(РеализацияТоваровУслугТовары.СтавкаНДС)
		|
		|УПОРЯДОЧИТЬ ПО
		|	НомерСтроки";
		
	ИначеЕсли ТипЗнч(СсылкаНаДокумент) = Тип("СправочникСсылка.ДоговорыКонтрагентов") тогда
		
		Запрос.Текст =
		"ВЫБРАТЬ
		|	СпецификацияДоговораТовары.Ссылка КАК Ссылка,
		|	СпецификацияДоговораТовары.НомерСтроки КАК НомерСтроки,
		|	СпецификацияДоговораТовары.ПечатноеНаименование КАК Наименование,
		|	СпецификацияДоговораТовары.ЕдиницаИзмеренияГосЗакупок КАК ЕдиницаИзмерения,
		|	ПРЕДСТАВЛЕНИЕ(СпецификацияДоговораТовары.СтавкаНДС) КАК СтавкаНДС,
		|	СУММА(СпецификацияДоговораТовары.КоличествоГосЗакупок) КАК Количество,
		|	СпецификацияДоговораТовары.ЦенаГосЗакупок КАК Цена,
		|	СУММА(ВЫБОР
		|			КОГДА СпецификацияДоговораТовары.Ссылка.СуммаВключаетНДС
		|				ТОГДА СпецификацияДоговораТовары.Сумма
		|			ИНАЧЕ СпецификацияДоговораТовары.Сумма + СпецификацияДоговораТовары.СуммаНДС
		|		КОНЕЦ) КАК СуммаСНДС,
		|	СУММА(СпецификацияДоговораТовары.СуммаНДС) КАК СуммаНДС
		|ИЗ
		|	РегистрНакопления.ТоварыГосЗакупок.Обороты(, , Регистратор, ДоговорКонтрагента = &ДоговорКонтрагента) КАК ТоварыГосЗакупокОбороты
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.СпецификацияДоговора.Товары КАК СпецификацияДоговораТовары
		|		ПО ТоварыГосЗакупокОбороты.Регистратор = СпецификацияДоговораТовары.Ссылка
		|ГДЕ
		|	ТИПЗНАЧЕНИЯ(ТоварыГосЗакупокОбороты.Регистратор) = ТИП(Документ.СпецификацияДоговора)
		|
		|СГРУППИРОВАТЬ ПО
		|	СпецификацияДоговораТовары.НомерСтроки,
		|	СпецификацияДоговораТовары.ПечатноеНаименование,
		|	СпецификацияДоговораТовары.ЦенаГосЗакупок,
		|	СпецификацияДоговораТовары.ЕдиницаИзмеренияГосЗакупок,
		|	СпецификацияДоговораТовары.Ссылка,
		|	ПРЕДСТАВЛЕНИЕ(СпецификацияДоговораТовары.СтавкаНДС)
		|
		|УПОРЯДОЧИТЬ ПО
		|	НомерСтроки";
		
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(Запрос.Текст) тогда
		Возврат СведенияДокумента;
	КонецЕсли;
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если РезультатЗапроса.Пустой() тогда
		Возврат СведенияДокумента;
	Иначе
		ВыборкаСтрок = РезультатЗапроса.Выбрать();
		ВыборкаСтрок.Следующий();
		СсылкаНаДокумент = ВыборкаСтрок.Ссылка;
	КонецЕсли;
	
	ТаблицаТовары = РезультатЗапроса.Выгрузить();
	
	Если ТипЗнч(СсылкаНаДокумент) = Тип("ДокументСсылка.РеализацияТоваровУслуг") тогда
		Если СсылкаНаДокумент.СуммаВключаетНДС тогда
			СловоСНДСБезНДС = "с НДС";
			СловоВТомЧислеНДС = "В том числе НДС";
		Иначе
			СловоСНДСБезНДС = "без НДС";
			СловоВТомЧислеНДС = "Без НДС";
		КонецЕсли;
	Иначе
		Если СсылкаНаДокумент.СуммаВключаетНДС тогда
			СловоСНДСБезНДС = "с НДС";
			СловоВТомЧислеНДС = ", в том числе НДС";
		Иначе
			СловоСНДСБезНДС = "без НДС";
			СловоВТомЧислеНДС = ", без НДС";
		КонецЕсли;
	КонецЕсли;
	
	СведенияДокумента.Вставить("СсылкаНаДокумент"        , СсылкаНаДокумент);
	СведенияДокумента.Вставить("ДатаДокумента"           , СсылкаНаДокумент.Дата);
	СведенияДокумента.Вставить("ДатаДляПолученияСведений", СсылкаНаДокумент.Дата);
	СведенияДокумента.Вставить("Организация"             , СсылкаНаДокумент.Организация);
	Если ТипЗнч(СсылкаНаДокумент) = Тип("ДокументСсылка.РеализацияТоваровУслуг") тогда
		СведенияДокумента.Вставить("Руководитель"             , СсылкаНаДокумент.Руководитель);
		СведенияДокумента.Вставить("ЗаРуководителяНаОсновании", СсылкаНаДокумент.ЗаРуководителяНаОсновании);
		СведенияДокумента.Вставить("Подразделение"            , СсылкаНаДокумент.ПодразделениеОрганизации);
	Иначе
		СведенияДокумента.Вставить("Руководитель"             , ПредопределенноеЗначение("Справочник.ФизическиеЛица.ПустаяСсылка"));
		СведенияДокумента.Вставить("ЗаРуководителяНаОсновании", ПредопределенноеЗначение("Справочник.ОснованияПраваПодписи.ПустаяСсылка"));
		СведенияДокумента.Вставить("Подразделение"            , ПредопределенноеЗначение("Справочник.ПодразделенияОрганизаций.ПустаяСсылка"));
	КонецЕсли;
	СведенияДокумента.Вставить("ВалютаДокумента"         , ОбщегоНазначенияБПВызовСервераПовтИсп.ПолучитьВалютуРегламентированногоУчета());
	СведенияДокумента.Вставить("СуммаНДС"                , ТаблицаТовары.Итог("СуммаНДС"));
	СведенияДокумента.Вставить("СуммаСНДС"               , ТаблицаТовары.Итог("СуммаСНДС"));
	СведенияДокумента.Вставить("СловоВТомЧислеНДС"       , СловоВТомЧислеНДС);
	СведенияДокумента.Вставить("СловоСНДСБезНДС"         , СловоСНДСБезНДС);
	СведенияДокумента.Вставить("ТаблицаТовары"           , ТаблицаТовары);
	
	ДатаНомерДокумента = ПечатьТорговыхДокументов.НомерДокументаРеализацииТоваровУслуг(СведенияДокумента.СсылкаНаДокумент);
	СведенияДокумента.Вставить("ДатаДокумента", ДатаНомерДокумента.ДатаДокумента);
	СведенияДокумента.Вставить("НомерДокумента", ДатаНомерДокумента.НомерДокумента);
	
	ПорядокЗаполнения = Новый Структура("ЗаполнятьРуководителя");
	ПечатьТорговыхДокументов.ЗаполнитьДанныеОтветственныхЛиц(СведенияДокумента, ПорядокЗаполнения);
	СведенияДокумента.РуководительФИОСокращенное = ОтветственныеЛицаБП.СокращенноеФИО(СведенияДокумента.РуководительФИО);
	
	Возврат СведенияДокумента;
	
КонецФункции

Функция ПустыеСведенияДокумента()
	
	ПустыеДанные = Новый Структура;
	
	ПустыеДанные.Вставить("СсылкаНаДокумент"                     , Неопределено);
	ПустыеДанные.Вставить("ДатаДокумента"                        , Неопределено);
	ПустыеДанные.Вставить("ДатаДляПолученияСведений"             , Неопределено);
	ПустыеДанные.Вставить("Организация"                          , Неопределено);
	ПустыеДанные.Вставить("Подразделение"                        , Неопределено);
	ПустыеДанные.Вставить("Руководитель"                         , Неопределено);
	ПустыеДанные.Вставить("ВалютаДокумента"                      , Неопределено);
	ПустыеДанные.Вставить("СуммаНДС"                             , Неопределено);
	ПустыеДанные.Вставить("СуммаСНДС"                            , Неопределено);
	ПустыеДанные.Вставить("СловоВТомЧислеНДС"                    , "");
	ПустыеДанные.Вставить("СловоСНДСБезНДС"                      , "");
	ПустыеДанные.Вставить("ТаблицаТовары"                        , Неопределено);
	
	ПустыеДанные.Вставить("РуководительФИО"                      ,"" );
	ПустыеДанные.Вставить("РуководительФИОСокращенное"           , "");
	ПустыеДанные.Вставить("РуководительСтруктураФИО"             ,Неопределено);
	ПустыеДанные.Вставить("ЗаРуководителяНаОсновании"            , Неопределено);
	ПустыеДанные.Вставить("ЗаРуководителяНаОснованииНаименование", "");
	ПустыеДанные.Вставить("РуководительДолжностьНаименование"    , "");
	ПустыеДанные.Вставить("РуководительДолжность"                , Неопределено);
	
	Возврат ПустыеДанные;
	
КонецФункции