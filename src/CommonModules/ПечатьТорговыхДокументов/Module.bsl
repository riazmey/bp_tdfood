Функция НомерДокументаРеализацииТоваровУслуг(СсылкаНаДокумент) Экспорт
	
	Результат = Новый Структура;
	Результат.Вставить("НомерДокумента", Строка(СсылкаНаДокумент.Номер));
	Результат.Вставить("ДатаДокумента", СсылкаНаДокумент.Дата);
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Ссылка", СсылкаНаДокумент);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ДанныеПервичныхДокументов.Номер КАК НомерДокумента,
	|	ДанныеПервичныхДокументов.Дата КАК ДатаДокумента
	|ИЗ
	|	РегистрСведений.ДанныеПервичныхДокументов КАК ДанныеПервичныхДокументов
	|ГДЕ
	|	ДанныеПервичныхДокументов.Документ = &Ссылка
	|
	|СГРУППИРОВАТЬ ПО
	|	ДанныеПервичныхДокументов.Номер,
	|	ДанныеПервичныхДокументов.Дата";
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если Выборка.Следующий() тогда
		ЗаполнитьЗначенияСвойств(Результат, Выборка);
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

&ИзменениеИКонтроль("ПечатьТОРГ12")
Функция Базар_ПечатьТОРГ12(СведенияТОРГ12, ОбъектыПечати, ПараметрыПечати)

	УстановитьПривилегированныйРежим(Истина);

	ИмяПараметровПечати = ПараметрыПечати.ИмяПараметровПечати;

	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.АвтоМасштаб         = Истина;
	ТабличныйДокумент.ОриентацияСтраницы  = ОриентацияСтраницы.Ландшафт;


	ТабличныйДокумент.КлючПараметровПечати = ИмяПараметровПечати;

	УстановитьМинимальныеПоляПечати(ТабличныйДокумент);

#Удаление
	Макет = УправлениеПечатью.МакетПечатнойФормы("ОбщийМакет.ПФ_MXL_ТОРГ12");
#КонецУдаления
#Вставка
	ИспользоватьМакетБазарТОРГ12 = Истина;
	Для Каждого СведенияОДокументе Из СведенияТОРГ12 Цикл
		Если НЕ ТипЗнч(СведенияОДокументе.Документ) = Тип("ДокументСсылка.РеализацияТоваровУслуг") тогда
			ИспользоватьМакетБазарТОРГ12 = Ложь;
			Прервать;
		Иначе
			Если НЕ ЗначениеЗаполнено(СведенияОДокументе.Договор) тогда
				ИспользоватьМакетБазарТОРГ12 = Ложь;
				Прервать;
			Иначе
				Если НЕ СведенияОДокументе.Договор.ВидДоговора = Перечисления.ВидыДоговоровКонтрагентов.СПокупателем тогда
					ИспользоватьМакетБазарТОРГ12 = Ложь;
					Прервать;
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
		
	Если ИспользоватьМакетБазарТОРГ12 тогда
		Макет = УправлениеПечатью.МакетПечатнойФормы("ОбщийМакет.Базар_ПФ_MXL_ТОРГ12");
	Иначе
		Макет = УправлениеПечатью.МакетПечатнойФормы("ОбщийМакет.ПФ_MXL_ТОРГ12");
	КонецЕсли;
#КонецВставки

	ЕстьОбластьГосконтракты = (Макет.Области.Найти("ДатаНомерГосконтракт") <> Неопределено);

	СведенияОКонтрагентах = Новый ТаблицаЗначений;
	СведенияОКонтрагентах.Колонки.Добавить("КонтрагентИзДокумента");
	СведенияОКонтрагентах.Колонки.Добавить("ДатаДляПолученияСведений");
	СведенияОКонтрагентах.Колонки.Добавить("БанковскийСчетПродавца");
	СведенияОКонтрагентах.Колонки.Добавить("СведенияОКонтрагенте");
	ОтборСведений = Новый Структура("КонтрагентИзДокумента,ДатаДляПолученияСведений,БанковскийСчетПродавца");

	ПервыйДокумент = Истина;
	КонтрагентыДляПечати = Новый Структура("Поставщик, Грузоотправитель, Покупатель, Грузополучатель");
	Для Каждого СведенияОДокументе Из СведенияТОРГ12 Цикл

		Если НЕ ПервыйДокумент Тогда
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;

		ПервыйДокумент = Ложь;

		// Запомним номер строки, с которой начали выводить текущий документ.
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;

		ТаблицаДокумента = СведенияОДокументе.ТаблицаДокумента;

		ОбластьМакетаШапка            = Макет.ПолучитьОбласть("Шапка");
		ОбластьМакетаЗаголовокТаблицы = Макет.ПолучитьОбласть("ЗаголовокТаб");
		ОбластьМакетаСтрока           = Макет.ПолучитьОбласть("Строка");
		ОбластьМакетаИтогоПоСтранице  = Макет.ПолучитьОбласть("ИтогоПоСтранице");
		ОбластьМакетаВсего            = Макет.ПолучитьОбласть("Всего");
		ОбластьМакетаПодвал           = Макет.ПолучитьОбласть("Подвал");

		// Получаем сведения об используемых в документе контрагентах с разными ролями в документообороте.
		Для каждого КонтрагентДляПечати Из КонтрагентыДляПечати Цикл

			ОтборСведений.КонтрагентИзДокумента = СведенияОДокументе[КонтрагентДляПечати.Ключ];
			ОтборСведений.ДатаДляПолученияСведений = СведенияОДокументе.ДатаДляПолученияСведений;
			БанковскийСчетПродавца = Неопределено;
			Если КонтрагентДляПечати.Ключ = "Поставщик" Тогда
				БанковскийСчетПродавца = СведенияОДокументе.БанковскийСчетПродавца;
				ОтборСведений.Вставить("БанковскийСчетПродавца", БанковскийСчетПродавца);
			Иначе
				ОтборСведений.Удалить("БанковскийСчетПродавца");
			КонецЕсли;
			НайденныеСведения = СведенияОКонтрагентах.НайтиСтроки(ОтборСведений);
			Если НайденныеСведения.Количество() = 0 Тогда

				ГосударственныйКонтрактСсылка = СведенияОДокументе.ГосударственныйКонтрактСсылка;

				СведенияОКонтрагенте = БухгалтерскийУчетПереопределяемый.СведенияОЮрФизЛице(
				ОтборСведений.КонтрагентИзДокумента,
				ОтборСведений.ДатаДляПолученияСведений,
				БанковскийСчетПродавца,
				,
				ГосударственныйКонтрактСсылка);

				НайденныеСведения = СведенияОКонтрагентах.Добавить();
				НайденныеСведения.КонтрагентИзДокумента     = ОтборСведений.КонтрагентИзДокумента;
				НайденныеСведения.ДатаДляПолученияСведений  = ОтборСведений.ДатаДляПолученияСведений;
				НайденныеСведения.БанковскийСчетПродавца    = БанковскийСчетПродавца;
				НайденныеСведения.СведенияОКонтрагенте      = СведенияОКонтрагенте;

			Иначе

				СведенияОКонтрагенте = НайденныеСведения[0].СведенияОКонтрагенте;

			КонецЕсли;
			КонтрагентыДляПечати.Вставить(КонтрагентДляПечати.Ключ, СведенияОКонтрагенте);

		КонецЦикла;

#Вставка
		Если ТипЗнч(СведенияОДокументе.Документ) = Тип("ДокументСсылка.КорректировкаПоступления") тогда
			Если ЗначениеЗаполнено(СведенияОДокументе.Документ.ИсправляемыйДокументПоступления) тогда
				НомерКорректировочногоДокумента = ПрефиксацияОбъектовКлиентСервер.НомерНаПечать(СведенияОДокументе.Документ.ИсправляемыйДокументПоступления.Номер, Истина, Ложь);
				СведенияОДокументе.Основание = СведенияОДокументе.Основание + "; ТН №" + НомерКорректировочногоДокумента + " от " + Формат(СведенияОДокументе.Документ.ИсправляемыйДокументПоступления.Дата, "ДФ=dd.MM.yyyy");
			КонецЕсли;
		КонецЕсли;
#КонецВставки
		// Выводим общие реквизиты шапки.
		ОбластьМакетаШапка.Параметры.Заполнить(СведенияОДокументе);

		ДополнительныеПараметрыШапки = Новый Структура;

		Если СведенияОДокументе.Поставщик = СведенияОДокументе.Грузоотправитель Тогда
			ДополнительныеПараметрыШапки.Вставить("ПредставлениеОрганизации", ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(КонтрагентыДляПечати.Поставщик));
		Иначе
			ДополнительныеПараметрыШапки.Вставить("ПредставлениеОрганизации", ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(
			КонтрагентыДляПечати.Грузоотправитель, "НаименованиеДляПечатныхФорм,ИНН,ФактическийАдрес,Телефоны,НомерСчета,Банк,БИК,КоррСчет"));
		КонецЕсли;

		Если ЗначениеЗаполнено(СведенияОДокументе.Подразделение) Тогда
			СведенияОПодразделении = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(СведенияОДокументе.Подразделение, "ОбособленноеПодразделение, НаименованиеПолное");
			ДополнительныеПараметрыШапки.Вставить("ПредставлениеПодразделения", ?(СведенияОПодразделении.ОбособленноеПодразделение, СведенияОПодразделении.НаименованиеПолное, ""));
		КонецЕсли;

		Если СокрЛП(СведенияОДокументе.АдресДоставки) <> "" Тогда
			ПредставлениеГрузополучателяДоАдреса    = ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(
			КонтрагентыДляПечати.Грузополучатель, "НаименованиеДляПечатныхФорм,ИНН,");
			ПредставлениеГрузополучателяПослеАдреса = ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(
			КонтрагентыДляПечати.Грузополучатель, "Телефоны,НомерСчета,Банк,БИК,КоррСчет,");
			ДополнительныеПараметрыШапки.Вставить("ПредставлениеГрузополучателя", ?(СокрЛП(ПредставлениеГрузополучателяДоАдреса) = "",
			"", ПредставлениеГрузополучателяДоАдреса+", ") + СведенияОДокументе.АдресДоставки
			+ ?(СокрЛП(ПредставлениеГрузополучателяПослеАдреса)="", "", ", "+ПредставлениеГрузополучателяПослеАдреса));
		Иначе
			ДополнительныеПараметрыШапки.Вставить("ПредставлениеГрузополучателя", ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(
			КонтрагентыДляПечати.Грузополучатель, "НаименованиеДляПечатныхФорм,ИНН,ФактическийАдрес,Телефоны,НомерСчета,Банк,БИК,КоррСчет"));
		КонецЕсли;

		ДополнительныеПараметрыШапки.Вставить("ПредставлениеПоставщика", ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(КонтрагентыДляПечати.Поставщик));
		ДополнительныеПараметрыШапки.Вставить("ПредставлениеПлательщика", ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(КонтрагентыДляПечати.Покупатель));

		// Выводим всевозможные коды
		ДополнительныеПараметрыШапки.Вставить("ОрганизацияПоОКПО",          КонтрагентыДляПечати.Грузоотправитель.КодПоОКПО);
		ДополнительныеПараметрыШапки.Вставить("ВидДеятельностиПоОКДП",      "");
		ДополнительныеПараметрыШапки.Вставить("ГрузополучательПоОКПО",      КонтрагентыДляПечати.Грузополучатель.КодПоОКПО);
		ДополнительныеПараметрыШапки.Вставить("ПоставщикПоОКПО",            КонтрагентыДляПечати.Поставщик.КодПоОКПО);
		ДополнительныеПараметрыШапки.Вставить("ПлательщикПоОКПО",           КонтрагентыДляПечати.Покупатель.КодПоОКПО);
		ДополнительныеПараметрыШапки.Вставить("ТранспортнаяНакладнаяНомер", "");
		ДополнительныеПараметрыШапки.Вставить("ТранспортнаяНакладнаяДата",  "");

		ОбластьМакетаШапка.Параметры.Заполнить(ДополнительныеПараметрыШапки);

		Если ЕстьОбластьГосконтракты Тогда
			Если ЗначениеЗаполнено(СведенияОДокументе.ГосударственныйКонтракт) Тогда
				ОбластьМакетаДатаНомер  = Макет.ПолучитьОбласть("ДатаНомерГосконтракт");

				ОбластьНомерИсправления = ОбластьМакетаДатаНомер.Области.Найти("НомерИсправленияГосконтракт");
				ОбластьДатаИсправления  = ОбластьМакетаДатаНомер.Области.Найти("ДатаИсправленияГосконтракт");
			Иначе
				ОбластьМакетаДатаНомер  = Макет.ПолучитьОбласть("ДатаНомер");

				ОбластьНомерИсправления = ОбластьМакетаДатаНомер.Области.Найти("НомерИсправления");
				ОбластьДатаИсправления  = ОбластьМакетаДатаНомер.Области.Найти("ДатаИсправления");
			КонецЕсли;

		Иначе
			ОбластьМакетаДатаНомер = ОбластьМакетаШапка;

			ОбластьНомерИсправления = ОбластьМакетаШапка.Области.Найти("НомерИсправления");
			ОбластьДатаИсправления  = ОбластьМакетаШапка.Области.Найти("ДатаИсправления");
		КонецЕсли;

		ПараметрыИсправление = Новый Структура;

		Если ЗначениеЗаполнено(СведенияОДокументе.НомерИсправления) И ЗначениеЗаполнено(СведенияОДокументе.ДатаИсправления) Тогда

			ПараметрыИсправление.Вставить("ТекстИсправления", НСтр("ru='Исправление   '"));
			ПараметрыИсправление.Вставить("НомерИсправления", СведенияОДокументе.НомерИсправления);
			ПараметрыИсправление.Вставить("ДатаИсправления",  Формат(СведенияОДокументе.ДатаИсправления, "ДФ=dd.MM.yyyy"));

			ЛинияГраницыРеквизитовИсправления = Новый Линия(ТипЛинииЯчейкиТабличногоДокумента.Сплошная, 1);
			ОбластьНомерИсправления.ГраницаСнизу 	= ЛинияГраницыРеквизитовИсправления;
			ОбластьНомерИсправления.ГраницаСлева 	= ЛинияГраницыРеквизитовИсправления;
			ОбластьНомерИсправления.ГраницаСправа 	= ЛинияГраницыРеквизитовИсправления;

			ОбластьДатаИсправления.ГраницаСнизу 	= ЛинияГраницыРеквизитовИсправления;
			ОбластьДатаИсправления.ГраницаСлева 	= ЛинияГраницыРеквизитовИсправления;
			ОбластьДатаИсправления.ГраницаСправа 	= ЛинияГраницыРеквизитовИсправления;

		КонецЕсли;

		ОбластьМакетаДатаНомер.Параметры.Заполнить(СведенияОДокументе);
		ОбластьМакетаДатаНомер.Параметры.Заполнить(ПараметрыИсправление);

		ТабличныйДокумент.Вывести(ОбластьМакетаШапка);
		Если ЕстьОбластьГосконтракты Тогда
			ТабличныйДокумент.Вывести(ОбластьМакетаДатаНомер);
		КонецЕсли;

		// Инициализация счетчика страниц
		НомерСтраницы = 1;

		// Инициализация итогов по странице
		ИтогоМестНаСтранице        = 0;
		ИтогоКоличествоНаСтранице  = 0;
		ИтогоСуммаБезНДСНаСтранице = 0;
		ИтогоНДСНаСтранице         = 0;
		ИтогоСуммаСНДСНаСтранице   = 0;

		// Инициализация итогов по документу
		ИтогоМест        = 0;
		ИтогоКоличество  = 0;
		ИтогоСуммаСНДС   = 0;
		ИтогоСуммаБезНДС = 0;
		ИтогоНДС         = 0;

		// Инициализация счетчика строк
		НомерСтроки     = 0;
		КоличествоСтрок = ТаблицаДокумента.Количество();

		// Выводим заголовок многострочной части
		ОбластьМакетаЗаголовокТаблицы.Параметры.Заполнить(Новый Структура("НомерСтраницы", "Страница " + НомерСтраницы)); 

		ТабличныйДокумент.Вывести(ОбластьМакетаЗаголовокТаблицы);

		НДСИсчисляетсяНалоговымАгентом = СведенияОДокументе.НДСИсчисляетсяНалоговымАгентом = Истина
		И УчетНДС.ВедетсяУчетНДСПоФЗ335(СведенияОДокументе.ДатаДокумента);

		// Выводим многострочную часть документа
		Для Каждого СтрокаДокумента Из ТаблицаДокумента Цикл

			НомерСтроки = НомерСтроки + 1;

			ПараметрыСтроки = Новый Структура;

			ПараметрыСтроки.Вставить("Номер", НомерСтроки);
#Вставка
			ПараметрыСтроки.Вставить("Товар", СтрокаДокумента.Товар);
#КонецВставки
			ПараметрыСтроки.Вставить("ТоварНаименование", СтрокаДокумента.ТоварНаименование);
			ПараметрыСтроки.Вставить("ТоварКод", СтрокаДокумента.ТоварКод);
			ПараметрыСтроки.Вставить("БазоваяЕдиницаНаименование", СтрокаДокумента.ЕдиницаИзмеренияНаименование);
			ПараметрыСтроки.Вставить("БазоваяЕдиницаКодПоОКЕИ", СтрокаДокумента.ЕдиницаИзмеренияКод);

			ПараметрыСтроки.Вставить("КоличествоМест", СтрокаДокумента.КоличествоМест);
			Если НЕ ЗначениеЗаполнено(СтрокаДокумента.КоличествоМест) Тогда
				ПараметрыСтроки.Вставить("ВидУпаковки", "");
				ПараметрыСтроки.Вставить("КоличествоВОдномМесте", "");
			Иначе
				ПараметрыСтроки.Вставить("ВидУпаковки", СтрокаДокумента.ВидУпаковкиНаименование);
				ПараметрыСтроки.Вставить("КоличествоВОдномМесте", СтрокаДокумента.КоличествоВОдномМесте);
			КонецЕсли;

			ПараметрыСтроки.Вставить("Количество",  СтрокаДокумента.Количество);
			ПараметрыСтроки.Вставить("Цена",        СтрокаДокумента.Цена);
			ПараметрыСтроки.Вставить("СуммаБезНДС", СтрокаДокумента.СуммаБезНДС);

			Если НДСИсчисляетсяНалоговымАгентом Тогда
				ПараметрыСтроки.Вставить("СтавкаНДС", УчетНДС.НадписьСтавкаНДСИсчисляетсяНалоговымАгентом());
				ПараметрыСтроки.Вставить("СуммаНДС",  УчетНДС.НадписьСуммаНДСИсчисляетсяНалоговымАгентом());
				ПараметрыСтроки.Вставить("СуммаСНДС", УчетНДС.НадписьСуммаНДСИсчисляетсяНалоговымАгентом());
			Иначе
				ПараметрыСтроки.Вставить("СтавкаНДС", СтрокаДокумента.СтавкаНДС);
				ПараметрыСтроки.Вставить("СуммаНДС",  СтрокаДокумента.СуммаНДС);
				ПараметрыСтроки.Вставить("СуммаСНДС", СтрокаДокумента.СуммаСНДС);
			КонецЕсли;
			
#Вставка
			Если ТипЗнч(СведенияОДокументе.Документ) = Тип("ДокументСсылка.РеализацияТоваровУслуг") ИЛИ
				 ТипЗнч(СведенияОДокументе.Документ) = Тип("ДокументСсылка.ПоступлениеТоваровУслуг") тогда
				ПараметрыСтроки.Вставить("СертификатыДекларации", СтрокаДокумента.СертификатыДекларации);
			КонецЕсли;
#КонецВставки
			ОбластьМакетаСтрока.Параметры.Заполнить(ПараметрыСтроки);

			// Проверим вывод
			СтрокаСПодвалом = Новый Массив;
			Если НомерСтроки = 1 Тогда
				СтрокаСПодвалом.Добавить(ОбластьМакетаЗаголовокТаблицы); // если первая строка, то должен
			КонецЕсли;                                                   // помещаться заголовок
			СтрокаСПодвалом.Добавить(ОбластьМакетаСтрока);
			СтрокаСПодвалом.Добавить(ОбластьМакетаИтогоПоСтранице);
			Если НомерСтроки = КоличествоСтрок Тогда           			 // если последняя строка, должен
				СтрокаСПодвалом.Добавить(ОбластьМакетаВсего);  			 // помещаться и подвал документа
				СтрокаСПодвалом.Добавить(ОбластьМакетаПодвал);
			КонецЕсли;

			Если НЕ ОбщегоНазначения.ПроверитьВыводТабличногоДокумента(ТабличныйДокумент, СтрокаСПодвалом) Тогда

				Если КоличествоСтрок > 1 Тогда

					// Выводим итоги по странице
					ПараметрыИтоги = Новый Структура;

					ПараметрыИтоги.Вставить("ИтогМестПоСтранице",       ИтогоМестНаСтранице);
					ПараметрыИтоги.Вставить("ИтогКоличествоПоСтранице", ИтогоКоличествоНаСтранице);
					ПараметрыИтоги.Вставить("ИтогСуммыПоСтранице",      ИтогоСуммаБезНДСНаСтранице);

					Если НДСИсчисляетсяНалоговымАгентом Тогда
						ПараметрыИтоги.Вставить("ИтогНДСПоСтранице",        УчетНДС.НадписьСуммаНДСИсчисляетсяНалоговымАгентом());
						ПараметрыИтоги.Вставить("ИтогСуммыСНДСПоСтранице",  УчетНДС.НадписьСуммаНДСИсчисляетсяНалоговымАгентом());
					Иначе
						ПараметрыИтоги.Вставить("ИтогНДСПоСтранице",        ИтогоНДСНаСтранице);
						ПараметрыИтоги.Вставить("ИтогСуммыСНДСПоСтранице",  ИтогоСуммаСНДСНаСтранице);
					КонецЕсли;

					ОбластьМакетаИтогоПоСтранице.Параметры.Заполнить(ПараметрыИтоги);

					ТабличныйДокумент.Вывести(ОбластьМакетаИтогоПоСтранице);

					ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();

					// Очистим итоги по странице
					ИтогоМестНаСтранице        = 0;
					ИтогоКоличествоНаСтранице  = 0;
					ИтогоСуммаБезНДСНаСтранице = 0;
					ИтогоНДСНаСтранице         = 0;
					ИтогоСуммаСНДСНаСтранице   = 0;

					// Выведем заголовок таблицы
					НомерСтраницы = НомерСтраницы + 1;

					ОбластьМакетаЗаголовокТаблицы.Параметры.Заполнить(Новый Структура("НомерСтраницы", "Страница " + НомерСтраницы));
					ТабличныйДокумент.Вывести(ОбластьМакетаЗаголовокТаблицы);

				КонецЕсли;

			КонецЕсли;

			ТабличныйДокумент.Вывести(ОбластьМакетаСтрока);

			// Увеличим итоги по странице
			ИтогоМестНаСтранице        = ИтогоМестНаСтранице        + СтрокаДокумента.КоличествоМест;
			ИтогоКоличествоНаСтранице  = ИтогоКоличествоНаСтранице  + СтрокаДокумента.Количество;
			ИтогоСуммаБезНДСНаСтранице = ИтогоСуммаБезНДСНаСтранице + СтрокаДокумента.СуммаБезНДС;
			ИтогоНДСНаСтранице         = ИтогоНДСНаСтранице         + СтрокаДокумента.СуммаНДС;
			ИтогоСуммаСНДСНаСтранице   = ИтогоСуммаСНДСНаСтранице   + СтрокаДокумента.СуммаСНДС;

			// Увеличим итоги по документу
			ИтогоМест        = ИтогоМест        + СтрокаДокумента.КоличествоМест;
			ИтогоКоличество  = ИтогоКоличество  + СтрокаДокумента.Количество;
			ИтогоСуммаБезНДС = ИтогоСуммаБезНДС + СтрокаДокумента.СуммаБезНДС;
			ИтогоНДС         = ИтогоНДС         + СтрокаДокумента.СуммаНДС;
			ИтогоСуммаСНДС   = ИтогоСуммаСНДС   + СтрокаДокумента.СуммаСНДС;

		КонецЦикла;

		// Выводим итоги по странице
		ПараметрыИтоги = Новый Структура;
		ПараметрыИтоги.Вставить("ИтогМестПоСтранице",        ИтогоМестНаСтранице);
		ПараметрыИтоги.Вставить("ИтогКоличествоПоСтранице",  ИтогоКоличествоНаСтранице);
		ПараметрыИтоги.Вставить("ИтогСуммыПоСтранице",       ИтогоСуммаБезНДСНаСтранице);

		Если НДСИсчисляетсяНалоговымАгентом Тогда
			ПараметрыИтоги.Вставить("ИтогНДСПоСтранице",       УчетНДС.НадписьСуммаНДСИсчисляетсяНалоговымАгентом());
			ПараметрыИтоги.Вставить("ИтогСуммыСНДСПоСтранице", УчетНДС.НадписьСуммаНДСИсчисляетсяНалоговымАгентом());
		Иначе
			ПараметрыИтоги.Вставить("ИтогНДСПоСтранице",       ИтогоНДСНаСтранице);
			ПараметрыИтоги.Вставить("ИтогСуммыСНДСПоСтранице", ИтогоСуммаСНДСНаСтранице);
		КонецЕсли;

		ОбластьМакетаИтогоПоСтранице.Параметры.Заполнить(ПараметрыИтоги);

		ТабличныйДокумент.Вывести(ОбластьМакетаИтогоПоСтранице);

		// Выводим итоги по документу в целом
		ПараметрыИтоги = Новый Структура;

		ПараметрыИтоги.Вставить("ИтогМест",       ИтогоМест);
		ПараметрыИтоги.Вставить("ИтогКоличество", ИтогоКоличество);
		ПараметрыИтоги.Вставить("ИтогСуммы",      ИтогоСуммаБезНДС);

		Если НДСИсчисляетсяНалоговымАгентом Тогда
			ПараметрыИтоги.Вставить("ИтогНДС",       УчетНДС.НадписьСуммаНДСИсчисляетсяНалоговымАгентом());
			ПараметрыИтоги.Вставить("ИтогСуммыСНДС", УчетНДС.НадписьСуммаНДСИсчисляетсяНалоговымАгентом());
		Иначе
			ПараметрыИтоги.Вставить("ИтогНДС",       ИтогоНДС);
			ПараметрыИтоги.Вставить("ИтогСуммыСНДС", ИтогоСуммаСНДС);
		КонецЕсли;

		ОбластьМакетаВсего.Параметры.Заполнить(ПараметрыИтоги);

		ТабличныйДокумент.Вывести(ОбластьМакетаВсего);

		// Выводим подвал документа
		ПараметрыПодвал = Новый Структура;

		ПараметрыПодвал.Вставить("КоличествоПорядковыхНомеровЗаписейПрописью", ЧислоПрописью(ТаблицаДокумента.Количество(), ,",,,,,,,,0"));
		ПараметрыПодвал.Вставить("ВсегоМестПрописью",                          ?(ИтогоМест = 0, "", ЧислоПрописью(ИтогоМест, ,",,,С,,,,,0"))); 

		ПараметрыПодвал.Вставить("СуммаПрописью", ОбщегоНазначенияБПВызовСервера.СформироватьСуммуПрописью(ИтогоСуммаСНДС, СведенияОДокументе.Валюта));

		ЗаРуководителяНаОсновании = ?(СведенияОДокументе.ЗаРуководителяНаОснованииНаименование = "", "" , ", "+СведенияОДокументе.ЗаРуководителяНаОснованииНаименование);
		ПараметрыПодвал.Вставить("ФИОРуководителя",       СведенияОДокументе.РуководительФИО + ЗаРуководителяНаОсновании);
		ПараметрыПодвал.Вставить("ДолжностьРуководителя", СведенияОДокументе.РуководительДолжностьНаименование);

		ЗаГлавногоБухгалтераНаОсновании = ?(СведенияОДокументе.ЗаГлавногоБухгалтераНаОснованииНаименование = "", "" , ", "+СведенияОДокументе.ЗаГлавногоБухгалтераНаОснованииНаименование);
		ПараметрыПодвал.Вставить("ФИОГлавБухгалтера",     СведенияОДокументе.ГлавныйБухгалтерФИО + ЗаГлавногоБухгалтераНаОсновании);

		ПараметрыПодвал.Вставить("ФИОКладовщика",         СведенияОДокументе.КладовщикФИО);
		ПараметрыПодвал.Вставить("ДолжностьКладовщика",   СведенияОДокументе.КладовщикДолжность);

		Если ЗначениеЗаполнено(СведенияОДокументе.ДатаПодписанияДокумента) Тогда
			ПолнаяДатаДокумента = Формат(СведенияОДокументе.ДатаПодписанияДокумента, "ДФ=""дд ММММ гггг """"года""""""");
			ДлинаСтроки         = СтрДлина(ПолнаяДатаДокумента);
			ПервыйРазделитель   = СтрНайти(ПолнаяДатаДокумента," ");
			ВторойРазделитель   = СтрНайти(Прав(ПолнаяДатаДокумента,ДлинаСтроки - ПервыйРазделитель), " ") + ПервыйРазделитель;

			ПараметрыПодвал.Вставить("ДатаДокументаДень",  """" + Лев(ПолнаяДатаДокумента, ПервыйРазделитель - 1) + """");
			ПараметрыПодвал.Вставить("ДатаДокументаМесяц", Сред(ПолнаяДатаДокумента, ПервыйРазделитель + 1, ВторойРазделитель - ПервыйРазделитель - 1));
			ПараметрыПодвал.Вставить("ДатаДокументаГод",   Прав(ПолнаяДатаДокумента, ДлинаСтроки - ВторойРазделитель));
		Иначе
			ПараметрыПодвал.Вставить("ДатаДокументаДень",  """     """);
			ПараметрыПодвал.Вставить("ДатаДокументаМесяц", "");
			ПараметрыПодвал.Вставить("ДатаДокументаГод",   " 20     года");
		КонецЕсли;

		ДлинаСтрокиДоверенность = СтрДлина(СведенияОДокументе.ДоверенностьВыдана);
		Если ДлинаСтрокиДоверенность < 70 Тогда

			ДоверенностьВыдана = СведенияОДокументе.ДоверенностьВыдана;
			ДоверенностьВыдана1 = "";

		Иначе
			// Разбиваем строку на две подстроки, таким образом чтобы первая строка была не более 70ти символов
			// Для этого ищем очередной пробел и проверяем длину строк в предположении, что перенос будет выполнен по найденной позиции.
			ДоверенностьВыдана1 = СведенияОДокументе.ДоверенностьВыдана;
			ПозицияПоиска = СтрНайти(ДоверенностьВыдана1," ")+1;

			// Если найден очередной пробел и длина первой строки после операции будет менее 70ти символов, то выполняем еще одну итерацию.
			Пока ПозицияПоиска > 1 И ДлинаСтрокиДоверенность - СтрДлина(ДоверенностьВыдана1) + ПозицияПоиска < 70 Цикл

				ДоверенностьВыдана1 = Сред(ДоверенностьВыдана1, ПозицияПоиска);
				ПозицияПоиска       = СтрНайти(ДоверенностьВыдана1," ")+1;

			КонецЦикла; 

			ДоверенностьВыдана = Лев(СведенияОДокументе.ДоверенностьВыдана,ДлинаСтрокиДоверенность - СтрДлина(ДоверенностьВыдана1));

		КонецЕсли; 

		ДанныеДоверенность = Новый Структура;
		ДанныеДоверенность.Вставить("ДоверенностьНомер", СведенияОДокументе.ДоверенностьНомер);
		ДанныеДоверенность.Вставить("ДоверенностьВыдана", ДоверенностьВыдана);
		ДанныеДоверенность.Вставить("ДоверенностьВыдана1", ДоверенностьВыдана1);
		ДанныеДоверенность.Вставить("ДоверенностьЧерезКого", СведенияОДокументе.ДоверенностьЧерезКого);
		ДанныеДоверенность.Вставить("ДоверенностьДата",?(ЗначениеЗаполнено(СведенияОДокументе.ДоверенностьДата), Формат(СведенияОДокументе.ДоверенностьДата, "ДЛФ=ДД"), ""));

		ОбластьМакетаПодвал.Параметры.Заполнить(ДанныеДоверенность);
		ОбластьМакетаПодвал.Параметры.Заполнить(ПараметрыПодвал);

		ТабличныйДокумент.Вывести(ОбластьМакетаПодвал);

		// В табличном документе зададим имя области, в которую был 
		// выведен объект. Нужно для возможности печати покомплектно.
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, 
		НомерСтрокиНачало, ОбъектыПечати, СведенияОДокументе.Документ);

		УправлениеПечатьюБП.ДополнитьДокументПодписьюИПечатью(ТабличныйДокумент, СведенияОДокументе, ОбъектыПечати, ПараметрыПечати);

	КонецЦикла;

	Возврат ТабличныйДокумент;

КонецФункции

&ИзменениеИКонтроль("ПечатьСчетаНаОплату")
Функция Базар_ПечатьСчетаНаОплату(СведенияСчетаНаОплату, ОбъектыПечати, ПараметрыПечати)
	Перем ПодразделениеОтветственныхЛиц;

	УстановитьПривилегированныйРежим(Истина);

	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.АвтоМасштаб			= Истина;
	ТабличныйДокумент.ОриентацияСтраницы	= ОриентацияСтраницы.Портрет;
	ТабличныйДокумент.КлючПараметровПечати	= "ПАРАМЕТРЫ_ПЕЧАТИ_ЗаказПокупателя_СчетЗаказ";

	ДополнительнаяКолонкаПечатныхФормДокументов = Константы.ДополнительнаяКолонкаПечатныхФормДокументов.Получить();
	Если НЕ ЗначениеЗаполнено(ДополнительнаяКолонкаПечатныхФормДокументов) Тогда
		ДополнительнаяКолонкаПечатныхФормДокументов = Перечисления.ДополнительнаяКолонкаПечатныхФормДокументов.НеВыводить;
	КонецЕсли;
	ВыводитьКоды = ДополнительнаяКолонкаПечатныхФормДокументов <> Перечисления.ДополнительнаяКолонкаПечатныхФормДокументов.НеВыводить;

	ПервыйДокумент = Истина;

	ПроверяемыеБанковскиеСчета = ДанныеДляПроверкиБанковскихСчетовПриПечатиСчетовНаОплату(СведенияСчетаНаОплату);
	РезультатыПроверкиБанковскихСчетов =
	БанковскиеСчетаСервер.ПроверитьКорректностьБанковскихСчетов(ПроверяемыеБанковскиеСчета);

	Для Каждого СведенияОДокументе Из СведенияСчетаНаОплату Цикл

		ОтборРезультатов = Новый Структура("Счет", СведенияОДокументе.БанковскийСчетПродавца);
		НайденныеРезультатыПроверки = РезультатыПроверкиБанковскихСчетов.НайтиСтроки(ОтборРезультатов);
		СведенияОПроверяемомСчете = Неопределено;
		Для Каждого СтрокаРезультата Из НайденныеРезультатыПроверки Цикл
			Если СтрокаРезультата.ПроверяемаяДата = СведенияОДокументе.ДатаДокумента Тогда
				СведенияОПроверяемомСчете = СтрокаРезультата;
				Прервать;
			КонецЕсли;
		КонецЦикла;

		Если СведенияОПроверяемомСчете <> Неопределено И СведенияОПроверяемомСчете.ЕстьОшибки Тогда
			РезультатПроверкиСчета = ОбщегоНазначения.СтрокаТаблицыЗначенийВСтруктуру(СведенияОПроверяемомСчете);
			ПризнакСчета = БанковскиеСчетаСервер.НовыйПризнакСчета();
			ПризнакСчета.СчетОрганизации = Истина;
			ТекстОшибки = БанковскиеСчетаСервер.ТекстОшибкиБанковскогоСчета(РезультатПроверкиСчета, ПризнакСчета);
			ОбщегоНазначения.СообщитьПользователю(ТекстОшибки, СведенияОДокументе.Организация);
		КонецЕсли;

		Макет = УправлениеПечатью.МакетПечатнойФормы("ОбщийМакет.ПФ_MXL_СчетЗаказ");

		Если НЕ ПервыйДокумент Тогда
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;

		ПервыйДокумент = Ложь;
		ЕстьСкидка = (СведенияОДокументе.ТаблицаДокумента.Итог("СуммаСкидки") <> 0) И ЗначениеЗаполнено(Макет.Области.Найти("Скидка"));

		// При печати комплекта, в случае если к реализации введено несколько счетов, область будет содержать больше одного счета
		// В этом случае удаляем имя у уже существующей области, чтобы создать новую с тем же именем. 
		// При этом номер строки начала области не меняем чтобы новая область включала предыдущую
		Элемент = ОбъектыПечати.НайтиПоЗначению(СведенияОДокументе.Документ);
		Если Элемент <> Неопределено 
			И ТабличныйДокумент.Области.Найти(Элемент.Представление) <> Неопределено Тогда

			ТекущаяОбласть = ТабличныйДокумент.Области.Найти(Элемент.Представление);
			ТекущаяОбласть.Имя = "";

		Иначе

			// Запомним номер строки, с которой начали выводить текущий документ.
			НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
		КонецЕсли;

		// Выводим шапку счета
		ВывестиЗаголовокПредупреждение(СведенияОДокументе.Получатель, ТабличныйДокумент, Макет);

		СведенияОПолучателе = БухгалтерскийУчетПереопределяемый.СведенияОЮрФизЛице(СведенияОДокументе.Получатель, СведенияОДокументе.ДатаДляПолученияСведений);
		СведенияОПокупателе = БухгалтерскийУчетПереопределяемый.СведенияОЮрФизЛице(СведенияОДокументе.Покупатель, СведенияОДокументе.ДатаДляПолученияСведений);

		ДанныеПечатиЗаголовокСчета = Новый Структура;
		ДанныеПечатиЗаголовокСчета.Вставить("ИННПолучателя", СведенияОПолучателе.ИНН);
		ДанныеПечатиЗаголовокСчета.Вставить("КПППолучателя", СведенияОПолучателе.КПП);

		Если ТипЗнч(СведенияОДокументе.БанковскийСчетПродавца) = Тип("СправочникСсылка.БанковскиеСчета") Тогда
			ДанныеПечатиЗаголовокСчета.Вставить("БИКБанкаПолучателя",СведенияОДокументе.БикБанкаПолучателя);
			ДанныеПечатиЗаголовокСчета.Вставить("БанкПолучателя",СведенияОДокументе.БанкПолучателя);
			ДанныеПечатиЗаголовокСчета.Вставить("БанкПолучателяПредставление",СокрЛП(СведенияОДокументе.НаименованиеБанкаПолучателя));
			ДанныеПечатиЗаголовокСчета.Вставить("СчетБанкаПолучателя",СведенияОДокументе.СчетБанкаПолучателя);
			ДанныеПечатиЗаголовокСчета.Вставить("СчетБанкаПолучателяПредставление",СведенияОДокументе.СчетБанкаПолучателя);
			ДанныеПечатиЗаголовокСчета.Вставить("СчетПолучателяПредставление", СведенияОДокументе.НомерСчетаПолучателя);
			ДанныеПечатиЗаголовокСчета.Вставить("СчетПолучателя", СведенияОДокументе.НомерСчетаПолучателя);
		КонецЕсли;

		ПредставлениеПолучателя = УчетДенежныхСредствБП.СформироватьТекстНаименованияПлательщикаПолучателя(, СведенияОДокументе.Получатель, СведенияОДокументе.БанковскийСчетПродавца, , СведенияОДокументе.ДатаДляПолученияСведений);
		ДанныеПечатиЗаголовокСчета.Вставить("ПредставлениеПолучателя", ПредставлениеПолучателя);

		// Получим логотип организации
		ДвоичныеДанныеКартинки = Неопределено;
		Если ТипЗнч(СведенияОДокументе.Получатель) = Тип("СправочникСсылка.Организации") Тогда
			ДвоичныеДанныеКартинки = Справочники.Организации.ДвоичныеДанныеКартинкиОрганизации(СведенияОДокументе.Получатель, "ФайлЛоготип");
		КонецЕсли;

		ДвоичныеДанныеQRКода = Неопределено;
		Если СведенияОПокупателе.ЮридическоеФизическоеЛицо = Перечисления.ЮридическоеФизическоеЛицо.ФизическоеЛицо Тогда
			ДвоичныеДанныеQRКода = QRКодРеквизитыПлатежа(СведенияОДокументе, ДанныеПечатиЗаголовокСчета);
		КонецЕсли; 

		ЕстьQR      = ЗначениеЗаполнено(ДвоичныеДанныеQRКода);
		ЕстьЛоготип = ЗначениеЗаполнено(ДвоичныеДанныеКартинки);

		// Если макет поддерживает QR код
		Если Макет.Области.Найти("QRКод") <> Неопределено Тогда
			ТабличныйДокумент.Вывести(Макет.ПолучитьОбласть("Шапка"));

			НачалоНовогоФормата = ТабличныйДокумент.ВысотаТаблицы;

			ОбластьРеквизиты = Макет.Область("РеквизитыПраво");
			Если НЕ ЕстьQR Тогда
				ОбластьРеквизиты.ШиринаКолонки = ОбластьРеквизиты.ШиринаКолонки + Макет.Область("QRКод").ШиринаКолонки;
			КонецЕсли; 

			Если ЕстьЛоготип Тогда
				ОбластьРеквизиты  = Макет.ПолучитьОбласть("ЗаголовокСчетаСЛоготипом|Реквизиты");
				ОбластьQR         = Макет.ПолучитьОбласть("ЗаголовокСчетаСЛоготипом|QRКод");
				ОбластьРисунка    = ОбластьQR.Области.Найти("РисунокQRЛоготип");

				// В случае "битой" картинки формирование счета не должно прерваться
				Попытка
					ОбластьРеквизиты.Рисунки.ЛоготипСчета.Картинка = Новый Картинка(ДвоичныеДанныеКартинки);
				Исключение
					ЗаписьЖурналаРегистрации(НСтр("ru = 'Печать счета'"), УровеньЖурналаРегистрации.Ошибка, 
					Метаданные.Документы.СчетНаОплатуПокупателю,СведенияОДокументе.Документ, НСтр("ru = 'Не удалось получить логотип'"));
				КонецПопытки;
			Иначе
				ОбластьРеквизиты  = Макет.ПолучитьОбласть("ЗаголовокСчета|Реквизиты");
				ОбластьQR         = Макет.ПолучитьОбласть("ЗаголовокСчета|QRКод");
				ОбластьРисунка    = ОбластьQR.Области.Найти("РисунокQR");
			КонецЕсли;

			ОбластьРеквизиты.Параметры.Заполнить(СведенияОДокументе);
			ОбластьРеквизиты.Параметры.Заполнить(ДанныеПечатиЗаголовокСчета);

			ТабличныйДокумент.Вывести(ОбластьРеквизиты);


			Если ЕстьQR 
				И ОбластьРисунка <> Неопределено Тогда

				ОбластьРисунка.Картинка = Новый Картинка(ДвоичныеДанныеQRКода);

				ТабличныйДокумент.Присоединить(ОбластьQR);
			КонецЕсли;

			ТабличныйДокумент.Область(НачалоНовогоФормата+1,,ТабличныйДокумент.ВысотаТаблицы).СоздатьФорматСтрок();
		Иначе
			// Если есть логотип и макет измененный (нет область с QR кодом)
			Если ЕстьЛоготип И Макет.Области.Найти("ЗаголовокСчетаСЛоготипом") <> Неопределено Тогда
				ОбластьМакета = Макет.ПолучитьОбласть("ЗаголовокСчетаСЛоготипом");

				// В случае "битой" картинки формирование счета не должно прерваться
				Попытка
					ОбластьМакета.Рисунки.ЛоготипСчета.Картинка = Новый Картинка(ДвоичныеДанныеКартинки);
				Исключение
					ЗаписьЖурналаРегистрации(НСтр("ru = 'Печать счета'"), УровеньЖурналаРегистрации.Ошибка, 
					Метаданные.Документы.СчетНаОплатуПокупателю,СведенияОДокументе.Документ, НСтр("ru = 'Не удалось получить логотип'"));
				КонецПопытки;
			Иначе
				// Выводим область по умолчанию "ЗаголовокСчета", в случае если нет не логотипа ни QR кода, 
				// либо они есть, но областей для них в макете нет 

				ОбластьМакета = Макет.ПолучитьОбласть("ЗаголовокСчета");
			КонецЕсли; 

			ОбластьМакета.Параметры.Заполнить(СведенияОДокументе);
			ОбластьМакета.Параметры.Заполнить(ДанныеПечатиЗаголовокСчета);

			ТабличныйДокумент.Вывести(ОбластьМакета);
		КонецЕсли;


		ОбластьМакета = Макет.ПолучитьОбласть("Заголовок");

		НомерДокумента = НомерСчетаНаОплату(СведенияОДокументе.ГосударственныйКонтракт, СведенияОДокументе.НомерДокумента);

		ТекстЗаголовка = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru='Счет на оплату № %1 от %2 г.'"), 
		НомерДокумента, Формат(СведенияОДокументе.ДатаДокумента, "ДФ='дд ММММ гггг'"));

		ОбластьМакета.Параметры.Заполнить(Новый Структура("ТекстЗаголовка", ТекстЗаголовка));

		ТабличныйДокумент.Вывести(ОбластьМакета);

		ОбластьМакета = Макет.ПолучитьОбласть("Поставщик");
		ОбластьМакета.Параметры.Заполнить(СведенияОДокументе);
		СведенияОбОрганизации    = БухгалтерскийУчетПереопределяемый.СведенияОЮрФизЛице(СведенияОДокументе.Поставщик, СведенияОДокументе.ДатаДляПолученияСведений);
		ПредставлениеПоставщика  = ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(
		СведенияОбОрганизации, "НаименованиеДляПечатныхФорм,ИНН,КПП,ЮридическийАдрес,Телефоны,");

		ОбластьМакета.Параметры.Заполнить(Новый Структура("ПредставлениеПоставщика", ПредставлениеПоставщика));
		ТабличныйДокумент.Вывести(ОбластьМакета);

		ОбластьМакета = Макет.ПолучитьОбласть("Покупатель");
		ОбластьМакета.Параметры.Заполнить(СведенияОДокументе);

		ПредставлениеПокупателя = ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(
		СведенияОПокупателе, "НаименованиеДляПечатныхФорм,ИНН,КПП,ЮридическийАдрес,Телефоны,");
		Основание = СокрЛП(Строка(СведенияОДокументе.ДоговорКонтрагента));
		ДанныеПечатиПокупатель = Новый Структура;
		ДанныеПечатиПокупатель.Вставить("ПредставлениеПокупателя", ПредставлениеПокупателя);
		ДанныеПечатиПокупатель.Вставить("Основание", Основание);

		ОбластьМакета.Параметры.Заполнить(ДанныеПечатиПокупатель);
		ТабличныйДокумент.Вывести(ОбластьМакета);

		ОбластьНомера = Макет.ПолучитьОбласть("ШапкаТаблицы|НомерСтроки");
		ОбластьКодов  = Макет.ПолучитьОбласть("ШапкаТаблицы|КолонкаКодов");
		ОбластьДанных = Макет.ПолучитьОбласть("ШапкаТаблицы|Данные");
		ОбластьСуммы  = Макет.ПолучитьОбласть("ШапкаТаблицы|Сумма");

		ТабличныйДокумент.Вывести(ОбластьНомера);
		Если ВыводитьКоды Тогда
			ДанныеПечатиКолонкиКодов = Новый Структура;
			Если ДополнительнаяКолонкаПечатныхФормДокументов = Перечисления.ДополнительнаяКолонкаПечатныхФормДокументов.Артикул Тогда
				ДанныеПечатиКолонкиКодов.Вставить("ИмяКолонкиКодов", "Артикул");
			ИначеЕсли ДополнительнаяКолонкаПечатныхФормДокументов = Перечисления.ДополнительнаяКолонкаПечатныхФормДокументов.Код Тогда
				ДанныеПечатиКолонкиКодов.Вставить("ИмяКолонкиКодов", "Код");
			КонецЕсли;
			ОбластьКодов.Параметры.Заполнить(ДанныеПечатиКолонкиКодов);
			ТабличныйДокумент.Присоединить(ОбластьКодов);
		КонецЕсли;
		ТабличныйДокумент.Присоединить(ОбластьДанных);
		Если ЕстьСкидка Тогда
			ОбластьСкидки  = Макет.ПолучитьОбласть("ШапкаТаблицы|Скидка");
			ТабличныйДокумент.Присоединить(ОбластьСкидки);
		КонецЕсли;
		ТабличныйДокумент.Присоединить(ОбластьСуммы);

		ОбластьКолонкаТовар = Макет.Область("Товар");
		Если Не ВыводитьКоды Тогда
			ОбластьКолонкаТовар.ШиринаКолонки = ОбластьКолонкаТовар.ШиринаКолонки + Макет.Область("КолонкаКодов").ШиринаКолонки;
		КонецЕсли;
		Если Не ЕстьСкидка И ЗначениеЗаполнено(Макет.Области.Найти("Скидка")) Тогда
			ОбластьКолонкаТовар.ШиринаКолонки = ОбластьКолонкаТовар.ШиринаКолонки + Макет.Область("Скидка").ШиринаКолонки;
		КонецЕсли;

		ОбластьНомера = Макет.ПолучитьОбласть("Строка|НомерСтроки");
		ОбластьКодов  = Макет.ПолучитьОбласть("Строка|КолонкаКодов");
		ОбластьДанных = Макет.ПолучитьОбласть("Строка|Данные");
		ОбластьСуммы  = Макет.ПолучитьОбласть("Строка|Сумма");

#Вставка
		ИтогиПоСтавкамНДС = Новый Соответствие;
#КонецВставки
		Сумма    = 0;
		СуммаНДС = 0;
		ВсегоСкидок    = 0;
		ВсегоБезСкидок = 0;
		НомерСтроки    = 0;

		НДСИсчисляетсяНалоговымАгентом = СведенияОДокументе.НДСИсчисляетсяНалоговымАгентом = Истина
		И УчетНДС.ВедетсяУчетНДСПоФЗ335(СведенияОДокументе.ДатаДляПолученияСведений);

		Для Каждого Строка Из СведенияОДокументе.ТаблицаДокумента Цикл

			НомерСтроки = НомерСтроки + 1;
			ОбластьНомера.Параметры.Заполнить(Новый Структура("НомерСтроки", НомерСтроки));

			ТабличныйДокумент.Вывести(ОбластьНомера);

			Если ВыводитьКоды Тогда
				ОбластьКодов.Параметры.Заполнить(Новый Структура("Артикул", Строка.НоменклатураАртикул));
				ТабличныйДокумент.Присоединить(ОбластьКодов);
			КонецЕсли;
			ДанныеПечатиСтрокаОбластьДанных = Новый Структура;
			ДанныеПечатиСтрокаОбластьДанных.Вставить("Товар",			 СокрЛП(Строка.НоменклатураНаименование));
			ДанныеПечатиСтрокаОбластьДанных.Вставить("Количество",		 Строка.Количество);
			ДанныеПечатиСтрокаОбластьДанных.Вставить("ЕдиницаИзмерения", Строка.ЕдиницаИзмеренияНаименование);
			ДанныеПечатиСтрокаОбластьДанных.Вставить("Цена",			 ОбщегоНазначенияБПВызовСервера.ФорматСумм(Строка.Цена));
			ОбластьДанных.Параметры.Заполнить(ДанныеПечатиСтрокаОбластьДанных);
			ТабличныйДокумент.Присоединить(ОбластьДанных);

			Если ЕстьСкидка Тогда
				ОбластьСкидки = Макет.ПолучитьОбласть("Строка|Скидка");
				ОбластьСкидки.Параметры.Заполнить(Новый Структура("СуммаСкидки", ОбщегоНазначенияБПВызовСервера.ФорматСумм(Строка.СуммаСкидки)));
				ТабличныйДокумент.Присоединить(ОбластьСкидки);
			КонецЕсли;


			ОбластьСуммы.Параметры.Заполнить(Новый Структура("Сумма", ОбщегоНазначенияБПВызовСервера.ФорматСумм(Строка.Сумма - Строка.СуммаСкидки)));

			ТабличныйДокумент.Присоединить(ОбластьСуммы);
#Вставка
			НакопленнаяСуммаСтавкиНДС = 0;
			Если НЕ ИтогиПоСтавкамНДС.Получить(Строка.СтавкаНДС) = Неопределено тогда
				НакопленнаяСуммаСтавкиНДС = ИтогиПоСтавкамНДС.Получить(Строка.СтавкаНДС);
			КонецЕсли;
			ИтогиПоСтавкамНДС.Вставить(Строка.СтавкаНДС, НакопленнаяСуммаСтавкиНДС + Строка.СуммаНДС);
#КонецВставки
			Сумма    = Сумма    + Строка.Сумма;
			СуммаНДС = СуммаНДС + Строка.СуммаНДС;
			ВсегоСкидок = ВсегоСкидок + Строка.СуммаСкидки;

		КонецЦикла;

		Если ЗначениеЗаполнено(Макет.Области.Найти("Подвал")) Тогда

			ОбластьПодвал  = Макет.ПолучитьОбласть("Подвал");
			ТабличныйДокумент.Вывести(ОбластьПодвал);

		КонецЕсли; 

		Если СведенияОДокументе.СуммаСкидки <> 0 Тогда

			ДанныеОбъекта = Новый Структура("СуммаСкидки, СуммаВключаетНДС");
			ЗаполнитьЗначенияСвойств(ДанныеОбъекта, СведенияОДокументе);
			ТаблицаТовары = СведенияОДокументе.ТаблицаДокумента.Скопировать();

			ОбработкаТабличныхЧастей.РаспределитьСкидкуПоСтрокамТабЧасти(ТаблицаТовары, ДанныеОбъекта);

			Всего    = Сумма + ?(СведенияОДокументе.СуммаВключаетНДС, 0, СуммаНДС);
			СуммаНДС = ТаблицаТовары.Итог("СуммаНДС");
			Сумма    = Всего - СведенияОДокументе.СуммаСкидки - ?(СведенияОДокументе.СуммаВключаетНДС, 0, СуммаНДС);

			Если ЗначениеЗаполнено(Макет.Области.Найти("СкидкаПоДокументу")) Тогда

				ОбластьСуммы  = Макет.ПолучитьОбласть("СкидкаПоДокументу");

				ОбластьСуммы.Параметры.Заполнить(Новый Структура("СуммаСкидки", ОбщегоНазначенияБПВызовСервера.ФорматСумм(СведенияОДокументе.СуммаСкидки)));
				ТабличныйДокумент.Вывести(ОбластьСуммы);

			КонецЕсли; 

		ИначеЕсли ВсегоСкидок <> 0 Тогда

			Сумма = Сумма - ВсегоСкидок;

		КонецЕсли; 

		ДанныеЗаполненияИтого = Новый Структура("Всего", ОбщегоНазначенияБПВызовСервера.ФорматСумм(Сумма));

		Если НДСИсчисляетсяНалоговымАгентом Тогда
			НДС      = УчетНДС.НадписьСтавкаНДСИсчисляетсяНалоговымАгентом();
			ВсегоНДС = НСтр("ru='-'");
		ИначеЕсли СуммаНДС <> 0 Тогда
			НДС      = ?(СведенияОДокументе.СуммаВключаетНДС, НСтр("ru='В том числе НДС:'"), НСтр("ru='Сумма НДС:'"));
			ВсегоНДС = ОбщегоНазначенияБПВызовСервера.ФорматСумм(СуммаНДС);
		Иначе
			НДС      = НСтр("ru='Без налога (НДС)'");
			ВсегоНДС = НСтр("ru='-'");
		КонецЕсли;

		ДанныеЗаполненияНДС = Новый Структура("НДС, ВсегоНДС", НДС, ВсегоНДС);

		СуммаКОплате = Сумма + ?(СведенияОДокументе.СуммаВключаетНДС, 0, СуммаНДС);
		ИтогоКОплате = ОбщегоНазначенияБПВызовСервера.ФорматСумм(СуммаКОплате);
		ДанныеЗаполненияИтогоКОплате = Новый Структура("ИтогоКОплате", ИтогоКОплате);

		Если ЗначениеЗаполнено(Макет.Области.Найти("Скидка")) Тогда

			ОбластьИтого  = Макет.ПолучитьОбласть("Итого");
			ОбластьИтого.Параметры.Заполнить(ДанныеЗаполненияИтого);

			ТабличныйДокумент.Вывести(ОбластьИтого);

			// Вывести ИтогоНДС
			ОбластьИтогоНДС  = Макет.ПолучитьОбласть("ИтогоНДС");
			ОбластьИтогоНДС.Параметры.Заполнить(ДанныеЗаполненияНДС);

			ТабличныйДокумент.Вывести(ОбластьИтогоНДС);
#Вставка
			Если ИтогиПоСтавкамНДС.Количество() > 0 тогда
				Для Каждого КлючИЗначение из ИтогиПоСтавкамНДС цикл
					ДанныеЗаполненияНДС.НДС      = КлючИЗначение.Ключ;
					ДанныеЗаполненияНДС.ВсегоНДС = КлючИЗначение.Значение;
					ОбластьИтогоНДС.Параметры.Заполнить(ДанныеЗаполненияНДС);
					Область = ОбластьИтогоНДС.Области.Получить(0);
					Область.Шрифт = ШрифтыСтиля.ОбычныйШрифтТекста;
					ТабличныйДокумент.Вывести(ОбластьИтогоНДС);
				КонецЦикла;
			КонецЕсли;
#КонецВставки

			// Вывести ИтогоКОплате
			ОбластьИтогоКОплате  = Макет.ПолучитьОбласть("ИтогоКОплате");
			ОбластьИтогоКОплате.Параметры.Заполнить(ДанныеЗаполненияИтогоКОплате);

			ТабличныйДокумент.Вывести(ОбластьИтогоКОплате);

		Иначе
			// В случае если используется пользовательский макет - используем вертикальные названия областей.
			ОбластьНомера = Макет.ПолучитьОбласть("Итого|НомерСтроки");
			ОбластьКодов  = Макет.ПолучитьОбласть("Итого|КолонкаКодов");
			ОбластьДанных = Макет.ПолучитьОбласть("Итого|Данные");
			ОбластьСумма  = Макет.ПолучитьОбласть("Итого|Сумма");

			ТабличныйДокумент.Вывести(ОбластьНомера);
			Если ВыводитьКоды Тогда
				ТабличныйДокумент.Присоединить(ОбластьКодов);
			КонецЕсли;
			ТабличныйДокумент.Присоединить(ОбластьДанных);
			ОбластьСумма.Параметры.Заполнить(ДанныеЗаполненияИтого);
			ТабличныйДокумент.Присоединить(ОбластьСумма);

			// Вывести ИтогоНДС
			ОбластьНомера = Макет.ПолучитьОбласть("ИтогоНДС|НомерСтроки");
			ОбластьКодов  = Макет.ПолучитьОбласть("ИтогоНДС|КолонкаКодов");
			ОбластьДанных = Макет.ПолучитьОбласть("ИтогоНДС|Данные");
			ОбластьСуммы  = Макет.ПолучитьОбласть("ИтогоНДС|Сумма");

			ТабличныйДокумент.Вывести(ОбластьНомера);
			Если ВыводитьКоды Тогда
				ТабличныйДокумент.Присоединить(ОбластьКодов);
			КонецЕсли;
			ОбластьДанных.Параметры.Заполнить(ДанныеЗаполненияНДС);
			ОбластьСуммы.Параметры.Заполнить(ДанныеЗаполненияНДС);

			ТабличныйДокумент.Присоединить(ОбластьДанных);
			ТабличныйДокумент.Присоединить(ОбластьСуммы);

			// Вывести ИтогоКОплате
			ОбластьНомера = Макет.ПолучитьОбласть("ИтогоКОплате|НомерСтроки");
			ОбластьКодов  = Макет.ПолучитьОбласть("ИтогоКОплате|КолонкаКодов");
			ОбластьДанных = Макет.ПолучитьОбласть("ИтогоКОплате|Данные");
			ОбластьСуммы  = Макет.ПолучитьОбласть("ИтогоКОплате|Сумма");
			ТабличныйДокумент.Вывести(ОбластьНомера);
			Если ВыводитьКоды Тогда
				ТабличныйДокумент.Присоединить(ОбластьКодов);
			КонецЕсли;
			ТабличныйДокумент.Присоединить(ОбластьДанных);
			ОбластьСуммы.Параметры.Заполнить(ДанныеЗаполненияИтогоКОплате);

			ТабличныйДокумент.Присоединить(ОбластьСуммы);

		КонецЕсли; 

		// Вывести Сумму прописью
		ОбластьМакета = Макет.ПолучитьОбласть("СуммаПрописью");
		ДанныеПечатиСуммаПрописью = Новый Структура("ИтоговаяСтрока, СуммаПрописью");
		СуммаКПрописи = Сумма + ?(СведенияОДокументе.СуммаВключаетНДС, 0, СуммаНДС);
		ДанныеПечатиСуммаПрописью.ИтоговаяСтрока = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru='Всего наименований %1, на сумму %2'"),
		НомерСтроки, ОбщегоНазначенияБПВызовСервера.ФорматСумм(СуммаКПрописи, СведенияОДокументе.Валюта));
		ДанныеПечатиСуммаПрописью.СуммаПрописью = ОбщегоНазначенияБПВызовСервера.СформироватьСуммуПрописью(СуммаКПрописи, СведенияОДокументе.Валюта);
		ОбластьМакета.Параметры.Заполнить(ДанныеПечатиСуммаПрописью);
		ТабличныйДокумент.Вывести(ОбластьМакета);

		ДвоичныеДанныеКартинки = Неопределено;

		ДобавленОтступПередДопУсловиями = Ложь;

		// Срок оплаты
		Если СведенияОДокументе.СрокОплаты <> Дата(1,1,1) И
			ЗначениеЗаполнено(Макет.Области.Найти("СрокОплаты")) Тогда

			// Добавим отступ перед текстом
			Если ЗначениеЗаполнено(Макет.Области.Найти("ДополнительныеУсловияОтступ")) Тогда
				ОбластьМакетаОтступ = Макет.ПолучитьОбласть("ДополнительныеУсловияОтступ");
				ТабличныйДокумент.Вывести(ОбластьМакетаОтступ);
				ДобавленОтступПередДопУсловиями = Истина;
			КонецЕсли;

			ОбластьМакета = Макет.ПолучитьОбласть("СрокОплаты");
			СтруктураПараметров = Новый Структура("СрокОплаты", Формат(СведенияОДокументе.СрокОплаты, "ДФ=dd.MM.yyyy"));
			ОбластьМакета.Параметры.Заполнить(СтруктураПараметров);
			ТабличныйДокумент.Вывести(ОбластьМакета);

		КонецЕсли;

		// Дополнительные условия
		Если НЕ ПустаяСтрока(СведенияОДокументе.ТекстДополнительныхУсловий)
			И ЗначениеЗаполнено(Макет.Области.Найти("ДополнительныеУсловия")) Тогда

			// Добавим отступ перед текстом
			Если НЕ ДобавленОтступПередДопУсловиями И
				ЗначениеЗаполнено(Макет.Области.Найти("ДополнительныеУсловияОтступ")) Тогда
				ОбластьМакетаОтступ = Макет.ПолучитьОбласть("ДополнительныеУсловияОтступ");
				ТабличныйДокумент.Вывести(ОбластьМакетаОтступ);
			КонецЕсли;

			// Выводим построчно многострочный текст
			// для того, чтобы корректно печатались длинные тексты
			ОбластьМакета = Макет.ПолучитьОбласть("ДополнительныеУсловия");
			ТекстДополнительныхУсловий = СведенияОДокументе.ТекстДополнительныхУсловий;
			ЧислоСтрокТекста = СтрЧислоСтрок(ТекстДополнительныхУсловий);
			Для СчетчикСтрок = 1 По ЧислоСтрокТекста Цикл
				СтруктураПараметров = Новый Структура("ТекстДополнительныхУсловий", СтрПолучитьСтроку(ТекстДополнительныхУсловий, СчетчикСтрок));
				ОбластьМакета.Параметры.Заполнить(СтруктураПараметров);
				ТабличныйДокумент.Вывести(ОбластьМакета);
			КонецЦикла;
		КонецЕсли;

		ДанныеПечатиПодвалСчета = Новый Структура;
		// В случае если счет выставляет предприниматель, который свои полномочия никому не делегировал - выводим специальный подвал документа
		Если СведенияОПолучателе.ЮридическоеФизическоеЛицо = Перечисления.ЮридическоеФизическоеЛицо.ФизическоеЛицо
			И (НЕ ЗначениеЗаполнено(СведенияОДокументе.РуководительФИО)
			ИЛИ СведенияОДокументе.Руководитель = СведенияОПолучателе.ИндивидуальныйПредприниматель) Тогда
			ОбластьМакета = Макет.ПолучитьОбласть("ПодвалСчетаПредприниматель");
			ДанныеПечатиПодвалСчета.Вставить("ФИОПредпринимателя", СведенияОПолучателе.ФамилияИнициалыФизлица);
		Иначе
			ОбластьМакета = Макет.ПолучитьОбласть("ПодвалСчета");
			ДанныеПечатиПодвалСчета.Вставить("ФИОРуководителя", СведенияОДокументе.РуководительФИО);
			ДанныеПечатиПодвалСчета.Вставить("ФИОБухгалтера", СведенияОДокументе.ГлавныйБухгалтерФИО);
			ДанныеПечатиПодвалСчета.Вставить("ЗаРуководителяПоПриказу", СведенияОДокументе.ЗаРуководителяНаОснованииНаименование);
			ДанныеПечатиПодвалСчета.Вставить("ЗаГлавногоБухгалтераПоПриказу", СведенияОДокументе.ЗаГлавногоБухгалтераНаОснованииНаименование);
		КонецЕсли;

		ОбластьМакета.Параметры.Заполнить(ДанныеПечатиПодвалСчета);
		ОбластьМакета.Параметры.Заполнить(СведенияОДокументе);
		ТабличныйДокумент.Вывести(ОбластьМакета);

		// В табличном документе зададим имя области, в которую был 
		// выведен объект. Нужно для возможности печати покомплектно.
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, 
		НомерСтрокиНачало, ОбъектыПечати, СведенияОДокументе.Документ);
		УправлениеПечатьюБП.ДополнитьДокументПодписьюИПечатью(ТабличныйДокумент, СведенияОДокументе, ОбъектыПечати, ПараметрыПечати);

	КонецЦикла;

	Возврат ТабличныйДокумент;

КонецФункции
