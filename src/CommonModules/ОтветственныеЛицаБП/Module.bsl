// Функция возвращает структуру с реквизитами подписи уполномоченного лица.
//
// Параметры:
//	Организация 	- СправочникСсылка.Организация
//	ФизическоеЛицо 	- СправочникСсылка.ФизическиеЛица
//	ОснованиеПраваПодписи 	- СправочникСсылка.ОснованияПравПодписи
//	ДатаСреза 		- Дата
//
Функция РеквизитыПодписиУполномоченныхЛиц(Организация, Знач Пользователь = Неопределено, Знач ФизическоеЛицо = Неопределено, ДатаСреза = Неопределено) Экспорт
	
	Результат = Новый Соответствие;
	Результат.Вставить(ПредопределенноеЗначение("Перечисление.ОтветственныеЛицаОрганизаций.Руководитель"), Неопределено);
	Результат.Вставить(ПредопределенноеЗначение("Перечисление.ОтветственныеЛицаОрганизаций.ГлавныйБухгалтер"), Неопределено);
	Результат.Вставить(ПредопределенноеЗначение("Перечисление.ОтветственныеЛицаОрганизаций.ОтветственныйЗаОформление"), Неопределено);
	
	Для Каждого КлючИЗначение из Результат цикл
		Результат.Вставить(КлючИЗначение.Ключ, ОтветственныеЛицаБП.ПустаяСтруктураУполномоченногоЛица());
	КонецЦикла;
	
	Если Пользователь = Неопределено И ФизическоеЛицо = Неопределено тогда
		Возврат Результат;
	КонецЕсли;
	
	Если НЕ Пользователь = Неопределено И НЕ ФизическоеЛицо = Неопределено тогда
		Если ФизическоеЛицо <> ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Пользователь, "ФизическоеЛицо") тогда
			Возврат Результат;
		КонецЕсли;
	КонецЕсли;
	
	Если Пользователь = Неопределено тогда
		Пользователь = ПредопределенноеЗначение("Справочник.Пользователи.ПустаяСсылка");
	КонецЕсли;
	
	Если ФизическоеЛицо = Неопределено тогда
		ФизическоеЛицо = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Пользователь, "ФизическоеЛицо");
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(ФизическоеЛицо) тогда
		Возврат Результат;
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(ДатаСреза) тогда
		ДатаСреза = ТекущаяДатаСеанса();
	КонецЕсли;
	
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	Базар_ОтветственныеЛицаОрганизацийСрезПоследних.ОтветственноеЛицо КАК ОтветственноеЛицо,
	|	Базар_ОтветственныеЛицаОрганизацийСрезПоследних.Пользователь КАК Пользователь,
	|	Базар_ОтветственныеЛицаОрганизацийСрезПоследних.ФизическоеЛицо КАК ФизическоеЛицо,
	|	Базар_ОтветственныеЛицаОрганизацийСрезПоследних.Основание КАК Основание,
	|	Базар_ОтветственныеЛицаОрганизацийСрезПоследних.Должность КАК Должность
	|ПОМЕСТИТЬ ДанныеОтветственныеЛица
	|ИЗ
	|	РегистрСведений.Базар_ОтветственныеЛицаОрганизаций.СрезПоследних(
	|			&ДатаСреза,
	|			ФизическоеЛицо = &ФизическоеЛицо
	|				И СтруктурнаяЕдиница = &СтруктурнаяЕдиница
	|				И ВЫБОР
	|					КОГДА НЕ &Пользователь = ЗНАЧЕНИЕ(Справочник.Пользователи.ПустаяСсылка)
	|						ТОГДА Пользователь = &Пользователь
	|					ИНАЧЕ ИСТИНА
	|				КОНЕЦ) КАК Базар_ОтветственныеЛицаОрганизацийСрезПоследних
	|ГДЕ
	|	ВЫБОР
	|			КОГДА Базар_ОтветственныеЛицаОрганизацийСрезПоследних.Основание = ЗНАЧЕНИЕ(Справочник.ОснованияПраваПодписи.ПустаяСсылка)
	|				ТОГДА ЛОЖЬ
	|			ИНАЧЕ ВЫБОР
	|						КОГДА НЕ Базар_ОтветственныеЛицаОрганизацийСрезПоследних.Основание.ДатаНачала = ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|							ТОГДА &ДатаСреза >= Базар_ОтветственныеЛицаОрганизацийСрезПоследних.Основание.ДатаНачала
	|						ИНАЧЕ ИСТИНА
	|					КОНЕЦ
	|					И ВЫБОР
	|						КОГДА НЕ Базар_ОтветственныеЛицаОрганизацийСрезПоследних.Основание.ДатаОкончания = ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|							ТОГДА &ДатаСреза <= Базар_ОтветственныеЛицаОрганизацийСрезПоследних.Основание.ДатаОкончания
	|						ИНАЧЕ ИСТИНА
	|					КОНЕЦ
	|		КОНЕЦ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ ПЕРВЫЕ 1
	|	ДанныеОтветственныеЛица.Пользователь КАК Пользователь,
	|	ДанныеОтветственныеЛица.ФизическоеЛицо КАК ФизическоеЛицо,
	|	ДанныеОтветственныеЛица.ОтветственноеЛицо КАК ОтветственноеЛицо,
	|	ДанныеОтветственныеЛица.ФизическоеЛицо.Фамилия КАК Фамилия,
	|	ДанныеОтветственныеЛица.ФизическоеЛицо.Имя КАК Имя,
	|	ДанныеОтветственныеЛица.ФизическоеЛицо.Отчество КАК Отчество,
	|	ДанныеОтветственныеЛица.ФизическоеЛицо.Наименование КАК ФИОПредставление,
	|	ВЫБОР
	|		КОГДА НЕ ДанныеОтветственныеЛица.Основание ЕСТЬ NULL
	|				И НЕ ДанныеОтветственныеЛица.Основание = ЗНАЧЕНИЕ(Справочник.ОснованияПраваПодписи.ПустаяСсылка)
	|			ТОГДА ДанныеОтветственныеЛица.Должность
	|		ИНАЧЕ ДанныеОтветственныеЛица.Основание.Должность
	|	КОНЕЦ КАК Должность,
	|	ВЫБОР
	|		КОГДА НЕ ДанныеОтветственныеЛица.Основание ЕСТЬ NULL
	|				И НЕ ДанныеОтветственныеЛица.Основание = ЗНАЧЕНИЕ(Справочник.ОснованияПраваПодписи.ПустаяСсылка)
	|			ТОГДА ДанныеОтветственныеЛица.Должность.Наименование
	|		ИНАЧЕ ДанныеОтветственныеЛица.Основание.Должность.Наименование
	|	КОНЕЦ КАК ДолжностьПредставление,
	|	ДанныеОтветственныеЛица.Основание КАК ОснованиеПраваПодписи,
	|	ДанныеОтветственныеЛица.Основание.Наименование КАК ОснованиеПраваПодписиПредставление
	|ИЗ
	|	ДанныеОтветственныеЛица КАК ДанныеОтветственныеЛица
	|ГДЕ
	|	ДанныеОтветственныеЛица.ОтветственноеЛицо = ЗНАЧЕНИЕ(Перечисление.ОтветственныеЛицаОрганизаций.Руководитель)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ ПЕРВЫЕ 1
	|	ДанныеОтветственныеЛица.Пользователь КАК Пользователь,
	|	ДанныеОтветственныеЛица.ФизическоеЛицо КАК ФизическоеЛицо,
	|	ДанныеОтветственныеЛица.ОтветственноеЛицо КАК ОтветственноеЛицо,
	|	ДанныеОтветственныеЛица.ФизическоеЛицо.Фамилия КАК Фамилия,
	|	ДанныеОтветственныеЛица.ФизическоеЛицо.Имя КАК Имя,
	|	ДанныеОтветственныеЛица.ФизическоеЛицо.Отчество КАК Отчество,
	|	ДанныеОтветственныеЛица.ФизическоеЛицо.Наименование КАК ФИОПредставление,
	|	ВЫБОР
	|		КОГДА НЕ ДанныеОтветственныеЛица.Основание ЕСТЬ NULL
	|				И НЕ ДанныеОтветственныеЛица.Основание = ЗНАЧЕНИЕ(Справочник.ОснованияПраваПодписи.ПустаяСсылка)
	|			ТОГДА ДанныеОтветственныеЛица.Должность
	|		ИНАЧЕ ДанныеОтветственныеЛица.Основание.Должность
	|	КОНЕЦ КАК Должность,
	|	ВЫБОР
	|		КОГДА НЕ ДанныеОтветственныеЛица.Основание ЕСТЬ NULL
	|				И НЕ ДанныеОтветственныеЛица.Основание = ЗНАЧЕНИЕ(Справочник.ОснованияПраваПодписи.ПустаяСсылка)
	|			ТОГДА ДанныеОтветственныеЛица.Должность.Наименование
	|		ИНАЧЕ ДанныеОтветственныеЛица.Основание.Должность.Наименование
	|	КОНЕЦ КАК ДолжностьПредставление,
	|	ДанныеОтветственныеЛица.Основание КАК ОснованиеПраваПодписи,
	|	ДанныеОтветственныеЛица.Основание.Наименование КАК ОснованиеПраваПодписиПредставление
	|ИЗ
	|	ДанныеОтветственныеЛица КАК ДанныеОтветственныеЛица
	|ГДЕ
	|	ДанныеОтветственныеЛица.ОтветственноеЛицо = ЗНАЧЕНИЕ(Перечисление.ОтветственныеЛицаОрганизаций.ГлавныйБухгалтер)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ ПЕРВЫЕ 1
	|	ДанныеОтветственныеЛица.Пользователь КАК Пользователь,
	|	ДанныеОтветственныеЛица.ФизическоеЛицо КАК ФизическоеЛицо,
	|	ДанныеОтветственныеЛица.ОтветственноеЛицо КАК ОтветственноеЛицо,
	|	ДанныеОтветственныеЛица.ФизическоеЛицо.Фамилия КАК Фамилия,
	|	ДанныеОтветственныеЛица.ФизическоеЛицо.Имя КАК Имя,
	|	ДанныеОтветственныеЛица.ФизическоеЛицо.Отчество КАК Отчество,
	|	ДанныеОтветственныеЛица.ФизическоеЛицо.Наименование КАК ФИОПредставление,
	|	ВЫБОР
	|		КОГДА НЕ ДанныеОтветственныеЛица.Основание ЕСТЬ NULL
	|				И НЕ ДанныеОтветственныеЛица.Основание = ЗНАЧЕНИЕ(Справочник.ОснованияПраваПодписи.ПустаяСсылка)
	|			ТОГДА ДанныеОтветственныеЛица.Должность
	|		ИНАЧЕ ДанныеОтветственныеЛица.Основание.Должность
	|	КОНЕЦ КАК Должность,
	|	ВЫБОР
	|		КОГДА НЕ ДанныеОтветственныеЛица.Основание ЕСТЬ NULL
	|				И НЕ ДанныеОтветственныеЛица.Основание = ЗНАЧЕНИЕ(Справочник.ОснованияПраваПодписи.ПустаяСсылка)
	|			ТОГДА ДанныеОтветственныеЛица.Должность.Наименование
	|		ИНАЧЕ ДанныеОтветственныеЛица.Основание.Должность.Наименование
	|	КОНЕЦ КАК ДолжностьПредставление,
	|	ДанныеОтветственныеЛица.Основание КАК ОснованиеПраваПодписи,
	|	ДанныеОтветственныеЛица.Основание.Наименование КАК ОснованиеПраваПодписиПредставление
	|ИЗ
	|	ДанныеОтветственныеЛица КАК ДанныеОтветственныеЛица
	|ГДЕ
	|	ДанныеОтветственныеЛица.ОтветственноеЛицо = ЗНАЧЕНИЕ(Перечисление.ОтветственныеЛицаОрганизаций.ОтветственныйЗаОформление)";
	
	Запрос.УстановитьПараметр("ДатаСреза", ДатаСреза);
	Запрос.УстановитьПараметр("СтруктурнаяЕдиница", Организация);
	Запрос.УстановитьПараметр("Пользователь", Пользователь);
	Запрос.УстановитьПараметр("ФизическоеЛицо", ФизическоеЛицо);
	
	ПакетЗапросов = Запрос.ВыполнитьПакет();
	
	Для ИндексПакета = 1 по Результат.Количество() цикл
		
		ДанныеПодписи = ПакетЗапросов.Получить(ИндексПакета).Выбрать();
		
		Если ДанныеПодписи.Следующий() тогда
			
			ПустыеДанныеПодписи = Результат.Получить(ДанныеПодписи.ОтветственноеЛицо);
			ЗаполнитьЗначенияСвойств(ПустыеДанныеПодписи.ФИО, ДанныеПодписи);
			ЗаполнитьЗначенияСвойств(ПустыеДанныеПодписи, ДанныеПодписи);
			
			ПустыеДанныеПодписи.ФИО.Представление = ДанныеПодписи.ФИОПредставление;
			
		КонецЕсли;
		
	КонецЦикла;
	
	// В случае отсутствия данных в расширении, получим данные уполномоченных лиц по организации,
	// а в случае и их отсутствия, установим данные из организации
	Руководители = ОтветственныеЛица(Организация, ДатаСреза);
	ДанныеУполномоченныхЛиц = ДанныеУполномоченногоЛица(Организация,
	                                                    Пользователь,
	                                                    ПредопределенноеЗначение("Справочник.ПодразделенияОрганизаций.ПустаяСсылка"));
	
	РезультатРуководитель = Результат.Получить(ПредопределенноеЗначение("Перечисление.ОтветственныеЛицаОрганизаций.Руководитель"));
	РезультатГлавныйБухгалтер = Результат.Получить(ПредопределенноеЗначение("Перечисление.ОтветственныеЛицаОрганизаций.ГлавныйБухгалтер"));
	РезультатОтветственныйЗаОформление = Результат.Получить(ПредопределенноеЗначение("Перечисление.ОтветственныеЛицаОрганизаций.ОтветственныйЗаОформление"));
	
	Если НЕ ЗначениеЗаполнено(РезультатРуководитель.ФизическоеЛицо) тогда
		Если ЗначениеЗаполнено(ДанныеУполномоченныхЛиц.Руководитель) Тогда
			РезультатРуководитель.ФизическоеЛицо                         = ДанныеУполномоченныхЛиц.Руководитель;
			РезультатРуководитель.ОснованиеПраваПодписи                  = ДанныеУполномоченныхЛиц.РуководительНаОсновании;
			РезультатРуководитель.ОснованиеПраваПодписиПредставление     = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ДанныеУполномоченныхЛиц.РуководительНаОсновании, "Наименование");
		Иначе
			РезультатРуководитель.ФизическоеЛицо                         = Руководители.Руководитель;
		КонецЕсли;
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(РезультатГлавныйБухгалтер.ФизическоеЛицо) тогда
		Если ЗначениеЗаполнено(ДанныеУполномоченныхЛиц.ГлавныйБухгалтер) Тогда
			РезультатГлавныйБухгалтер.ФизическоеЛицо                     = ДанныеУполномоченныхЛиц.ГлавныйБухгалтер;
			РезультатГлавныйБухгалтер.ОснованиеПраваПодписи              = ДанныеУполномоченныхЛиц.ГлавныйБухгалтерНаОсновании;
			РезультатГлавныйБухгалтер.ОснованиеПраваПодписиПредставление = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ДанныеУполномоченныхЛиц.ГлавныйБухгалтерНаОсновании, "Наименование");
		Иначе
			РезультатГлавныйБухгалтер.ФизическоеЛицо                     = Руководители.ГлавныйБухгалтер;
		КонецЕсли;
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(РезультатОтветственныйЗаОформление.ФизическоеЛицо) тогда
		Если ЗначениеЗаполнено(ДанныеУполномоченныхЛиц.ОтветственныйЗаОформление) Тогда
			РезультатГлавныйБухгалтер.ФизическоеЛицо                     = ДанныеУполномоченныхЛиц.ОтветственныйЗаОформление;
		КонецЕсли;
	КонецЕсли;
	
	Результат.Вставить(ПредопределенноеЗначение("Перечисление.ОтветственныеЛицаОрганизаций.Руководитель"), РезультатРуководитель);
	Результат.Вставить(ПредопределенноеЗначение("Перечисление.ОтветственныеЛицаОрганизаций.ГлавныйБухгалтер"), РезультатГлавныйБухгалтер);
	Результат.Вставить(ПредопределенноеЗначение("Перечисление.ОтветственныеЛицаОрганизаций.ОтветственныйЗаОформление"), РезультатОтветственныйЗаОформление);
	
	Возврат Результат;
	
КонецФункции

Функция СокращенноеФИО(ФИОПолное) Экспорт
	
	РазложенаяСтрока = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(ФИОПолное, " ");
	
	ЗапрещенныеВыражения = Новый Массив;
	ЗапрещенныеВыражения.Добавить("ИП");
	ЗапрещенныеВыражения.Добавить("ИНДИВИДУАЛЬНЫЙ");
	ЗапрещенныеВыражения.Добавить("ПРЕДПРИНИМАТЕЛЬ");
	
	РазмерМассива = РазложенаяСтрока.Количество();
	Счетчик = 1;
	Пока Счетчик <= РазмерМассива цикл
		
		Подстрока = РазложенаяСтрока.Получить(Счетчик - 1);
		Если НЕ ЗапрещенныеВыражения.Найти(ВРЕГ(Подстрока)) = Неопределено тогда
			РазложенаяСтрока.Удалить(Счетчик - 1);
			Счетчик = Счетчик - 1;
			РазмерМассива = РазмерМассива - 1;
		КонецЕсли;
		
		Счетчик = Счетчик + 1;
	КонецЦикла;
	
	Если НЕ РазложенаяСтрока.Количество() = 3 тогда
		Возврат ФИОПолное;
	КонецЕсли;
	
	Фамилия = РазложенаяСтрока.Получить(0);
	Имя = РазложенаяСтрока.Получить(1);
	Отчество = РазложенаяСтрока.Получить(2);
	
	Инициалы = ВРЕГ(Лев(Имя, 1)) + ". " + ВРЕГ(Лев(Отчество, 1)) + ".";
	
	Возврат Фамилия + " " + Инициалы;
	
КонецФункции