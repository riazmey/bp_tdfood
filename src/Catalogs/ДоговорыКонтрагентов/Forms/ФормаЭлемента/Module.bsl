
&НаКлиенте
Процедура Базар_ВидДоговораПриИзмененииПосле(Элемент)
	
	Объект.ВидВзаиморасчетов = "";	
	Объект.ЗаконРегулирующийОтношения = "";
	
	УстановитьТипЦенПоУмолчанию();
	
	Базар_УправлениеФормой();
	
КонецПроцедуры

&НаСервере
Процедура УстановитьТипЦенПоУмолчанию()
	
	Справочники.ДоговорыКонтрагентов.УстановитьТипЦенПоУмолчанию(Объект);
	
КонецПроцедуры

&НаКлиенте
Процедура Базар_ПриОткрытииПосле(Отказ)
	
	Базар_УправлениеФормой();
	
	СписВремени = ТранспортнаяЛогистикаКлиент.СписокВремениНачалаЛогистики();
	Элементы.ВремяЛогистикиНачало.СписокВыбора.Очистить();
	Элементы.ВремяЛогистикиОкончание.СписокВыбора.Очистить();
	Для Каждого Элемент из СписВремени Цикл
		Элементы.ВремяЛогистикиНачало.СписокВыбора.Добавить(Элемент.Значение,Элемент.Представление);
		Элементы.ВремяЛогистикиОкончание.СписокВыбора.Добавить(Элемент.Значение,Элемент.Представление);
	КонецЦикла;
	
	Элементы.БанковскийСчетКонтрагента.СписокВыбора.ЗагрузитьЗначения(Базар_БанковскийСчетКонтрагентаЗаполнитьСписокВыбора(Объект.Владелец));
	
КонецПроцедуры

&НаКлиенте
Процедура Базар_ВремяЛогистикиНачалоПриИзмененииПосле(Элемент)
	
	СписокВремени = ТранспортнаяЛогистикаКлиент.СписокВремениНачалаЛогистики(Объект.ВремяЛогистикиНачало,);
	Элементы.ВремяЛогистикиОкончание.СписокВыбора.Очистить();
	Для Каждого Элемент из СписокВремени Цикл
		Элементы.ВремяЛогистикиОкончание.СписокВыбора.Добавить(Элемент.Значение, Элемент.Представление);
	КонецЦикла;

КонецПроцедуры

&НаКлиенте
Процедура Базар_ВремяЛогистикиОкончаниеПриИзмененииПосле(Элемент)
	
	СписокВремени = ТранспортнаяЛогистикаКлиент.СписокВремениНачалаЛогистики(,Объект.ВремяЛогистикиОкончание);
	Элементы.ВремяЛогистикиНачало.СписокВыбора.Очистить();
	Для Каждого Элемент из СписокВремени Цикл
		Элементы.ВремяЛогистикиНачало.СписокВыбора.Добавить(Элемент.Значение,Элемент.Представление);
	КонецЦикла;

КонецПроцедуры

&НаКлиенте
Процедура Базар_УправлениеФормой()
		
	Если Объект.ВидДоговора = ПредопределенноеЗначение("Перечисление.ВидыДоговоровКонтрагентов.СПокупателем") тогда
		Элементы.ГруппаВремяЛогистики.Видимость = Истина;
		Элементы.ОбособленныйУчетМногооботнойТары.Видимость = Истина;
		Элементы.ВремяЛогистикиНачало.Заголовок = "Время начала доставки";
		Элементы.ВремяЛогистикиОкончание.Заголовок = "Время окончания доставки";
		Элементы.ТипЦен.АвтоОтметкаНезаполненного = Истина;
		
	ИначеЕсли Объект.ВидДоговора = ПредопределенноеЗначение("Перечисление.ВидыДоговоровКонтрагентов.СПоставщиком") тогда
		Элементы.ГруппаВремяЛогистики.Видимость = Истина;
		Элементы.ОбособленныйУчетМногооботнойТары.Видимость = Ложь;
		Элементы.ВремяЛогистикиНачало.Заголовок = "Время начала закупки";
		Элементы.ВремяЛогистикиОкончание.Заголовок = "Время окончания закупки";
		Элементы.ТипЦен.АвтоОтметкаНезаполненного = Истина;
		
	Иначе	
		Элементы.ГруппаВремяЛогистики.Видимость = Ложь;
		Элементы.ОбособленныйУчетМногооботнойТары.Видимость = Ложь;
		Элементы.ТипЦен.АвтоОтметкаНезаполненного = Ложь;
		
	КонецЕсли;
	
	Базар_УправлениеФормойСервер();
	
КонецПроцедуры

&НаСервере
Процедура Базар_УправлениеФормойСервер()
	
	Элементы.ЗаконРегулирующийОтношения.СписокВыбора.Очистить();
	Если ЗначениеЗаполнено(Объект.ВидДоговора) тогда
		Если Объект.ВидДоговора = ПредопределенноеЗначение("Перечисление.ВидыДоговоровКонтрагентов.СПокупателем")
		 ИЛИ Объект.ВидДоговора = ПредопределенноеЗначение("Перечисление.ВидыДоговоровКонтрагентов.СПоставщиком") Тогда
			Если ЗначениеЗаполнено(Объект.ВидВзаиморасчетов) тогда
				Если ГосЗакупкиСервер.ЭтоДоговорПоставкиГосЗакупок(Объект) тогда
					Элементы.ЗаконРегулирующийОтношения.СписокВыбора.Добавить(ПредопределенноеЗначение("Перечисление.Базар_ЗаконРегулирующийОтношенияПоДоговору.ФЗ44"));
					Элементы.ЗаконРегулирующийОтношения.СписокВыбора.Добавить(ПредопределенноеЗначение("Перечисление.Базар_ЗаконРегулирующийОтношенияПоДоговору.ФЗ223"));
				Иначе
					Элементы.ЗаконРегулирующийОтношения.СписокВыбора.Добавить(ПредопределенноеЗначение("Перечисление.Базар_ЗаконРегулирующийОтношенияПоДоговору.ГКРФ"));
				КонецЕсли;
			Иначе
				Если Объект.ВидДоговора = ПредопределенноеЗначение("Перечисление.ВидыДоговоровКонтрагентов.СПокупателем") тогда
					Элементы.ЗаконРегулирующийОтношения.СписокВыбора.Добавить(ПредопределенноеЗначение("Перечисление.Базар_ЗаконРегулирующийОтношенияПоДоговору.ФЗ44"));
					Элементы.ЗаконРегулирующийОтношения.СписокВыбора.Добавить(ПредопределенноеЗначение("Перечисление.Базар_ЗаконРегулирующийОтношенияПоДоговору.ФЗ223"));
				КонецЕсли;
				Элементы.ЗаконРегулирующийОтношения.СписокВыбора.Добавить(ПредопределенноеЗначение("Перечисление.Базар_ЗаконРегулирующийОтношенияПоДоговору.ГКРФ"));
			КонецЕсли;
		Иначе
			Элементы.ЗаконРегулирующийОтношения.СписокВыбора.Добавить(ПредопределенноеЗначение("Перечисление.Базар_ЗаконРегулирующийОтношенияПоДоговору.ГКРФ"));
		КонецЕсли;
	КонецЕсли;
	
	Элементы.ВидВзаиморасчетов.СписокВыбора.Очистить();
	
	Если ЗначениеЗаполнено(Объект.ЗаконРегулирующийОтношения) тогда
		ВидыВзаиморасчетов_ПокупателиГос = Новый Массив;
		ВидыВзаиморасчетов_ПокупателиГос.Добавить(ПредопределенныеЭлементыРасширенияСервер.ПредопределенноеЗначениеРасширения("Справочник", "ВидыВзаиморасчетов", "ПокупательАукцион"));
		ВидыВзаиморасчетов_ПокупателиГос.Добавить(ПредопределенныеЭлементыРасширенияСервер.ПредопределенноеЗначениеРасширения("Справочник", "ВидыВзаиморасчетов", "ПокупательКонкурсКотировка"));
		ВидыВзаиморасчетов_ПокупателиГос.Добавить(ПредопределенныеЭлементыРасширенияСервер.ПредопределенноеЗначениеРасширения("Справочник", "ВидыВзаиморасчетов", "ПокупательПрямойДоговорБюджет"));
		ВидыВзаиморасчетов_ПокупателиГос.Добавить(ПредопределенныеЭлементыРасширенияСервер.ПредопределенноеЗначениеРасширения("Справочник", "ВидыВзаиморасчетов", "ПокупательПрямойДоговорВнебюджет"));
			
		ВидыВзаиморасчетов_Поставщики = Новый Массив;
		ВидыВзаиморасчетов_Поставщики.Добавить(ПредопределенныеЭлементыРасширенияСервер.ПредопределенноеЗначениеРасширения("Справочник", "ВидыВзаиморасчетов", "ПоставщикЗакупкаТоваров"));
		ВидыВзаиморасчетов_Поставщики.Добавить(ПредопределенныеЭлементыРасширенияСервер.ПредопределенноеЗначениеРасширения("Справочник", "ВидыВзаиморасчетов", "ПоставщикЗакупкаМатериаловУслуг"));
		
		Если Объект.ВидДоговора = ПредопределенноеЗначение("Перечисление.ВидыДоговоровКонтрагентов.СПокупателем") тогда
			Если Объект.ЗаконРегулирующийОтношения = ПредопределенноеЗначение("Перечисление.Базар_ЗаконРегулирующийОтношенияПоДоговору.ГКРФ") тогда
				Элементы.ВидВзаиморасчетов.СписокВыбора.Добавить(ПредопределенныеЭлементыРасширенияСервер.ПредопределенноеЗначениеРасширения("Справочник", "ВидыВзаиморасчетов", "ПокупательДоговорПоставки"));
			Иначе
				Для Каждого ВидВзаиморасчета из ВидыВзаиморасчетов_ПокупателиГос цикл
					Элементы.ВидВзаиморасчетов.СписокВыбора.Добавить(ВидВзаиморасчета);
				КонецЦикла;
			КонецЕсли;
		ИначеЕсли Объект.ВидДоговора = ПредопределенноеЗначение("Перечисление.ВидыДоговоровКонтрагентов.СПоставщиком") тогда
			Для Каждого ВидВзаиморасчета из ВидыВзаиморасчетов_Поставщики цикл
				Элементы.ВидВзаиморасчетов.СписокВыбора.Добавить(ВидВзаиморасчета);
			КонецЦикла;
		Иначе
			Элементы.ВидВзаиморасчетов.СписокВыбора.Добавить(ПредопределенныеЭлементыРасширенияСервер.ПредопределенноеЗначениеРасширения("Справочник", "ВидыВзаиморасчетов", "ПрочиеДоговора"));
		КонецЕсли;
	КонецЕсли;
	
	Элементы.НомерРеестровойЗаписи.Видимость = НЕ Объект.ВидВзаиморасчетов = ПредопределенныеЭлементыРасширенияСервер.ПредопределенноеЗначениеРасширения("Справочник", "ВидыВзаиморасчетов", "ПрочиеДоговора");
		
	Элементы.НомерИзвещенияГК.Видимость = 
		Объект.ВидВзаиморасчетов = ПредопределенныеЭлементыРасширенияСервер.ПредопределенноеЗначениеРасширения("Справочник", "ВидыВзаиморасчетов", "ПокупательАукцион") ИЛИ
		Объект.ВидВзаиморасчетов = ПредопределенныеЭлементыРасширенияСервер.ПредопределенноеЗначениеРасширения("Справочник", "ВидыВзаиморасчетов", "ПокупательКонкурсКотировка");
		
	Элементы.ТорговыйПредставитель.Видимость = 
		Объект.ВидВзаиморасчетов = ПредопределенныеЭлементыРасширенияСервер.ПредопределенноеЗначениеРасширения("Справочник", "ВидыВзаиморасчетов", "ПокупательПрямойДоговорБюджет") ИЛИ
		Объект.ВидВзаиморасчетов = ПредопределенныеЭлементыРасширенияСервер.ПредопределенноеЗначениеРасширения("Справочник", "ВидыВзаиморасчетов", "ПокупательПрямойДоговорВнебюджет") ИЛИ
		Объект.ВидВзаиморасчетов = ПредопределенныеЭлементыРасширенияСервер.ПредопределенноеЗначениеРасширения("Справочник", "ВидыВзаиморасчетов", "ПокупательДоговорПоставки");
		
	Элементы.БанковскийСчетКонтрагента.Видимость = 
		(Объект.ВидДоговора = ПредопределенноеЗначение("Перечисление.ВидыДоговоровКонтрагентов.СПокупателем") ИЛИ
		 Объект.ВидДоговора = ПредопределенноеЗначение("Перечисление.ВидыДоговоровКонтрагентов.СПоставщиком")) И
		 НЕ Объект.ОплатаЗаНаличныйРасчет;
		
	Элементы.БанковскийСчетОрганизации.Видимость = Элементы.БанковскийСчетКонтрагента.Видимость;
	
КонецПроцедуры

&НаКлиенте
Процедура Базар_ВидВзаиморасчетовПриИзмененииПосле(Элемент)
	
	Если НЕ ЗначениеЗаполнено(Объект.ВидВзаиморасчетов) тогда
		Объект.ЗаконРегулирующийОтношения = "";
	КонецЕсли;
	
	Базар_УправлениеФормой();
	
КонецПроцедуры

&НаКлиенте
Процедура Базар_ЗаконРегулирующийОтношенияПриИзмененииПосле(Элемент)
	
	Если НЕ ЗначениеЗаполнено(Объект.ЗаконРегулирующийОтношения) тогда
		Объект.ВидВзаиморасчетов = "";
	КонецЕсли;
	
	Базар_УправлениеФормой();
	
КонецПроцедуры

&НаКлиенте
Процедура Базар_НаименованиеНачалоВыбораПосле(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка=Ложь;
	
	Объект.Наименование = Базар_НаименованиеНачалоВыбораПослеНаСервере(Объект.ВидВзаиморасчетов,
	                                                                   Объект.ЗаконРегулирующийОтношения,
	                                                                   Объект.ОплатаЗаНаличныйРасчет,
	                                                                   Объект.Номер,
	                                                                   Объект.Дата);
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция Базар_НаименованиеНачалоВыбораПослеНаСервере(ВидВзаиморасчетов, ЗаконРегулирующийОтношения, ОплатаЗаНаличныйРасчет, Номер, Дата)
	
	Наименование = "";
	Если ВидВзаиморасчетов = ПредопределенныеЭлементыРасширенияСервер.ПредопределенноеЗначениеРасширения("Справочник", "ВидыВзаиморасчетов", "ПокупательАукцион")
		 ИЛИ ВидВзаиморасчетов = ПредопределенныеЭлементыРасширенияСервер.ПредопределенноеЗначениеРасширения("Справочник", "ВидыВзаиморасчетов", "ПокупательКонкурсКотировка") тогда
		Наименование = "Контракт №"+Номер+" от "+Формат(Дата,"ДФ=dd.MM.yyyy");
		
	Иначе
		Если ЗаконРегулирующийОтношения = ПредопределенноеЗначение("Перечисление.Базар_ЗаконРегулирующийОтношенияПоДоговору.ФЗ44") тогда
			Наименование = "Контракт №"+Номер+" от "+Формат(Дата,"ДФ=dd.MM.yyyy");
			
		ИначеЕсли ЗаконРегулирующийОтношения = ПредопределенноеЗначение("Перечисление.Базар_ЗаконРегулирующийОтношенияПоДоговору.ФЗ223") тогда
			Если ВидВзаиморасчетов = ПредопределенныеЭлементыРасширенияСервер.ПредопределенноеЗначениеРасширения("Справочник", "ВидыВзаиморасчетов", "ПокупательПрямойДоговорБюджет")
				  ИЛИ ВидВзаиморасчетов = ПредопределенныеЭлементыРасширенияСервер.ПредопределенноеЗначениеРасширения("Справочник", "ВидыВзаиморасчетов", "ПокупательПрямойДоговорВнебюджет") тогда
				  Наименование = "Договор №"+Номер+" от "+Формат(Дата,"ДФ=dd.MM.yyyy");
			Иначе
				Наименование = "Контракт №"+Номер+" от "+Формат(Дата,"ДФ=dd.MM.yyyy");
			КонецЕсли;
		
		ИначеЕсли ЗаконРегулирующийОтношения = ПредопределенноеЗначение("Перечисление.Базар_ЗаконРегулирующийОтношенияПоДоговору.ГКРФ") тогда
			Если ВидВзаиморасчетов = ПредопределенныеЭлементыРасширенияСервер.ПредопределенноеЗначениеРасширения("Справочник", "ВидыВзаиморасчетов", "ПокупательДоговорПоставки") тогда
				Если ОплатаЗаНаличныйРасчет тогда
					Наименование = "Договор №"+Номер+" от "+Формат(Дата,"ДФ=dd.MM.yyyy")+" (нал. оплата)";
				Иначе
					Наименование = "Договор №"+Номер+" от "+Формат(Дата,"ДФ=dd.MM.yyyy")+" (б/нал. оплата)";
				КонецЕсли;
			Иначе
				Наименование = "Договор №"+Номер+" от "+Формат(Дата,"ДФ=dd.MM.yyyy");
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
	Возврат Наименование;
	
КонецФункции

&НаСервереБезКонтекста
Функция Базар_БанковскийСчетКонтрагентаЗаполнитьСписокВыбора(Контрагент)
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	БанковскиеСчета.Ссылка КАК Ссылка
	               |ИЗ
	               |	Справочник.БанковскиеСчета КАК БанковскиеСчета
	               |ГДЕ
	               |	БанковскиеСчета.Владелец = &Контрагент";
	
	Запрос.УстановитьПараметр("Контрагент", Контрагент);
	
	Возврат Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка");
	
КонецФункции

&НаКлиенте
Процедура Базар_ОплатаЗаНаличныйРасчетПриИзмененииПосле(Элемент)
	
	Базар_УправлениеФормой();
	
КонецПроцедуры


&НаСервере
Процедура Базар_ПриСозданииНаСервереПосле(Отказ, СтандартнаяОбработка)
	
	Если НЕ ЗначениеЗаполнено(Объект.Организация) тогда
		Справочники.ДоговорыКонтрагентов.УстановитьОрганизациюПоУмолчанию(Объект);
		Модифицированность = Истина;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура Базар_РуководительПриИзмененииПослеНаСервере()
	
	Объект.ЗаРуководителяПоПриказу = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Объект.Организация, "ОснованиеПраваПодписиДоговоров");
	
КонецПроцедуры

&НаКлиенте
Процедура Базар_РуководительПриИзмененииПосле(Элемент)
	Базар_РуководительПриИзмененииПослеНаСервере();
КонецПроцедуры


