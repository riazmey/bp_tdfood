
&Вместо("ОбработкаПроверкиЗаполнения")
Процедура Базар_ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	МассивНепроверяемыхРеквизитов	= Новый Массив;
	
	Если НЕ ЭтоГруппа Тогда
		
		Если НЕ ОбособленноеПодразделение Тогда
			МассивНепроверяемыхРеквизитов.Добавить("ГоловнойКонтрагент");
		КонецЕсли;
		
		Если НЕ ГосударственныйОрган Тогда
			МассивНепроверяемыхРеквизитов.Добавить("ВидГосударственногоОргана");
			МассивНепроверяемыхРеквизитов.Добавить("КодГосударственногоОргана");
		ИначеЕсли ВидГосударственногоОргана = Перечисления.ВидыГосударственныхОрганов.Прочий Тогда
			МассивНепроверяемыхРеквизитов.Добавить("КодГосударственногоОргана");
		КонецЕсли;
		
		ЭтоЮрЛицо = (ЮридическоеФизическоеЛицо = Перечисления.ЮридическоеФизическоеЛицо.ЮридическоеЛицо);
		
		//Если ЗначениеЗаполнено(ИНН) И НЕ ИННВведенКорректно Тогда
		//	СтруктураРезультатаПроверкиКорректностиИНН = ИдентификационныеНомераНалогоплательщиков.ПроверитьСоответствиеТребованиямИНН(ИНН, ЭтоЮрЛицо);
		//	
		//	Если НЕ ПустаяСтрока(СтруктураРезультатаПроверкиКорректностиИНН.ОписаниеОшибки) Тогда
		//		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
		//			СтруктураРезультатаПроверкиКорректностиИНН.ОписаниеОшибки,
		//			ЭтотОбъект,
		//			"ИНН",
		//			,
		//			Отказ);
		//		// Запишем информацию о проблеме с ИНН в журнал регистрации.
		//		ЗаписьЖурналаРегистрации(
		//			НСтр("ru='Не удалось записать контрагента. Неправильный ИНН.'"), 
		//			УровеньЖурналаРегистрации.Информация, 
		//			Метаданные.Справочники.Контрагенты,
		//			,
		//			СтруктураРезультатаПроверкиКорректностиИНН.ОписаниеОшибки);
		//	КонецЕсли;
		//КонецЕсли;
		
		//Если ЗначениеЗаполнено(КПП) И НЕ КППВведенКорректно Тогда
		//	СтруктураРезультатаПроверкиКорректностиКПП = ИдентификационныеНомераНалогоплательщиков.ПроверитьСоответствиеТребованиямКПП(КПП, ЭтоЮрЛицо, ОбособленноеПодразделение);
		//	
		//	Если НЕ СтруктураРезультатаПроверкиКорректностиКПП.СоответствуетТребованиям И НЕ ПустаяСтрока(СтруктураРезультатаПроверкиКорректностиКПП.ОписаниеОшибки) Тогда
		//		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
		//			СтруктураРезультатаПроверкиКорректностиКПП.ОписаниеОшибки,
		//			ЭтотОбъект,
		//			"КПП",
		//			,
		//			Отказ);
		//		// Запишем информацию о проблеме с КПП в журнал регистрации.
		//		ЗаписьЖурналаРегистрации(
		//			НСтр("ru='Не удалось записать контрагента. Неправильный КПП.'"), 
		//			УровеньЖурналаРегистрации.Информация, 
		//			Метаданные.Справочники.Контрагенты,
		//			,
		//			СтруктураРезультатаПроверкиКорректностиКПП.ОписаниеОшибки);
		//	КонецЕсли;
		//КонецЕсли;
		
		// Проверяем заполнение КПП только для российских организаций
		//Если ЗначениеЗаполнено(ИНН) И ЭтоЮрЛицо 
		//	И СтранаРегистрации = ПредопределенноеЗначение("Справочник.СтраныМира.Россия") Тогда
		//	ПроверяемыеРеквизиты.Добавить("КПП");
		//КонецЕсли;
		//
		//Если ЗначениеЗаполнено(КПП) И ЭтоЮрЛицо 
		//	И СтранаРегистрации = ПредопределенноеЗначение("Справочник.СтраныМира.Россия") Тогда
		//	ПроверяемыеРеквизиты.Добавить("ИНН");
		//КонецЕсли;
		//
		//Если ОбособленноеПодразделение И ЗначениеЗаполнено(ГоловнойКонтрагент) И ГоловнойКонтрагент = Ссылка Тогда
		//	
		//	ТекстОшибки	= НСтр("ru = 'Контрагент не может являться своим обособленным подразделением'");
		//	ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстОшибки, ЭтотОбъект, "ГоловнойКонтрагент", , Отказ);
		//	
		//КонецЕсли;

		
		Если ЗначениеЗаполнено(ГоловнойКонтрагент) И ГоловнойКонтрагент <> Ссылка Тогда
			
			МассивПодчиненныхКонтрагентов	= Справочники.Контрагенты.ПолучитьМассивПодчиненныхКонтрагентов(Ссылка);
			Если МассивПодчиненныхКонтрагентов.Количество() > 0 Тогда
				
				ТекстОшибки	= СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
					НСтр("ru = 'Контрагент %1 не может иметь головного контрагента, т.к. сам является головным для других контрагентов'"),
					Наименование);
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстОшибки, ЭтотОбъект, "ГоловнойКонтрагент", , Отказ);
				
			Иначе
				
				СвойстваГоловногоКонтрагента	= ОбщегоНазначения.ЗначенияРеквизитовОбъекта(
					ГоловнойКонтрагент, "Наименование, ГоловнойКонтрагент, СтранаРегистрации");
					
				Если ЗначениеЗаполнено(СвойстваГоловногоКонтрагента.ГоловнойКонтрагент)
					И СвойстваГоловногоКонтрагента.ГоловнойКонтрагент <> ГоловнойКонтрагент Тогда
					
					ТекстОшибки	= СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
						НСтр("ru = 'Контрагент %1 не может быть выбран головным, т.к. для него самого назначен головной контрагент'"),
						СвойстваГоловногоКонтрагента.Наименование);
					ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстОшибки, ЭтотОбъект, "ГоловнойКонтрагент", , Отказ);
					
				КонецЕсли;
				
			КонецЕсли;
			
		КонецЕсли;
		
		//Если НЕ ЭтоЮрЛицо Тогда
		//	
		//	МассивОбособленныхПодразделений	= Справочники.Контрагенты.ПолучитьМассивОбособленныхПодразделений(Ссылка);
		//	Если МассивОбособленныхПодразделений.Количество() > 0 Тогда
		//		
		//		ТекстОшибки	= СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
		//			НСтр("ru = 'Контрагент %1 не может быть физическим лицом, т.к. является головным подразделением для других контрагентов'"),
		//			Наименование);
		//		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстОшибки, ЭтотОбъект, , , Отказ);
		//		
		//	КонецЕсли;
		//	
		//КонецЕсли;
		
	КонецЕсли;
	
	ОбщегоНазначения.УдалитьНепроверяемыеРеквизитыИзМассива(ПроверяемыеРеквизиты, МассивНепроверяемыхРеквизитов);
	
КонецПроцедуры
