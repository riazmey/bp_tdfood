
&НаКлиенте
Процедура КомандыПечатиПредставлениеНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Если ЗначениеЗаполнено(Объект.ОбъектМетаданных) тогда
		ДанныеВыбора = СписокКомандПечатиОбъекта(Объект.ОбъектМетаданных);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура КомандыПечатиПредставлениеОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	Если Элементы.КомандыПечати.ТекущиеДанные = Неопределено тогда
		Возврат;
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(Объект.ОбъектМетаданных) тогда
		ТекущийЭлемент = Элементы.ОбъектМетаданных;
		Возврат;
	КонецЕсли;
	
	КомандыПечатиПредставлениеОбработкаВыбораНаСервере(ВыбранноеЗначение, Элементы.КомандыПечати.ТекущаяСтрока);
	
КонецПроцедуры

&НаСервере
Процедура КомандыПечатиПредставлениеОбработкаВыбораНаСервере(ВыбранноеЗначение, ИдентификаторСтроки)
	
	СтрокаКомандыПечати = Объект.КомандыПечати.НайтиПоИдентификатору(ИдентификаторСтроки);
	ЗаполнитьЗначенияСвойств(СтрокаКомандыПечати, ВыбранноеЗначение);
	СтрокаКомандыПечати.КоличествоКопий = 1;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбъектМетаданныхНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ДанныеВыбора = МетаданныеОбъектаНачалоВыбораНаСервере();
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция СписокКомандПечатиОбъекта(ОбъектМетаданных)
	
	Возврат НастройкиАвтоматическойПечатиСервер.СписокКомандПечатиОбъекта(ОбъектМетаданных);
	
КонецФункции

&НаСервереБезКонтекста
Функция МетаданныеОбъектаНачалоВыбораНаСервере()
	
	Возврат НастройкиАвтоматическойПечатиСервер.СписокОбъектовМетаданных(Ложь);
	
КонецФункции

&НаСервереБезКонтекста
Функция НастройкиАвтоматическойПечатиОбъектаМетаданных(Владелец, ОбъектМетаданных)
	
	Возврат НастройкиАвтоматическойПечатиСервер.НастройкиАвтоматическойПечатиОбъектаМетаданных(Владелец, ОбъектМетаданных);
	
КонецФункции

&НаКлиенте
Процедура ОбъектМетаданныхПриИзменении(Элемент)
	
	Объект.КомандыПечати.Очистить();
	
	Если ЗначениеЗаполнено(Объект.ОбъектМетаданных) тогда
		НастройкиПечати = НастройкиАвтоматическойПечатиОбъектаМетаданных(Объект.Владелец, Объект.ОбъектМетаданных);
		Если НЕ НастройкиПечати.КомандыПечати = Неопределено И НастройкиПечати.Владелец <> Объект.Владелец И НастройкиПечати.Унаследованы тогда
			
			Если ТипЗнч(НастройкиПечати.Владелец) = Тип("СправочникСсылка.НастройкиАвтоматическойПечатиБазовые") тогда
				ОписаниеВладельца = "Базовые настройки";
			Иначе
				Если ТипЗнч(НастройкиПечати.Владелец) = Тип("СправочникСсылка.Контрагенты") тогда
					ОписаниеВладельца = "Контрагент: " + Строка(НастройкиПечати.Владелец);
				КонецЕсли;
			КонецЕсли;
			
			ТекстВопроса = НСтр("ru = 'У выбранного Вами объекта есть родительские настройки автоматической печати ("+ОписаниеВладельца+").
			                          |Хотите ли Вы заполнить настройки автоматической печати объекта на основании родителя?'");
			Оповещение = Новый ОписаниеОповещения("ОтветНаВопросЗаполнитьНастройкиРодительскими", ЭтотОбъект, НастройкиПечати);
			ПоказатьВопрос(Оповещение,
			               ТекстВопроса,
			               РежимДиалогаВопрос.ДаНет,
			               30,
			               КодВозвратаДиалога.Да,
			               "Заполнить настройки автоматической печати на основании родителя?",
			               КодВозвратаДиалога.Нет);
			
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОтветНаВопросЗаполнитьНастройкиРодительскими(Ответ, НастройкиПечати) Экспорт
	
	Если Ответ = КодВозвратаДиалога.Да Тогда
		ЗаполнитьНастройкиРодительскими(НастройкиПечати);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьНастройкиРодительскими(НастройкиПечати)
	
	Для Каждого СтрокаКомандыПечати из НастройкиПечати.КомандыПечати цикл
		НоваяСтрока = Объект.КомандыПечати.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаКомандыПечати);
	КонецЦикла;
	
КонецПроцедуры

