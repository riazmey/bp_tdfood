#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	Если Параметры.Ключ.Пустая() Тогда
		УстановитьСостояниеДокумента();	
		ЕстьДвиженияГосЗакупок = Ложь;
	Иначе
		МассивИсключенныхДокументов = Новый Массив;
		МассивИсключенныхДокументов.Добавить(Объект.Ссылка);
		ТаблицаДокументовУчаствующихВДвижениях = ГосЗакупкиСервер.ТаблицаДокументовУчаствующихВДвиженияхГосЗакупокСУсловием("ДоговорКонтрагента",
	                                                                                                                        Объект.ДоговорКонтрагента,
	                                                                                                                        МассивИсключенныхДокументов);
		ЕстьДвиженияГосЗакупок = ТаблицаДокументовУчаствующихВДвижениях.Количество() > 0;
	КонецЕсли;
	
	УправлениеФормой(ЭтаФорма);
	
	Если РегламентированнаяОтчетностьВызовСервера.ИспользуетсяОднаОрганизация() тогда
		ЭтаФорма.Элементы.Организация.Видимость = Ложь;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)

	// СтандартныеПодсистемы.УправлениеДоступом
	Если ОбщегоНазначения.ПодсистемаСуществует("СтандартныеПодсистемы.УправлениеДоступом") Тогда
		МодульУправлениеДоступом = ОбщегоНазначения.ОбщийМодуль("УправлениеДоступом");
		МодульУправлениеДоступом.ПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	КонецЕсли;
	// Конец СтандартныеПодсистемы.УправлениеДоступом
	
	// СтандартныеПодсистемы.ДатыЗапретаИзменения
	ДатыЗапретаИзменения.ОбъектПриЧтенииНаСервере(ЭтаФорма, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.ДатыЗапретаИзменения
	
	УстановитьСостояниеДокумента();
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)

	// СтандартныеПодсистемы.УправлениеДоступом
	УправлениеДоступом.ПослеЗаписиНаСервере(ЭтотОбъект, ТекущийОбъект, ПараметрыЗаписи);
	// Конец СтандартныеПодсистемы.УправлениеДоступом
	
	УстановитьСостояниеДокумента();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	Если ЕстьДвиженияГосЗакупок тогда
		ТекстСообщения = "Данный документ уже имеет расход номенклатуры (гос. закупки)," + Символы.ПС +
		                 "в связи с этим редактирование документа ограничено.";
		ПоказатьПредупреждение(Новый ОписаниеОповещения(), ТекстСообщения); 
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ОрганизацияПриИзменении(Элемент)

	Если ЗначениеЗаполнено(Объект.Организация) И ЗначениеЗаполнено(Объект.Контрагент) Тогда
		
		ДанныеОбъекта = Новый Структура("Организация, Контрагент, ДоговорКонтрагента");
		ЗаполнитьЗначенияСвойств(ДанныеОбъекта, Объект);
		
		АктуальныеДоговора = АктуальныеДоговораКонтрагента(Объект.Контрагент, Объект.Дата);
		
		Если АктуальныеДоговора.Количество() > 0 тогда
			Объект.ДоговорКонтрагента = АктуальныеДоговора.Получить(0);
		КонецЕсли;
		
	Иначе
		
		Если ЗначениеЗаполнено(Объект.ДоговорКонтрагента) Тогда
			Объект.ДоговорКонтрагента = ПредопределенноеЗначение("Справочник.ДоговорыКонтрагентов.ПустаяСсылка");
		КонецЕсли;	
		
	КонецЕсли;
	
	УправлениеФормой(ЭтаФорма);

КонецПроцедуры

&НаКлиенте
Процедура КонтрагентПриИзменении(Элемент)

	Если ЗначениеЗаполнено(Объект.Организация) И ЗначениеЗаполнено(Объект.Контрагент) Тогда
		
		ДанныеОбъекта = Новый Структура("Организация, Контрагент, ДоговорКонтрагента");
		ЗаполнитьЗначенияСвойств(ДанныеОбъекта, Объект);
		
		АктуальныеДоговора = АктуальныеДоговораКонтрагента(Объект.Контрагент, Объект.Дата);
		
		Если АктуальныеДоговора.Количество() > 0 тогда
			Объект.ДоговорКонтрагента = АктуальныеДоговора.Получить(0);
		КонецЕсли;
		
	Иначе
		
		Если ЗначениеЗаполнено(Объект.ДоговорКонтрагента) Тогда
			Объект.ДоговорКонтрагента = ПредопределенноеЗначение("Справочник.ДоговорыКонтрагентов.ПустаяСсылка");
		КонецЕсли;	
		
	КонецЕсли;
	
	УправлениеФормой(ЭтаФорма);

КонецПроцедуры

&НаКлиенте
Процедура ДоговорКонтрагентаПриИзменении(Элемент)

	Если ЗначениеЗаполнено(Объект.ДоговорКонтрагента) Тогда
		ДоговорКонтрагентаПриИзмененииНаСервере();
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ОтветственныйПриИзменении(Элемент)
	
	ОтветственныйПриИзмененииНаСервере();
	
КонецПроцедуры

&НаСервере
Процедура ОтветственныйПриИзмененииНаСервере()
	
	ОтветственныеЛицаБП.УстановитьОтветственныхЛиц(Объект);
	
КонецПроцедуры

&НаСервере
Процедура ДоговорКонтрагентаПриИзмененииНаСервере()
	
	Если ЗначениеЗаполнено(Объект.ДоговорКонтрагента) тогда
		Объект.Дата = ГосЗакупкиСервер.ТребуемаяДатаСпецификацииДоговора(Объект.ДоговорКонтрагента);
		ДатаПриИзмененииНаСервере();
	КонецЕСли;

	Если ПолучитьФункциональнуюОпцию("ВестиУчетПоДоговорам") Тогда
		Возврат;
	КонецЕсли;
	
	// Если не ведется учет по договорам и заполнен договор, 
	// то по реквизитам этого договора ищем основной договор
	// Если находим, то заменяем выбранный договор на основной. Учет ведется только по основным договорам.
	// В случае если не находим, то ничего не делаем, при записи документа этот договор установится как основной. 
	
	// Проверим является ли выбранный договор основным
	СтруктураРеквизитов = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Объект.ДоговорКонтрагента, "Организация, Владелец, ВидДоговора");
	
	ОсновнойДоговор = Справочники.ДоговорыКонтрагентов.ПустаяСсылка();
	РаботаСДоговорамиКонтрагентовБП.УстановитьДоговорКонтрагента(
		ОсновнойДоговор, 
		СтруктураРеквизитов.Владелец,
		СтруктураРеквизитов.Организация,
		СтруктураРеквизитов.ВидДоговора);
			
	Если ЗначениеЗаполнено(ОсновнойДоговор) И ОсновнойДоговор <> Объект.ДоговорКонтрагента Тогда
		ТекстСообщения = СтрШаблон(НСтр("ru = 'Для расчетов с контрагентом %1 используется %2.'"), СтруктураРеквизитов.Владелец, ОсновнойДоговор);
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения,,, "ДоговорКонтрагента");
		Объект.ДоговорКонтрагента = ПредопределенноеЗначение("Справочник.ДоговорыКонтрагентов.ПустаяСсылка");
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура КомментарийНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	ОбщегоНазначенияКлиент.ПоказатьФормуРедактированияКомментария(Элемент.ТекстРедактирования, ЭтаФорма, "Объект.Комментарий");
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункцииБСП

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
	ПодключаемыеКомандыКлиент.ВыполнитьКоманду(ЭтотОбъект, Команда, Объект);
КонецПроцедуры

&НаСервере
Процедура Подключаемый_ВыполнитьКомандуНаСервере(Контекст, Результат)
	ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, Контекст, Объект, Результат);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура УстановитьСостояниеДокумента()
	
	СостояниеДокумента = ОбщегоНазначенияБП.СостояниеДокумента(Объект);
	
КонецПроцедуры

&НаКлиентеНасервереБезКонтекста
Процедура УправлениеФормой(Форма)
	
	Объект = Форма.Объект;
	Элементы = Форма.Элементы;
	
	Элементы.ДоговорКонтрагента.Доступность = ЗначениеЗаполнено(Объект.Организация) 
											и ЗначениеЗаполнено(Объект.Контрагент);
	Элементы.Организация.ТолькоПросмотр = Форма.ЕстьДвиженияГосЗакупок;
	Элементы.Контрагент.ТолькоПросмотр = Форма.ЕстьДвиженияГосЗакупок;
	Элементы.ДоговорКонтрагента.ТолькоПросмотр = Форма.ЕстьДвиженияГосЗакупок;
											
	Элементы.ТоварыСтавкаНДС.Видимость = Объект.СуммаВключаетНДС;
	Элементы.ТоварыСуммаНДС.Видимость = Объект.СуммаВключаетНДС;
	Элементы.ИтогиВсегоНДС.Видимость = Объект.СуммаВключаетНДС;
											
КонецПроцедуры	

&НаСервереБезКонтекста
Функция ВернутьРеквизитОбъекта(Ссылка, Реквизит)
	
	Возврат Ссылка[Реквизит];
	
КонецФункции

&НаСервереБезКонтекста
Функция СтавкаНДСИзВидаСтавкиНДС(ВидСтавкиНДС, Дата)
	
	Возврат Перечисления.СтавкиНДС.СтавкаНДС(ВидСтавкиНДС, Дата);
	
КонецФункции

&НаКлиенте
Процедура ТоварыНоменклатураГосЗакупокПриИзменении(Элемент)
	
	ТекущаяНоменклатура = Неопределено;
	Элементы.Товары.ТекущиеДанные.Свойство("НоменклатураГосЗакупок", ТекущаяНоменклатура);

	Если ТекущаяНоменклатура = ПредопределенноеЗначение("Справочник.НоменклатураГосЗакупок.ПустаяСсылка") Тогда
		Элементы.Товары.ТекущиеДанные.ЕдиницаИзмеренияГосЗакупок = ПредопределенноеЗначение("Справочник.КлассификаторЕдиницИзмерения.ПустаяСсылка");
	Иначе
		Элементы.Товары.ТекущиеДанные.ЕдиницаИзмеренияГосЗакупок = ВернутьРеквизитОбъекта(ТекущаяНоменклатура, "ЕдиницаИзмеренияГосЗакупок");
		Если Объект.СуммаВключаетНДС тогда
			ВидСтавкиНДС = ВернутьРеквизитОбъекта(ТекущаяНоменклатура, "ВидСтавкиНДС");
		Иначе
			ВидСтавкиНДС = ПредопределенноеЗначение("Перечисление.ВидыСтавокНДС.БезНДС");
		КонецЕсли;
		Элементы.Товары.ТекущиеДанные.СтавкаНДС = СтавкаНДСИзВидаСтавкиНДС(ВидСтавкиНДС, Объект.Дата);
		ОбработкаТабличныхЧастейКлиентСервер.ПриИзмененииСтавкаНДС(ЭтаФорма, "Товары");
	КонецЕсли;
	ОбработкаТабличныхЧастейКлиентСервер.РассчитатьСуммуТабЧастиГосЗакупок(Элементы.Товары.ТекущиеДанные);
	
	Элементы.Товары.ТекущиеДанные.ПечатноеНаименование = ВернутьРеквизитОбъекта(Элементы.Товары.ТекущиеДанные.НоменклатураГосЗакупок, "НаименованиеПолное");
	
КонецПроцедуры

&НаКлиенте
Процедура ТоварыКоличествоПриИзменении(Элемент)
	
	ОбработкаТабличныхЧастейКлиентСервер.ПриИзмененииКоличествоЦенаГосЗакупок(ЭтаФорма, "Товары");
	Объект.СуммаДокумента = Объект.Товары.Итог("Сумма");
	
КонецПроцедуры

&НаКлиенте
Процедура ТоварыЦенаПриИзменении(Элемент)
	
	ОбработкаТабличныхЧастейКлиентСервер.ПриИзмененииКоличествоЦенаГосЗакупок(ЭтаФорма, "Товары");
	Объект.СуммаДокумента = Объект.Товары.Итог("Сумма");
	
КонецПроцедуры

&НаКлиенте
Процедура ТоварыСуммаПриИзменении(Элемент)
	
	ОбработкаТабличныхЧастейКлиентСервер.ПриИзмененииСумма(ЭтаФорма, "Товары");
	Объект.СуммаДокумента = Объект.Товары.Итог("Сумма");
	
КонецПроцедуры

&НаКлиенте
Процедура ТоварыСтавкаНДСПриИзменении(Элемент)
	
	ОбработкаТабличныхЧастейКлиентСервер.ПриИзмененииСтавкаНДС(ЭтаФорма, "Товары");
	Объект.СуммаДокумента = Объект.Товары.Итог("Сумма");
	
КонецПроцедуры

&НаКлиенте
Процедура ТоварыСуммаНДСПриИзменении(Элемент)
	
	ОбработкаТабличныхЧастейКлиентСервер.ПриИзмененииСуммаНДС(ЭтаФорма, "Товары");
	Объект.СуммаДокумента = Объект.Товары.Итог("Сумма");
	
КонецПроцедуры

&НаКлиенте
Процедура ДатаПриИзменении(Элемент)
	
	ДатаПриИзмененииНаСервере();
	УправлениеФормой(ЭтаФорма);
	
КонецПроцедуры

&НаСервере
Процедура ДатаПриИзмененииНаСервере()
	
	Объект.СуммаВключаетНДС = УчетнаяПолитика.ПлательщикНДС(Объект.Организация, Объект.Дата);
	
	Для Каждого Строка из Объект.Товары цикл
		Если Объект.СуммаВключаетНДС тогда
			ВидСтавкиНДС = ВернутьРеквизитОбъекта(Строка.НоменклатураГосЗакупок, "ВидСтавкиНДС");
		Иначе
			ВидСтавкиНДС = ПредопределенноеЗначение("Перечисление.ВидыСтавокНДС.БезНДС");
		КонецЕсли;
		Строка.СтавкаНДС = СтавкаНДСИзВидаСтавкиНДС(ВидСтавкиНДС, Объект.Дата);
		ОбработкаТабличныхЧастейКлиентСервер.РассчитатьСуммуНДСТабЧасти(Строка, Объект.СуммаВключаетНДС);
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Функция ПодготовитьПарметрыПодбора()
	
	ПараметрыПодбора = Новый Структура;
	
	ДатаРасчетов 	 = ?(НачалоДня(Объект.Дата) = НачалоДня(ТекущаяДата()), Неопределено, Объект.Дата);
	ЗаголовокПодбора = НСтр("ru = 'Подбор номенклатуры (гос. закупки) в %1 (%2)'");
	
	ПредставлениеТаблицы = НСтр("ru = 'Товары (гос. закупки)'");
	ПараметрыПодбора.Вставить("ПодборНоменклатуры"   , Ложь);
	ПараметрыПодбора.Вставить("КомандаВыбратьОстаток", Истина);

	ЗаголовокПодбора = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ЗаголовокПодбора, Объект.Ссылка, ПредставлениеТаблицы);
	
	ПараметрыПодбора.Вставить("ДатаРасчетов"          , ДатаРасчетов);
	ПараметрыПодбора.Вставить("ДоговорКонтрагента"    , Объект.ДоговорКонтрагента);
	ПараметрыПодбора.Вставить("Контрагент"            , Объект.Контрагент);
	ПараметрыПодбора.Вставить("Организация"           , Объект.Организация);
	ПараметрыПодбора.Вставить("Заголовок"             , ЗаголовокПодбора);
	
	ДанныеТабличнойЧасти = Новый СписокЗначений;
	Для Каждого СтрокаТовары из Объект.Товары цикл
		СтруктураСтроки = Новый Структура("НоменклатураГосЗакупок, КоличествоГосЗакупок, ЦенаГосЗакупок");
		ЗаполнитьЗначенияСвойств(СтруктураСтроки, СтрокаТовары);
		ДанныеТабличнойЧасти.Добавить(СтруктураСтроки);
	КонецЦикла;
	
	ПараметрыПодбора.Вставить("ДанныеТабличнойЧасти"  , ДанныеТабличнойЧасти);
	
	Возврат ПараметрыПодбора;
	
КонецФункции

&НаКлиенте
Процедура ПодборТовары(Команда)
	
	ОткрытьФорму("Обработка.ПодборНоменклатурыГосЗакупок.Форма.Форма",
	             ПодготовитьПарметрыПодбора(),
	             ЭтаФорма,
				 УникальныйИдентификатор);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаВыбора(ВыбранноеЗначение, ИсточникВыбора)
	
	Если ИсточникВыбора.ИмяФормы = "Обработка.ПодборНоменклатурыГосЗакупок.Форма.Форма" Тогда
		ОбработкаВыбораПодборГосЗакупки(ВыбранноеЗначение);
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ОбработкаВыбораПодборГосЗакупки(ВыбранноеЗначение)

	ТаблицаТоваров = ПолучитьИзВременногоХранилища(ВыбранноеЗначение.АдресПодобраннойНоменклатурыВХранилище);
		
	Если ТаблицаТоваров.Колонки.Найти("СтавкаНДС") = Неопределено Тогда
		ТаблицаТоваров.Колонки.Добавить("СтавкаНДС");
	КонецЕсли;
	
	ДанныеОбъекта = Новый Структура("Организация, Дата, Ссылка, СуммаВключаетНДС, ДоговорКонтрагента");
	ЗаполнитьЗначенияСвойств(ДанныеОбъекта, Объект);
	
	МетаданныеДокумента = ДанныеОбъекта.Ссылка.Метаданные();
	
	КоличествоДобавленныхСтрок = 0;
	Для Каждого СтрокаТовара Из ТаблицаТоваров Цикл
		
		ЦенаГосЗакупок = СтрокаТовара.ЦенаГосЗакупок;
		ОбработкаТабличныхЧастей.ЗаполнитьСтавкуНДСТабЧасти(СтрокаТовара, ДанныеОбъекта, "Товары", МетаданныеДокумента);
			
		СтрокаТабличнойЧасти = Неопределено;
		
		СтруктураОтбора = Новый Структура("НоменклатураГосЗакупок, ЦенаГосЗакупок", СтрокаТовара.НоменклатураГосЗакупок, ЦенаГосЗакупок);
		СтрокаТабличнойЧасти = Неопределено;

		МассивНайденныхСтрок = Объект.Товары.НайтиСтроки(СтруктураОтбора);
		Если МассивНайденныхСтрок.Количество() > 0 Тогда
			СтрокаТабличнойЧасти = МассивНайденныхСтрок[0];
		КонецЕсли;
			
		Если СтрокаТабличнойЧасти <> Неопределено Тогда
			// Нашли - увеличиваем количество.
			СтрокаТабличнойЧасти.КоличествоГосЗакупок = СтрокаТабличнойЧасти.КоличествоГосЗакупок + СтрокаТовара.КоличествоГосЗакупок;
			
			ОбработкаТабличныхЧастейКлиентСервер.РассчитатьСуммуТабЧастиГосЗакупок(СтрокаТабличнойЧасти);
			ОбработкаТабличныхЧастейКлиентСервер.РассчитатьСуммуНДСТабЧасти(СтрокаТабличнойЧасти, Объект.СуммаВключаетНДС);
		Иначе
			
			НоваяСтрока = Объект.Товары.Добавить();
			КоличествоДобавленныхСтрок = КоличествоДобавленныхСтрок + 1;
			ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаТовара);
			НоваяСтрока.ЕдиницаИзмеренияГосЗакупок = СтрокаТовара.ЕдиницаИзмеренияГосЗакупок;
			НоваяСтрока.ПечатноеНаименование = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(СтрокаТовара.НоменклатураГосЗакупок, "НаименованиеПолное");
			
			Если Не ЗначениеЗаполнено(НоваяСтрока.НоменклатураГосЗакупок) Тогда
				Продолжить;
			КонецЕсли;
			
			ОбработкаТабличныхЧастей.ЗаполнитьСтавкуНДСТабЧасти(НоваяСтрока, ДанныеОбъекта, "Товары", МетаданныеДокумента);
			ОбработкаТабличныхЧастейКлиентСервер.РассчитатьСуммуТабЧастиГосЗакупок(НоваяСтрока);
			ОбработкаТабличныхЧастейКлиентСервер.РассчитатьСуммуНДСТабЧасти(НоваяСтрока, Объект.СуммаВключаетНДС);
				
		КонецЕсли;
	КонецЦикла;
	
	Объект.СуммаДокумента = Объект.Товары.Итог("Сумма");
	
КонецПроцедуры

&НаКлиенте
Процедура ДоговорКонтрагентаНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	СписокВыбора = Новый СписокЗначений;
	СписокВыбора.ЗагрузитьЗначения(АктуальныеДоговораКонтрагента(Объект.Контрагент, Объект.Дата));
	
	ДанныеВыбора = СписокВыбора;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция АктуальныеДоговораКонтрагента(Контрагент, Дата)
	
	Возврат Справочники.ДоговорыКонтрагентов.АктуальныеДоговораКонтрагента(Контрагент, Дата);
	
КонецФункции

&НаКлиенте
Процедура ТоварыНоменклатураГосЗакупокОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	Если ТипЗнч(ВыбранноеЗначение) = Тип("Массив") тогда
		СтандартнаяОбработка = Ложь;
		ТоварыНоменклатураГосЗакупокОбработкаВыбораНаСервере(ВыбранноеЗначение);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ТоварыНоменклатураГосЗакупокОбработкаВыбораНаСервере(МассивЗначений)
	
	ЗаполнилиТекущуюСтроку = Ложь;
	ТекущаяСтрока = Объект.Товары.НайтиПоИдентификатору(Элементы.Товары.ТекущаяСтрока);
	
	Счетчик = 0;
	Для Каждого Значение из МассивЗначений цикл
		
		Если Значение = ТекущаяСтрока.НоменклатураГосЗакупок тогда
			МассивЗначений.Удалить(Счетчик);
			ЗаполнилиТекущуюСтроку = Истина;
			Прервать;
		КонецЕсли;
		
		Счетчик = Счетчик + 1;
		
	КонецЦикла;
	
	Для Каждого Значение из МассивЗначений цикл
		
		ДубликатыНоменклатуры = ДубликатыНоменклатуры(Значение);
		
		Если ДубликатыНоменклатуры.Количество() > 0 тогда
			СтрокаДляЗаполнения = ДубликатыНоменклатуры.Получить(0);
		Иначе
			Если НЕ ЗаполнилиТекущуюСтроку тогда
				СтрокаДляЗаполнения = ТекущаяСтрока;
				ЗаполнилиТекущуюСтроку = Истина;
			Иначе
				СтрокаДляЗаполнения = Объект.Товары.Добавить();
			КонецЕсли;
		КонецЕсли;
		
		СтрокаДляЗаполнения.НоменклатураГосЗакупок = Значение;
		СтрокаДляЗаполнения.ЕдиницаИзмеренияГосЗакупок = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Значение, "ЕдиницаИзмеренияГосЗакупок");
		СтрокаДляЗаполнения.ПечатноеНаименование = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Значение, "НаименованиеПолное");
		СтрокаДляЗаполнения.СтавкаНДС = СтавкаНДСИзВидаСтавкиНДС(ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Значение, "ВидСтавкиНДС"), Объект.Дата);
		
		Если СтрокаДляЗаполнения.КоличествоГосЗакупок = 0 тогда
			СтрокаДляЗаполнения.КоличествоГосЗакупок = 1;
		КонецЕсли;
		
		ОбработкаТабличныхЧастейКлиентСервер.РассчитатьСуммуТабЧастиГосЗакупок(СтрокаДляЗаполнения);
		
	КонецЦикла;
	
	Объект.СуммаДокумента = Объект.Товары.Итог("Сумма");
	
КонецПроцедуры

&НаСервере
Функция ДубликатыНоменклатуры(ТекущаяНоменклатура)
	
	ОтборыСтрок = Новый Структура;
	ОтборыСтрок.Вставить("НоменклатураГосЗакупок", ТекущаяНоменклатура);
	НайденыеСтроки = Объект.Товары.НайтиСтроки(ОтборыСтрок);
	
	Возврат НайденыеСтроки;
	
КонецФункции

&НаКлиенте
Процедура ТоварыПриИзменении(Элемент)
	
	ОбработкаТабличныхЧастейКлиентСервер.ПриИзмененииКоличествоЦенаГосЗакупок(ЭтаФорма, "Товары");
	Объект.СуммаДокумента = Объект.Товары.Итог("Сумма");
	
КонецПроцедуры

#КонецОбласти