
Процедура ОбработкаПроведения(Отказ, Режим)
	
	СписокОшибок = Неопределено;
	
	ЭтоГрупповоеПерепроведение = ПроведениеСервер.ГрупповоеПерепроведение(ЭтотОбъект);
	
	Если НЕ ЭтоНовый() И НЕ ЭтоГрупповоеПерепроведение тогда
		КонтрольИзмененийВлияющихНаТовароДвижение(СписокОшибок);
	КонецЕсли;
	
	Если НЕ ЭтоГрупповоеПерепроведение тогда
		ПроверкаУникальностиСпецификации(СписокОшибок);
	КонецЕсли;
	
	ОбщегоНазначенияКлиентСервер.СообщитьОшибкиПользователю(СписокОшибок, Отказ);
	
	Если НЕ Отказ тогда
		Движения.ТоварыГосЗакупок.Записывать = Истина;
		Для Каждого ТекСтрокаТовары Из Товары Цикл
			Движение = Движения.ТоварыГосЗакупок.Добавить();
			Движение.ВидДвижения = ВидДвиженияНакопления.Приход;
			Движение.Период = Дата;
			Движение.Организация = Организация;
			Движение.ДоговорКонтрагента = ДоговорКонтрагента;
			Движение.НоменклатураГосЗакупок = ТекСтрокаТовары.НоменклатураГосЗакупок;
			Движение.ЕдиницаИзмеренияГосЗакупок = ТекСтрокаТовары.ЕдиницаИзмеренияГосЗакупок;
			Движение.Цена = ТекСтрокаТовары.ЦенаГосЗакупок;
			Движение.Количество = ТекСтрокаТовары.КоличествоГосЗакупок;
			Движение.Сумма = ТекСтрокаТовары.Сумма;
		КонецЦикла;
	
		Движения.Базар_ПечатныеНаименованияСпецификаций.Записывать = Истина;
		Движения.Базар_ПечатныеНаименованияСпецификаций.Очистить();
		ТаблицаПечатныхНаименований = Товары.Выгрузить(,"НоменклатураГосЗакупок, ЦенаГосЗакупок, ПечатноеНаименование");
		ТаблицаПечатныхНаименований.Свернуть("НоменклатураГосЗакупок, ЦенаГосЗакупок, ПечатноеНаименование");
		Для Каждого СтрокаТабличнойЧасти Из ТаблицаПечатныхНаименований Цикл
			Движение = Движения.Базар_ПечатныеНаименованияСпецификаций.Добавить();
				
			Движение.Регистратор            = Ссылка;
			Движение.ДоговорКонтрагента     = ДоговорКонтрагента;
			Движение.НоменклатураГосЗакупок = СтрокаТабличнойЧасти.НоменклатураГосЗакупок;
			Движение.ЦенаГосЗакупок         = СтрокаТабличнойЧасти.ЦенаГосЗакупок;
			Движение.ПечатноеНаименование   = СтрокаТабличнойЧасти.ПечатноеНаименование;
		КонецЦикла;
		
		ОбщегоНазначенияБазарСервер.РегистрацияДанныхПервичныхДокументов(ЭтотОбъект, Отказ);
		
	КонецЕсли;
КонецПроцедуры

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	
	ЗаполнениеДокументов.Заполнить(ЭтотОбъект, ДанныеЗаполнения);
	
	СуммаВключаетНДС = УчетнаяПолитика.ПлательщикНДС(Организация, Дата);
	
КонецПроцедуры

Процедура ПроверкаУникальностиСпецификации(СписокОшибок)
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.УстановитьПараметр("ДоговорКонтрагента", ДоговорКонтрагента);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ТоварыГосЗакупокОбороты.Регистратор КАК Регистратор
	|ИЗ
	|	РегистрНакопления.ТоварыГосЗакупок.Обороты(, , Регистратор, ДоговорКонтрагента = &ДоговорКонтрагента) КАК ТоварыГосЗакупокОбороты
	|ГДЕ
	|	ТИПЗНАЧЕНИЯ(ТоварыГосЗакупокОбороты.Регистратор) = ТИП(Документ.СпецификацияДоговора)
	|	И ТоварыГосЗакупокОбороты.Регистратор <> &Ссылка
	|
	|СГРУППИРОВАТЬ ПО
	|	ТоварыГосЗакупокОбороты.Регистратор";
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() цикл
		ТекстСообщения = "Для договора " +
		                 Строка(ДоговорКонтрагента) +
						 " уже существует спецификация " +
						 Строка(Выборка.Регистратор) +
						 ". Вводить вторую запрещено.";
		
		ОбщегоНазначенияКлиентСервер.ДобавитьОшибкуПользователю(СписокОшибок,
		                                                        "Объект.ДоговорКонтрагента",
		                                                        ТекстСообщения);
	КонецЦикла;
	
КонецПроцедуры

Процедура КонтрольИзмененийВлияющихНаТовароДвижение(СписокОшибок)
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("НоваяТаблицаТовары", Товары.Выгрузить());
	Запрос.УстановитьПараметр("СсылкаНаСтарыеДанные", Ссылка);
	Запрос.УстановитьПараметр("ДоговорКонтрагента", ДоговорКонтрагента);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ЕСТЬNULL(ДанныеПервичныхДокументов.Документ, Базар_ДанныеПервичныхДокументов.Документ) КАК Документ,
	|	ЕСТЬNULL(ДанныеПервичныхДокументов.Дата, Базар_ДанныеПервичныхДокументов.Дата) КАК Дата,
	|	ЕСТЬNULL(ДанныеПервичныхДокументов.Номер, Базар_ДанныеПервичныхДокументов.Номер) КАК Номер
	|ПОМЕСТИТЬ ДанныеПервичныхДокументов
	|ИЗ
	|	РегистрСведений.ДанныеПервичныхДокументов КАК ДанныеПервичныхДокументов
	|		ПОЛНОЕ СОЕДИНЕНИЕ РегистрСведений.Базар_ДанныеПервичныхДокументов КАК Базар_ДанныеПервичныхДокументов
	|		ПО ДанныеПервичныхДокументов.Документ = Базар_ДанныеПервичныхДокументов.Документ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТоварыГосЗакупокОбороты.ДоговорКонтрагента КАК Договор,
	|	ТоварыГосЗакупокОбороты.НоменклатураГосЗакупок КАК НоменклатураГосЗакупок,
	|	ТоварыГосЗакупокОбороты.ЕдиницаИзмеренияГосЗакупок КАК ЕдиницаИзмеренияГосЗакупок,
	|	ТоварыГосЗакупокОбороты.Цена КАК ЦенаГосЗакупок,
	|	СУММА(ТоварыГосЗакупокОбороты.КоличествоРасход) КАК КоличествоРасход
	|ИЗ
	|	РегистрНакопления.ТоварыГосЗакупок.Обороты(, , , ДоговорКонтрагента = &ДоговорКонтрагента) КАК ТоварыГосЗакупокОбороты
	|
	|СГРУППИРОВАТЬ ПО
	|	ТоварыГосЗакупокОбороты.ДоговорКонтрагента,
	|	ТоварыГосЗакупокОбороты.НоменклатураГосЗакупок,
	|	ТоварыГосЗакупокОбороты.ЕдиницаИзмеренияГосЗакупок,
	|	ТоварыГосЗакупокОбороты.Цена
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЕСТЬNULL(ТоварыГосЗакупокОбороты.НоменклатураГосЗакупок, ЗНАЧЕНИЕ(Справочник.НоменклатураГосЗакупок.ПустаяСсылка)) КАК НоменклатураГосЗакупок,
	|	ЕСТЬNULL(ТоварыГосЗакупокОбороты.Регистратор, ДанныеПервичныхДокументов.Документ) КАК Документ,
	|	ЕСТЬNULL(ДанныеПервичныхДокументов.Дата, ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)) КАК Дата,
	|	ЕСТЬNULL(ДанныеПервичныхДокументов.Номер, """") КАК Номер
	|ИЗ
	|	РегистрНакопления.ТоварыГосЗакупок.Обороты(, , Регистратор, ДоговорКонтрагента = &ДоговорКонтрагента) КАК ТоварыГосЗакупокОбороты
	|		ЛЕВОЕ СОЕДИНЕНИЕ ДанныеПервичныхДокументов КАК ДанныеПервичныхДокументов
	|		ПО ТоварыГосЗакупокОбороты.Регистратор = ДанныеПервичныхДокументов.Документ
	|
	|СГРУППИРОВАТЬ ПО
	|	ЕСТЬNULL(ТоварыГосЗакупокОбороты.НоменклатураГосЗакупок, ЗНАЧЕНИЕ(Справочник.НоменклатураГосЗакупок.ПустаяСсылка)),
	|	ЕСТЬNULL(ТоварыГосЗакупокОбороты.Регистратор, ДанныеПервичныхДокументов.Документ),
	|	ЕСТЬNULL(ДанныеПервичныхДокументов.Дата, ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)),
	|	ЕСТЬNULL(ДанныеПервичныхДокументов.Номер, """")
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СпецификацияДоговораТовары.НоменклатураГосЗакупок КАК НоменклатураГосЗакупок,
	|	СпецификацияДоговораТовары.ЕдиницаИзмеренияГосЗакупок КАК ЕдиницаИзмеренияГосЗакупок,
	|	СпецификацияДоговораТовары.ЦенаГосЗакупок КАК ЦенаГосЗакупок,
	|	СпецификацияДоговораТовары.КоличествоГосЗакупок КАК КоличествоГосЗакупок
	|ИЗ
	|	Документ.СпецификацияДоговора.Товары КАК СпецификацияДоговораТовары
	|ГДЕ
	|	СпецификацияДоговораТовары.Ссылка = &СсылкаНаСтарыеДанные";
	
	ПакетРезультатов = Запрос.ВыполнитьПакет();
	
	ТаблицаРасхода             = ПакетРезультатов.Получить(1).Выгрузить();
	ТаблицаДокументов          = ПакетРезультатов.Получить(2).Выгрузить();
	ТаблицаТоваровСтарыеДанные = ПакетРезультатов.Получить(3).Выгрузить();
		
	Если ТаблицаРасхода.Количество() = 0 тогда
		Возврат;
	КонецЕсли;
	
	Для Каждого СтрокаРасхода из ТаблицаРасхода цикл
		
		Отборы = Новый Структура("НоменклатураГосЗакупок, ЕдиницаИзмеренияГосЗакупок, ЦенаГосЗакупок",
		                         СтрокаРасхода.НоменклатураГосЗакупок,
				  				 СтрокаРасхода.ЕдиницаИзмеренияГосЗакупок,
				  				 СтрокаРасхода.ЦенаГосЗакупок);
		СтрокиДокумента = Товары.НайтиСтроки(Отборы);
		
		ТекстСообщения = "";
		НомерСтрокиВТовары = 0;
		Если СтрокиДокумента.Количество() = 0 тогда
			ТекстСообщения = "В документе отсутствует товар " +
			                 Строка(СтрокаРасхода.НоменклатураГосЗакупок) +
							 ", с ед. """ + Строка(СтрокаРасхода.ЕдиницаИзмеренияГосЗакупок) + """" +
							 " и ценой " + Формат(СтрокаРасхода.ЦенаГосЗакупок,"ЧЦ=15; ЧДЦ=2; ЧН=") + " руб. " +
							 ", однако по договору """ + Строка(ДоговорКонтрагента) +
			                 """ такой товар уже имеет расход " + 
			                 Формат(СтрокаРасхода.КоличествоРасход,"ЧЦ=15; ЧДЦ=3; ЧН=") + 
							 " " + Строка(СтрокаРасхода.ЕдиницаИзмеренияГосЗакупок);
		Иначе
			ОбщееКоличество = 0;
			Для Каждого СтрокаТовары из СтрокиДокумента цикл
				ОбщееКоличество = ОбщееКоличество + СтрокаТовары.КоличествоГосЗакупок;
				НомерСтрокиВТовары = СтрокаТовары.НомерСтроки;
			КонецЦикла;
			
			НайденыеДанныеСтарые = ТаблицаТоваровСтарыеДанные.НайтиСтроки(Отборы);
			
			Если НайденыеДанныеСтарые.Количество() > 0 тогда
				Если ОбщееКоличество < СтрокаРасхода.КоличествоРасход тогда
					ТекстСообщения = "Количество расхода """ + Строка(СтрокаРасхода.НоменклатураГосЗакупок) +
					                 """ с ед. """ + Строка(СтрокаРасхода.ЕдиницаИзмеренияГосЗакупок) + """" +
					                 " и ценой " + Формат(СтрокаРасхода.ЦенаГосЗакупок,"ЧЦ=15; ЧДЦ=2; ЧН=") + " руб." +
					                 ", больше чем введённое количество по спецификации:" + Символы.ПС + 
					                 "   Количество (в документе): " + Формат(ОбщееКоличество,"ЧЦ=15; ЧДЦ=3; ЧН=") +
								     " " + Строка(СтрокаРасхода.ЕдиницаИзмеренияГосЗакупок) + Символы.ПС + 
					                 "   Расход (уже имеющийся): " + Формат(СтрокаРасхода.КоличествоРасход,"ЧЦ=15; ЧДЦ=3; ЧН=") +
								     " " + Строка(СтрокаРасхода.ЕдиницаИзмеренияГосЗакупок);
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
		
		Если ЗначениеЗаполнено(ТекстСообщения) тогда
			
			Если НомерСтрокиВТовары > 0 тогда
				ОбщегоНазначенияКлиентСервер.ДобавитьОшибкуПользователю(СписокОшибок,
				                                                        "Объект.Товары[%1].КоличествоГосЗакупок",
				                                                        ТекстСообщения,
																		Неопределено,
																		НомерСтрокиВТовары - 1);
			Иначе
				ОбщегоНазначенияКлиентСервер.ДобавитьОшибкуПользователю(СписокОшибок,
				                                                        "Объект.Товары",
				                                                        ТекстСообщения,
																		Неопределено);
			КонецЕсли;
		КонецЕсли;

		
	КонецЦикла;
		
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	ФиксированноеВремяДокументов.УстановитьВремяНовогоДокумента(ЭтотОбъект, Отказ);
	ПрефиксацияОбъектовСобытия.ПроверитьНомерДокументаПоДатеИОрганизации(ЭтотОбъект, Отказ, РежимЗаписи, РежимПроведения);
	
	МассивИсключенныхДокументов = Новый Массив;
	МассивИсключенныхДокументов.Добавить(Ссылка);
	ТаблицаДокументовУчаствующихВДвижениях = ГосЗакупкиСервер.ТаблицаДокументовУчаствующихВДвиженияхГосЗакупокСУсловием("ДоговорКонтрагента",
	                                                                                                                    ДоговорКонтрагента,
	                                                                                                                    МассивИсключенныхДокументов);
	
	Если ТаблицаДокументовУчаствующихВДвижениях.Количество() > 0 И РежимЗаписи = РежимЗаписиДокумента.ОтменаПроведения тогда
		ТекстОшибки = "Нельзя снимать с проведения документ " + Строка(Ссылка) + ", т.к. он участвует в движении товаров гос. закупок:";
		ГосЗакупкиКлиентСервер.СформироватьТекстСообщенияОписывающихДокументы(ТаблицаДокументовУчаствующихВДвижениях, ТекстОшибки);
		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстОшибки,
		                                                  ЭтотОбъект,
		                                                  "Объект.ДоговорКонтрагента");

		Отказ = Истина;
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	МассивНепроверяемыхРеквизитов = Новый Массив;
	
	Если НачалоДня(Дата) <> НачалоДня(ГосЗакупкиСервер.ТребуемаяДатаСпецификацииДоговора(ДоговорКонтрагента)) И
		НЕ ПроведениеСервер.ГрупповоеПерепроведение(ЭтотОбъект) тогда
		Сообщение = Новый СообщениеПользователю();
		Сообщение.Текст = НСтр("ru = 'Дата документа должна быть равна "+Формат(ГосЗакупкиСервер.ТребуемаяДатаСпецификацииДоговора(ДоговорКонтрагента),"ДФ=dd.MM.yyyy")+"!'");
		Сообщение.Поле = "Дата";
		Сообщение.УстановитьДанные(ЭтотОбъект);
		Сообщение.Сообщить();
		
		Отказ = Истина; 
		МассивНепроверяемыхРеквизитов.Добавить("Дата"); 
	КонецЕсли;
	
	// Удаляем из проверяемых реквизитов все, по которым автоматическая проверка не нужна:
	ОбщегоНазначения.УдалитьНепроверяемыеРеквизитыИзМассива(ПроверяемыеРеквизиты, МассивНепроверяемыхРеквизитов);
	
КонецПроцедуры

Процедура ПриКопировании(ОбъектКопирования)
	
	Дата = БухгалтерскийУчетПереопределяемый.ПолучитьЗначениеПоУмолчанию("РабочаяДата");
	
КонецПроцедуры
