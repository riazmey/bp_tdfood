Функция ВремяДокументаПоУмолчанию() Экспорт
	
	Возврат Новый Структура("Часы, Минуты", 11, 0);
	
КонецФункции

Функция ЕстьЗаказыДляТранспортнойЛогистики(Дата) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Дата", Дата);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ТранспортнаяЛогистикаЗаказыОстаткиИОбороты.ДокументДвижения КАК ДокументДвижения
	|ИЗ
	|	РегистрНакопления.ТранспортнаяЛогистикаЗаказы.ОстаткиИОбороты(НАЧАЛОПЕРИОДА(&Дата, ДЕНЬ), КОНЕЦПЕРИОДА(&Дата, ДЕНЬ), День, ДвиженияИГраницыПериода, ) КАК ТранспортнаяЛогистикаЗаказыОстаткиИОбороты
	|ГДЕ
	|	ТранспортнаяЛогистикаЗаказыОстаткиИОбороты.КоличествоКонечныйОстаток - ТранспортнаяЛогистикаЗаказыОстаткиИОбороты.КоличествоНачальныйОстаток > 0";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Возврат НЕ РезультатЗапроса.Пустой();
	
КонецФункции

Процедура ЗаполнитьДокумент(ДокументОбъект) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Граница", Новый Граница(ДокументОбъект.Ссылка, ВидГраницы.Исключая));
	Запрос.УстановитьПараметр("Дата", ДокументОбъект.Дата);
	Запрос.УстановитьПараметр("Ссылка", ДокументОбъект.Ссылка);
	Запрос.УстановитьПараметр("Организация", ДокументОбъект.Организация);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ТранспортнаяЛогистикаДокументы.Ссылка КАК Ссылка,
	|	ТранспортнаяЛогистикаМаршруты.НомерСтроки КАК НомерМаршрута,
	|	ТранспортнаяЛогистикаСоставыРейсов.Маршрут КАК Маршрут,
	|	ТранспортнаяЛогистикаМаршруты.Водитель КАК Водитель,
	|	ТранспортнаяЛогистикаМаршруты.Автомобиль КАК Автомобиль,
	|	ТранспортнаяЛогистикаСоставыРейсов.Рейс КАК Рейс,
	|	ТранспортнаяЛогистикаСоставыРейсов.НомерВРейсе КАК НомерВРейсе,
	|	ТранспортнаяЛогистикаСоставыРейсов.ТочкаМаршрута КАК ТочкаМаршрута,
	|	ТранспортнаяЛогистикаСоставыРейсов.ВремяНачала КАК ВремяНачала,
	|	ТранспортнаяЛогистикаСоставыРейсов.ВремяОкончания КАК ВремяОкончания,
	|	ТранспортнаяЛогистикаДокументы.Документ КАК Документ,
	|	ТранспортнаяЛогистикаСоставыРейсов.АдресПредставление КАК АдресПредставление,
	|	ТранспортнаяЛогистикаМаршруты.Пробег КАК Пробег,
	|	ТранспортнаяЛогистикаРейсы.Пробег КАК ПробегРейс
	|ПОМЕСТИТЬ ВТ_ДанныеСсылки
	|ИЗ
	|	Документ.ТранспортнаяЛогистика.СоставыРейсов КАК ТранспортнаяЛогистикаСоставыРейсов
	|		ПОЛНОЕ СОЕДИНЕНИЕ Документ.ТранспортнаяЛогистика.Маршруты КАК ТранспортнаяЛогистикаМаршруты
	|		ПО ТранспортнаяЛогистикаСоставыРейсов.Ссылка = ТранспортнаяЛогистикаМаршруты.Ссылка
	|			И ТранспортнаяЛогистикаСоставыРейсов.Маршрут = ТранспортнаяЛогистикаМаршруты.Маршрут
	|		ПОЛНОЕ СОЕДИНЕНИЕ Документ.ТранспортнаяЛогистика.Рейсы КАК ТранспортнаяЛогистикаРейсы
	|		ПО ТранспортнаяЛогистикаСоставыРейсов.Ссылка = ТранспортнаяЛогистикаРейсы.Ссылка
	|			И ТранспортнаяЛогистикаСоставыРейсов.Маршрут = ТранспортнаяЛогистикаРейсы.Маршрут
	|			И ТранспортнаяЛогистикаСоставыРейсов.Рейс = ТранспортнаяЛогистикаРейсы.Рейс
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ТранспортнаяЛогистика.ДокументыМаршрута КАК ТранспортнаяЛогистикаДокументы
	|		ПО ТранспортнаяЛогистикаСоставыРейсов.Ссылка = ТранспортнаяЛогистикаДокументы.Ссылка
	|			И ТранспортнаяЛогистикаСоставыРейсов.GUID = ТранспортнаяЛогистикаДокументы.GUID
	|ГДЕ
	|	ТранспортнаяЛогистикаДокументы.Ссылка = &Ссылка
	|	И ТранспортнаяЛогистикаМаршруты.Ссылка = &Ссылка
	|	И ТранспортнаяЛогистикаРейсы.Ссылка = &Ссылка
	|	И ТранспортнаяЛогистикаСоставыРейсов.Ссылка = &Ссылка
	|	И НЕ ТранспортнаяЛогистикаМаршруты.Маршрут = ЗНАЧЕНИЕ(Справочник.Маршруты.ПустаяСсылка)
	|	И НЕ ТранспортнаяЛогистикаРейсы.Маршрут = ЗНАЧЕНИЕ(Справочник.Маршруты.ПустаяСсылка)
	|	И НЕ ТранспортнаяЛогистикаСоставыРейсов.Маршрут = ЗНАЧЕНИЕ(Справочник.Маршруты.ПустаяСсылка)
	|	И НАЧАЛОПЕРИОДА(ТранспортнаяЛогистикаДокументы.Ссылка.Дата, ДЕНЬ) = НАЧАЛОПЕРИОДА(&Дата, ДЕНЬ)
	|	И НАЧАЛОПЕРИОДА(ТранспортнаяЛогистикаМаршруты.Ссылка.Дата, ДЕНЬ) = НАЧАЛОПЕРИОДА(&Дата, ДЕНЬ)
	|	И НАЧАЛОПЕРИОДА(ТранспортнаяЛогистикаРейсы.Ссылка.Дата, ДЕНЬ) = НАЧАЛОПЕРИОДА(&Дата, ДЕНЬ)
	|	И НАЧАЛОПЕРИОДА(ТранспортнаяЛогистикаСоставыРейсов.Ссылка.Дата, ДЕНЬ) = НАЧАЛОПЕРИОДА(&Дата, ДЕНЬ)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МаршрутыПорядокДвижения.Ссылка КАК Маршрут,
	|	МаршрутыПорядокДвижения.Ссылка.Водитель КАК Водитель,
	|	МаршрутыПорядокДвижения.Ссылка.Автомобиль КАК Автомобиль,
	|	МаршрутыПорядокДвижения.Грузополучатель КАК ТочкаМаршрута,
	|	МаршрутыПорядокДвижения.НомерСтроки КАК НомерВРейсе
	|ПОМЕСТИТЬ ВТ_БазоваяЛогистика
	|ИЗ
	|	Справочник.Маршруты.ПорядокДвижения КАК МаршрутыПорядокДвижения
	|ГДЕ
	|	НЕ МаршрутыПорядокДвижения.Грузополучатель В
	|				(ВЫБРАТЬ
	|					ВТ_ДанныеСсылки.ТочкаМаршрута
	|				ИЗ
	|					ВТ_ДанныеСсылки)
	|
	|СГРУППИРОВАТЬ ПО
	|	МаршрутыПорядокДвижения.Ссылка,
	|	МаршрутыПорядокДвижения.Грузополучатель,
	|	МаршрутыПорядокДвижения.Ссылка.Водитель,
	|	МаршрутыПорядокДвижения.Ссылка.Автомобиль,
	|	МаршрутыПорядокДвижения.НомерСтроки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЕСТЬNULL(ВТ_ДанныеСсылки.Маршрут, ЗНАЧЕНИЕ(Справочник.Маршруты.ПустаяСсылка)) КАК Маршрут,
	|	ЕСТЬNULL(ВТ_ДанныеСсылки.Водитель, ЗНАЧЕНИЕ(Справочник.Водители.ПустаяСсылка)) КАК Водитель,
	|	ЕСТЬNULL(ВТ_ДанныеСсылки.Автомобиль, ЗНАЧЕНИЕ(Справочник.Автомобили.ПустаяСсылка)) КАК Автомобиль,
	|	ЕСТЬNULL(ВТ_ДанныеСсылки.НомерМаршрута, 999) КАК НомерМаршрута
	|ПОМЕСТИТЬ ВТ_Маршруты
	|ИЗ
	|	ВТ_ДанныеСсылки КАК ВТ_ДанныеСсылки
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_БазоваяЛогистика КАК ВТ_БазоваяЛогистика
	|		ПО ВТ_ДанныеСсылки.Маршрут = ВТ_БазоваяЛогистика.Маршрут
	|
	|СГРУППИРОВАТЬ ПО
	|	ЕСТЬNULL(ВТ_ДанныеСсылки.Автомобиль, ЗНАЧЕНИЕ(Справочник.Автомобили.ПустаяСсылка)),
	|	ЕСТЬNULL(ВТ_ДанныеСсылки.Водитель, ЗНАЧЕНИЕ(Справочник.Водители.ПустаяСсылка)),
	|	ЕСТЬNULL(ВТ_ДанныеСсылки.Маршрут, ЗНАЧЕНИЕ(Справочник.Маршруты.ПустаяСсылка)),
	|	ЕСТЬNULL(ВТ_ДанныеСсылки.НомерМаршрута, 999)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВЫБОР
	|		КОГДА ТранспортнаяЛогистикаЗаказы.ДокументДвижения ССЫЛКА Документ.Доверенность
	|			ТОГДА ТранспортнаяЛогистикаЗаказы.Грузоотправитель
	|		ИНАЧЕ ТранспортнаяЛогистикаЗаказы.Грузополучатель
	|	КОНЕЦ КАК ТочкаМаршрута,
	|	ТранспортнаяЛогистикаЗаказы.ДокументДвижения КАК Документ,
	|	ТранспортнаяЛогистикаЗаказы.АдресПредставление КАК АдресПредставление,
	|	ТранспортнаяЛогистикаЗаказы.ВремяЛогистикиНачало КАК ВремяНачала,
	|	ТранспортнаяЛогистикаЗаказы.ВремяЛогистикиОкончание КАК ВремяОкончания,
	|	СУММА(ВЫБОР
	|			КОГДА ТранспортнаяЛогистикаЗаказы.Номенклатура ЕСТЬ NULL
	|				ТОГДА 0
	|			ИНАЧЕ ТранспортнаяЛогистикаЗаказы.Тоннаж
	|		КОНЕЦ) КАК Тоннаж,
	|	СУММА(ВЫБОР
	|			КОГДА ТранспортнаяЛогистикаЗаказы.Номенклатура ЕСТЬ NULL
	|				ТОГДА 0
	|			ИНАЧЕ ТранспортнаяЛогистикаЗаказы.Наценка
	|		КОНЕЦ) КАК Наценка
	|ПОМЕСТИТЬ ВТ_Заказы
	|ИЗ
	|	РегистрНакопления.ТранспортнаяЛогистикаЗаказы КАК ТранспортнаяЛогистикаЗаказы
	|ГДЕ
	|	ТранспортнаяЛогистикаЗаказы.Период МЕЖДУ НАЧАЛОПЕРИОДА(&Дата, ДЕНЬ) И КОНЕЦПЕРИОДА(&Дата, ДЕНЬ)
	|	И ТранспортнаяЛогистикаЗаказы.Организация = &Организация
	|	И ТранспортнаяЛогистикаЗаказы.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|
	|СГРУППИРОВАТЬ ПО
	|	ВЫБОР
	|		КОГДА ТранспортнаяЛогистикаЗаказы.ДокументДвижения ССЫЛКА Документ.Доверенность
	|			ТОГДА ТранспортнаяЛогистикаЗаказы.Грузоотправитель
	|		ИНАЧЕ ТранспортнаяЛогистикаЗаказы.Грузополучатель
	|	КОНЕЦ,
	|	ТранспортнаяЛогистикаЗаказы.ДокументДвижения,
	|	ТранспортнаяЛогистикаЗаказы.ВремяЛогистикиНачало,
	|	ТранспортнаяЛогистикаЗаказы.ВремяЛогистикиОкончание,
	|	ТранспортнаяЛогистикаЗаказы.АдресПредставление
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЕСТЬNULL(ВТ_ДанныеСсылки.Маршрут, ЕСТЬNULL(ВТ_БазоваяЛогистика.Маршрут, ЗНАЧЕНИЕ(Справочник.Маршруты.ПустаяСсылка))) КАК Маршрут,
	|	МИНИМУМ(ЕСТЬNULL(ВТ_ДанныеСсылки.НомерМаршрута, 999)) КАК НомерМаршрута,
	|	ВТ_Заказы.ТочкаМаршрута КАК ТочкаМаршрута,
	|	ВТ_Заказы.Документ КАК Документ,
	|	ВТ_Заказы.АдресПредставление КАК АдресПредставление,
	|	ВТ_Заказы.ВремяНачала КАК ВремяНачала,
	|	ВТ_Заказы.ВремяОкончания КАК ВремяОкончания,
	|	МАКСИМУМ(ЕСТЬNULL(ВТ_Заказы.Тоннаж, 0)) КАК Тоннаж,
	|	МАКСИМУМ(ЕСТЬNULL(ВТ_Заказы.Наценка, 0)) КАК Наценка
	|ПОМЕСТИТЬ ВТ_ЗаказыМаршруты
	|ИЗ
	|	ВТ_Заказы КАК ВТ_Заказы
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ДанныеСсылки КАК ВТ_ДанныеСсылки
	|		ПО ВТ_Заказы.Документ = ВТ_ДанныеСсылки.Документ
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_БазоваяЛогистика КАК ВТ_БазоваяЛогистика
	|		ПО ВТ_Заказы.ТочкаМаршрута = ВТ_БазоваяЛогистика.ТочкаМаршрута
	|
	|СГРУППИРОВАТЬ ПО
	|	ЕСТЬNULL(ВТ_ДанныеСсылки.Маршрут, ЕСТЬNULL(ВТ_БазоваяЛогистика.Маршрут, ЗНАЧЕНИЕ(Справочник.Маршруты.ПустаяСсылка))),
	|	ВТ_Заказы.ТочкаМаршрута,
	|	ВТ_Заказы.Документ,
	|	ВТ_Заказы.АдресПредставление,
	|	ВТ_Заказы.ВремяНачала,
	|	ВТ_Заказы.ВремяОкончания
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ЗаказыМаршруты.Маршрут КАК Маршрут,
	|	МАКСИМУМ(ЕСТЬNULL(ВТ_ЗаказыМаршруты.НомерМаршрута, 999)) КАК НомерМаршрута,
	|	ВЫБОР
	|		КОГДА ВТ_Маршруты.Водитель ЕСТЬ NULL
	|				ИЛИ ВТ_Маршруты.Водитель = ЗНАЧЕНИЕ(Справочник.Водители.ПустаяСсылка)
	|			ТОГДА ЕСТЬNULL(ВТ_БазоваяЛогистика.Водитель, ЗНАЧЕНИЕ(Справочник.Водители.ПустаяСсылка))
	|		ИНАЧЕ ВТ_Маршруты.Водитель
	|	КОНЕЦ КАК Водитель,
	|	ВЫБОР
	|		КОГДА ВТ_Маршруты.Автомобиль ЕСТЬ NULL
	|				ИЛИ ВТ_Маршруты.Автомобиль = ЗНАЧЕНИЕ(Справочник.Автомобили.ПустаяСсылка)
	|			ТОГДА ЕСТЬNULL(ВТ_БазоваяЛогистика.Автомобиль, ЗНАЧЕНИЕ(Справочник.Автомобили.ПустаяСсылка))
	|		ИНАЧЕ ВТ_Маршруты.Автомобиль
	|	КОНЕЦ КАК Автомобиль,
	|	МАКСИМУМ(ЕСТЬNULL(ВТ_ДанныеСсылки.Рейс, 1)) КАК Рейс,
	|	ВТ_ЗаказыМаршруты.ТочкаМаршрута КАК ТочкаМаршрута,
	|	МАКСИМУМ(ВЫБОР
	|			КОГДА ВТ_ДанныеСсылки.НомерВРейсе ЕСТЬ NULL
	|					ИЛИ ВТ_ДанныеСсылки.НомерВРейсе = 0
	|				ТОГДА ЕСТЬNULL(ВТ_БазоваяЛогистика.НомерВРейсе, 0)
	|			ИНАЧЕ ВТ_ДанныеСсылки.НомерВРейсе
	|		КОНЕЦ) КАК НомерВРейсе,
	|	ВТ_ЗаказыМаршруты.Документ КАК Документ,
	|	ВТ_ЗаказыМаршруты.АдресПредставление КАК АдресПредставление,
	|	ВТ_ЗаказыМаршруты.ВремяНачала КАК ВремяНачала,
	|	ВТ_ЗаказыМаршруты.ВремяОкончания КАК ВремяОкончания,
	|	МИНИМУМ(ЕСТЬNULL(ВТ_ДанныеСсылки.Пробег, 0)) КАК Пробег,
	|	СУММА(ВТ_ЗаказыМаршруты.Наценка) КАК Наценка,
	|	СУММА(ВТ_ЗаказыМаршруты.Тоннаж) КАК Тоннаж,
	|	МИНИМУМ(ЕСТЬNULL(ВТ_ДанныеСсылки.ПробегРейс, 0)) КАК ПробегРейс
	|ПОМЕСТИТЬ ВТ_Итог
	|ИЗ
	|	ВТ_ЗаказыМаршруты КАК ВТ_ЗаказыМаршруты
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Маршруты КАК ВТ_Маршруты
	|		ПО ВТ_ЗаказыМаршруты.Маршрут = ВТ_Маршруты.Маршрут
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ДанныеСсылки КАК ВТ_ДанныеСсылки
	|		ПО ВТ_ЗаказыМаршруты.Документ = ВТ_ДанныеСсылки.Документ
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_БазоваяЛогистика КАК ВТ_БазоваяЛогистика
	|		ПО ВТ_ЗаказыМаршруты.ТочкаМаршрута = ВТ_БазоваяЛогистика.ТочкаМаршрута
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТ_ЗаказыМаршруты.Маршрут,
	|	ВТ_ЗаказыМаршруты.ТочкаМаршрута,
	|	ВТ_ЗаказыМаршруты.Документ,
	|	ВТ_ЗаказыМаршруты.АдресПредставление,
	|	ВТ_ЗаказыМаршруты.ВремяНачала,
	|	ВТ_ЗаказыМаршруты.ВремяОкончания,
	|	ВЫБОР
	|		КОГДА ВТ_Маршруты.Водитель ЕСТЬ NULL
	|				ИЛИ ВТ_Маршруты.Водитель = ЗНАЧЕНИЕ(Справочник.Водители.ПустаяСсылка)
	|			ТОГДА ЕСТЬNULL(ВТ_БазоваяЛогистика.Водитель, ЗНАЧЕНИЕ(Справочник.Водители.ПустаяСсылка))
	|		ИНАЧЕ ВТ_Маршруты.Водитель
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ВТ_Маршруты.Автомобиль ЕСТЬ NULL
	|				ИЛИ ВТ_Маршруты.Автомобиль = ЗНАЧЕНИЕ(Справочник.Автомобили.ПустаяСсылка)
	|			ТОГДА ЕСТЬNULL(ВТ_БазоваяЛогистика.Автомобиль, ЗНАЧЕНИЕ(Справочник.Автомобили.ПустаяСсылка))
	|		ИНАЧЕ ВТ_Маршруты.Автомобиль
	|	КОНЕЦ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ИСТИНА КАК UpdateWebMapStruct,
	|	СРЕДНЕЕ(ВЫБОР
	|			КОГДА ВТ_Итог.Маршрут = ЗНАЧЕНИЕ(Справочник.Маршруты.ПустаяСсылка)
	|					ИЛИ ВТ_Итог.Маршрут ЕСТЬ NULL
	|					ИЛИ ВТ_Итог.Маршрут.Самовывоз
	|				ТОГДА 999
	|			ИНАЧЕ ВТ_Итог.НомерМаршрута
	|		КОНЕЦ) КАК НомерМаршрута,
	|	ВТ_Итог.Маршрут КАК Маршрут,
	|	ВЫБОР
	|		КОГДА ВТ_Итог.Маршрут = ЗНАЧЕНИЕ(Справочник.Маршруты.ПустаяСсылка)
	|				ИЛИ ВТ_Итог.Маршрут ЕСТЬ NULL
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ВТ_Итог.Маршрут.Самовывоз
	|	КОНЕЦ КАК Самовывоз,
	|	ВЫБОР
	|		КОГДА ВТ_Итог.Маршрут.Самовывоз
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
	|		ИНАЧЕ ВЫБОР
	|				КОГДА ВТ_Итог.Водитель ЕСТЬ NULL
	|						ИЛИ ВТ_Итог.Водитель = ЗНАЧЕНИЕ(Справочник.Водители.ПустаяСсылка)
	|					ТОГДА ВЫБОР
	|							КОГДА ВТ_Итог.Автомобиль ЕСТЬ NULL
	|									ИЛИ ВТ_Итог.Автомобиль = ЗНАЧЕНИЕ(Справочник.Автомобили.ПустаяСсылка)
	|								ТОГДА ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
	|							ИНАЧЕ ВТ_Итог.Автомобиль.Перевозчик
	|						КОНЕЦ
	|				ИНАЧЕ ВТ_Итог.Водитель.Перевозчик
	|			КОНЕЦ
	|	КОНЕЦ КАК Перевозчик,
	|	ВЫБОР
	|		КОГДА ВТ_Итог.Маршрут.Самовывоз
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.Водители.ПустаяСсылка)
	|		ИНАЧЕ ВТ_Итог.Водитель
	|	КОНЕЦ КАК Водитель,
	|	ВЫБОР
	|		КОГДА ВТ_Итог.Маршрут.Самовывоз
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.Автомобили.ПустаяСсылка)
	|		ИНАЧЕ ВТ_Итог.Автомобиль
	|	КОНЕЦ КАК Автомобиль,
	|	МИНИМУМ(ВТ_Итог.Пробег) КАК Пробег,
	|	СУММА(ВТ_Итог.Наценка) КАК Наценка,
	|	СУММА(ВТ_Итог.Тоннаж) КАК Тоннаж
	|ИЗ
	|	ВТ_Итог КАК ВТ_Итог
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТ_Итог.Маршрут,
	|	ВЫБОР
	|		КОГДА ВТ_Итог.Маршрут = ЗНАЧЕНИЕ(Справочник.Маршруты.ПустаяСсылка)
	|				ИЛИ ВТ_Итог.Маршрут ЕСТЬ NULL
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ВТ_Итог.Маршрут.Самовывоз
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ВТ_Итог.Маршрут.Самовывоз
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.Водители.ПустаяСсылка)
	|		ИНАЧЕ ВТ_Итог.Водитель
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ВТ_Итог.Маршрут.Самовывоз
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.Автомобили.ПустаяСсылка)
	|		ИНАЧЕ ВТ_Итог.Автомобиль
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ВТ_Итог.Маршрут.Самовывоз
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
	|		ИНАЧЕ ВЫБОР
	|				КОГДА ВТ_Итог.Водитель ЕСТЬ NULL
	|						ИЛИ ВТ_Итог.Водитель = ЗНАЧЕНИЕ(Справочник.Водители.ПустаяСсылка)
	|					ТОГДА ВЫБОР
	|							КОГДА ВТ_Итог.Автомобиль ЕСТЬ NULL
	|									ИЛИ ВТ_Итог.Автомобиль = ЗНАЧЕНИЕ(Справочник.Автомобили.ПустаяСсылка)
	|								ТОГДА ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
	|							ИНАЧЕ ВТ_Итог.Автомобиль.Перевозчик
	|						КОНЕЦ
	|				ИНАЧЕ ВТ_Итог.Водитель.Перевозчик
	|			КОНЕЦ
	|	КОНЕЦ
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерМаршрута,
	|	Маршрут
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_Итог.Маршрут КАК Маршрут,
	|	ВТ_Итог.Рейс КАК Рейс,
	|	ВЫРАЗИТЬ("""" КАК СТРОКА(20)) КАК РейсПредставление,
	|	СУММА(ВТ_Итог.Тоннаж) КАК Тоннаж,
	|	СУММА(ВТ_Итог.Наценка) КАК Наценка,
	|	МИНИМУМ(ВТ_Итог.ПробегРейс) КАК Пробег
	|ИЗ
	|	ВТ_Итог КАК ВТ_Итог
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТ_Итог.Маршрут,
	|	ВТ_Итог.Рейс
	|
	|УПОРЯДОЧИТЬ ПО
	|	Маршрут,
	|	Рейс,
	|	Тоннаж УБЫВ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_Итог.Маршрут КАК Маршрут,
	|	ВТ_Итог.Рейс КАК Рейс,
	|	МАКСИМУМ(ВТ_Итог.НомерВРейсе) КАК НомерВРейсе,
	|	ВТ_Итог.ТочкаМаршрута КАК ТочкаМаршрута,
	|	ВТ_Итог.АдресПредставление КАК АдресПредставление,
	|	ВТ_Итог.ВремяНачала КАК ВремяНачала,
	|	ВТ_Итог.ВремяОкончания КАК ВремяОкончания,
	|	СУММА(ВТ_Итог.Тоннаж) КАК Тоннаж,
	|	СУММА(ВТ_Итог.Наценка) КАК Наценка
	|ИЗ
	|	ВТ_Итог КАК ВТ_Итог
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТ_Итог.Маршрут,
	|	ВТ_Итог.Рейс,
	|	ВТ_Итог.ТочкаМаршрута,
	|	ВТ_Итог.АдресПредставление,
	|	ВТ_Итог.ВремяНачала,
	|	ВТ_Итог.ВремяОкончания
	|
	|УПОРЯДОЧИТЬ ПО
	|	Маршрут,
	|	Рейс,
	|	НомерВРейсе,
	|	ТочкаМаршрута,
	|	АдресПредставление,
	|	ВремяНачала,
	|	ВремяОкончания
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВЫРАЗИТЬ("""" КАК СТРОКА(50)) КАК GUID,
	|	ВТ_Итог.Маршрут КАК Маршрут,
	|	ВТ_Итог.Рейс КАК Рейс,
	|	ВТ_Итог.ТочкаМаршрута КАК ТочкаМаршрута,
	|	ВТ_Итог.Документ КАК Документ,
	|	ВТ_Итог.АдресПредставление КАК АдресПредставление,
	|	ВТ_Итог.ВремяНачала КАК ВремяНачала,
	|	ВТ_Итог.ВремяОкончания КАК ВремяОкончания,
	|	СУММА(ВТ_Итог.Тоннаж) КАК Тоннаж,
	|	СУММА(ВТ_Итог.Наценка) КАК Наценка
	|ИЗ
	|	ВТ_Итог КАК ВТ_Итог
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТ_Итог.Маршрут,
	|	ВТ_Итог.Рейс,
	|	ВТ_Итог.ТочкаМаршрута,
	|	ВТ_Итог.Документ,
	|	ВТ_Итог.АдресПредставление,
	|	ВТ_Итог.ВремяНачала,
	|	ВТ_Итог.ВремяОкончания
	|
	|УПОРЯДОЧИТЬ ПО
	|	Маршрут,
	|	Рейс,
	|	ТочкаМаршрута,
	|	Документ,
	|	АдресПредставление,
	|	ВремяНачала,
	|	ВремяОкончания";
	
	ПакетРезультатов = Запрос.ВыполнитьПакет();
	
	ДокументОбъект.Маршруты.Загрузить(ПакетРезультатов.Получить(6).Выгрузить());
	ДокументОбъект.Рейсы.Загрузить(ПакетРезультатов.Получить(7).Выгрузить());
	ДокументОбъект.СоставыРейсов.Загрузить(ПакетРезультатов.Получить(8).Выгрузить());
	ТаблицаДокументов = ПакетРезультатов.Получить(9).Выгрузить();
	
	// Дорабатываем то, что нельзя сделать в запросе
	НомерВРейсе = 0;
	ПредыдущийРейс = 0;
	ПредыдущийМаршрут = Справочники.Маршруты.ПустаяСсылка();
	
	Для Каждого СтрокаСоставаРейса из ДокументОбъект.СоставыРейсов цикл
		
		Если СтрокаСоставаРейса.Маршрут <> ПредыдущийМаршрут
			ИЛИ СтрокаСоставаРейса.Рейс <> ПредыдущийРейс тогда
			НомерВРейсе = 0;
		КонецЕсли;
		
		НомерВРейсе = НомерВРейсе + 1;
		СтрокаСоставаРейса.НомерВРейсе = НомерВРейсе;
		СтрокаСоставаРейса.GUID = Новый УникальныйИдентификатор;
		
		СтруктураПоиска = Новый Структура("Маршрут, Рейс, ТочкаМаршрута, АдресПредставление, ВремяНачала, ВремяОкончания",
		                                   СтрокаСоставаРейса.Маршрут,
		                                   СтрокаСоставаРейса.Рейс,
		                                   СтрокаСоставаРейса.ТочкаМаршрута,
		                                   СтрокаСоставаРейса.АдресПредставление,
		                                   СтрокаСоставаРейса.ВремяНачала,
		                                   СтрокаСоставаРейса.ВремяОкончания);
		
		АдресJSON = "";
		НайденыеСтроки = ТаблицаДокументов.НайтиСтроки(СтруктураПоиска);
		Для Каждого СтрокаДокумент из НайденыеСтроки цикл
			
			СтрокаДокумент.GUID = СтрокаСоставаРейса.GUID;
			Если ТипЗнч(СтрокаДокумент.Документ) = Тип("ДокументСсылка.СчетНаОплатуПокупателю") тогда
				АдресJSON = СтрокаДокумент.Документ.АдресДоставкиJSON;
			КонецЕсли;
			
		КонецЦикла;
		
		ДанныеАдреса = УправлениеКонтактнойИнформациейСлужебный.ДанныеАдресаДоставкиJSON(АдресJSON, ДокументОбъект.Дата);
		
		СтрокаСоставаРейса.АдресJSON = АдресJSON;
		
		Если НЕ ДанныеАдреса = Неопределено тогда
			СтрокаСоставаРейса.АдресПредставление = ДанныеАдреса.АдресДоставки;
		КонецЕсли;
		
		ПредыдущийМаршрут = СтрокаСоставаРейса.Маршрут;
		ПредыдущийРейс = СтрокаСоставаРейса.Рейс;
		
	КонецЦикла;
	
	Если ДокументОбъект.Рейсы.НайтиСтроки(Новый Структура("Пробег", 0)).Количество() > 0 тогда
		Для Каждого СтрокаМаршрута из ДокументОбъект.Маршруты цикл
			НайденыеСтроки = ДокументОбъект.Рейсы.НайтиСтроки(Новый Структура("Маршрут", СтрокаМаршрута.Маршрут));
			Если НайденыеСтроки.Количество() = 1 тогда
				НайденыеСтроки.Получить(0).Пробег = СтрокаМаршрута.Пробег;
			КонецЕсли;
		КонецЦикла;
		Модифицированность = Ложь;
	КонецЕсли;
		
	ДокументОбъект.СоставыРейсов.Сортировать("Маршрут, Рейс УБЫВ, ТочкаМаршрута, АдресПредставление, ВремяНачала, ВремяОкончания");
	ДокументОбъект.ДокументыМаршрута.Загрузить(ТаблицаДокументов);
	
КонецПроцедуры

Функция НайтиВТаблицеМаршрутыВодителяИлиАвтомобиль(ДокументОбъект, ИмяРеквизита, Значение, ИсключаемыйИдентификаторСтроки = Неопределено) Экспорт
	
	СтруктураПоиска = Новый Структура(ИмяРеквизита, Значение);
	МассивНайденыхИдентификаторов = Новый Массив;
	
	НайденыеСтроки = ДокументОбъект.Маршруты.НайтиСтроки(СтруктураПоиска);
	
	Если НайденыеСтроки.Количество() > 0 тогда
		
		Для Каждого НайденаяСтрока из НайденыеСтроки цикл
			
			ИдентификаторНайденойСтроки = НайденаяСтрока.ПолучитьИдентификатор();
			Если ИдентификаторНайденойСтроки <> ИсключаемыйИдентификаторСтроки тогда
				МассивНайденыхИдентификаторов.Добавить(ИдентификаторНайденойСтроки);
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЕсли;
	
	Возврат МассивНайденыхИдентификаторов;
	
КонецФункции

Процедура СоздатьОбновитьДокументыНаОгтрузку(ЗаполняемыйОбъект) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Ссылка",ЗаполняемыйОбъект.Ссылка);
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	МаршрутныйЛист.Ссылка КАК Ссылка,
	|	МаршрутныйЛист.Маршрут КАК Маршрут
	|ИЗ
	|	Документ.МаршрутныйЛист КАК МаршрутныйЛист
	|ГДЕ
	|	МаршрутныйЛист.ДокументЛогистики = &Ссылка";
	
	СуществующиеМаршрутныеЛисты = Запрос.Выполнить().Выгрузить();
	
	Для Каждого СтрокаМаршрут из ЗаполняемыйОбъект.Маршруты Цикл
		
		СтрокаМаршрутныйЛист = СуществующиеМаршрутныеЛисты.Найти(СтрокаМаршрут.Маршрут, "Маршрут");
		
		Если СтрокаМаршрутныйЛист = Неопределено тогда
			ДокументМаршрутныйЛист = Документы.МаршрутныйЛист.СоздатьДокумент();
			ДокументМаршрутныйЛист.ДокументЛогистики = ЗаполняемыйОбъект.Ссылка;
			ДокументМаршрутныйЛист.Маршрут = СтрокаМаршрут.Маршрут;
		Иначе
			ДокументМаршрутныйЛист = СтрокаМаршрутныйЛист.Ссылка.ПолучитьОбъект();
			СуществующиеМаршрутныеЛисты.Удалить(СтрокаМаршрутныйЛист);
		КонецЕсли;
		
		ДокументМаршрутныйЛист.Организация = ЗаполняемыйОбъект.Организация;
		
		РезультатыОбработки = Документы.МаршрутныйЛист.ЗаполнитьДокументИСформироватьДокументыОтгрузки(ДокументМаршрутныйЛист, Истина);
		
		Если РезультатыОбработки = Неопределено тогда
			Продолжить;
		КонецЕсли;
		
		Если РезультатыОбработки.ПопытокСоздатьДокументов = 0 И
			РезультатыОбработки.ПопытокПровестиДокументов = 0 И 
			РезультатыОбработки.ВМаршрутномЛистеЕстьРеализации тогда
			Сообщить("На маршруте """+ ДокументМаршрутныйЛист.Маршрут +""" изменений нет, т.к. все документы отгрузки сформированы корректно.");
		Иначе
			Если ДокументМаршрутныйЛист.Проведен тогда
				Сообщить("Все документы маршрута """ + ДокументМаршрутныйЛист.Маршрут + """ успешно сформированы, и сам документ проведен.");
			Иначе
				Если РезультатыОбработки.ВМаршрутномЛистеЕстьРеализации тогда
					Если ДокументМаршрутныйЛист.ЭтоНовый() тогда
						Сообщить("Маршрутный лист, на маршрут " + ДокументМаршрутныйЛист.Маршрут + ", не был сформирован (создан)! При этом на этот маршрут имеются документы на отгрузку!");
					Иначе
						Сообщить("При формировании документов на отгрузку, на маршрут """+ДокументМаршрутныйЛист.Маршрут+""" возникли ошибки, и не все документы сформированы/проведены. Документ не проведен.");
					КонецЕсли;
				КонецЕсли;
				
			КонецЕсли;
		КонецЕсли;
		
	КонецЦикла;
	
	Для Каждого СтрокаМаршрутныйЛист из СуществующиеМаршрутныеЛисты Цикл
		
		ДокументМаршрутныйЛист = СтрокаМаршрутныйЛист.Ссылка.ПолучитьОбъект();
		ДокументМаршрутныйЛист.Рейсы.Очистить();
		ДокументМаршрутныйЛист.СоставыРейсовМаршрута.Очистить();
		ДокументМаршрутныйЛист.ДокументыМаршрутов.Очистить();
		ДокументМаршрутныйЛист.ПометкаУдаления = Истина;
		ДокументМаршрутныйЛист.Записать(РежимЗаписиДокумента.ОтменаПроведения);
		
	КонецЦикла;
	
КонецПроцедуры

// Заполняет список команд печати.
// 
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	
КонецПроцедуры

Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	//Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ЗаказЗаданиеДиспетчераСокращенное") Тогда
	//	УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "ЗаказЗаданиеДиспетчераСокращенное", "Заказ-задание диспетчера (сокращенное)", 
	//		ПечатьЗаказЗаданиеДиспетчераСокращенное(МассивОбъектов, ОбъектыПечати, ПараметрыПечати),,"Документ.ТранспортнаяЛогистика.ЗаказЗаданиеДиспетчераСокращенное");
	//КонецЕсли;
	
	ОбщегоНазначенияБП.ЗаполнитьДополнительныеПараметрыПечати(МассивОбъектов,
		КоллекцияПечатныхФорм,
		ОбъектыПечати,
		ПараметрыВывода);
	
КонецПроцедуры
