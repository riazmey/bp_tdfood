//\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\+ОБЛАСТЬ+\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	МногооборотнаяТараФормы.ПриСозданииНаСервере(ЭтаФорма, Отказ, СтандартнаяОбработка);
	
	УправлениеФормой(ЭтаФорма);
	
	ОбновитьНадписиНаФормеНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	ПриОткрытииНаСервере(Отказ);
	
КонецПроцедуры

&НаСервере
Процедура ПриОткрытииНаСервере(Отказ)
	
	МногооборотнаяТараФормы.ПриОткрытииНаСервере(ЭтаФорма, Отказ);
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	
	ПередЗаписьюНаСервере();
	
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере()
	
	Если НЕ ИспользуетсяНесколькоОрганизаций тогда
		Для Каждого Строка из Объект.НаВодителя цикл 
			Если Не ЗначениеЗаполнено(Строка.Организация) тогда
				Строка.Организация = Организация;
			КонецЕсли;
		КонецЦикла;
		Для Каждого Строка из Объект.Грузополучатели цикл 
			Если Не ЗначениеЗаполнено(Строка.Организация) тогда
				Строка.Организация = Организация;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПриЗаписиНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	МногооборотнаяТараФормы.ПриЗаписиНаСервере(ЭтаФорма, Отказ, ТекущийОбъект, ПараметрыЗаписи);
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)

	МногооборотнаяТараФормы.ПриЧтенииНаСервере(ЭтаФорма, ТекущийОбъект);
	
КонецПроцедуры

#КонецОбласти
//----------------------------------область-------------------------------------


//\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\+ОБЛАСТЬ+\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/
#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ДокументОснованиеОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Если ЗначениеЗаполнено(ВыбранноеЗначение) тогда
		
		Оповещение = Новый ОписаниеОповещения(
			"ОбработкаОповещенияВопросПередЗаполнениемПоОснованию",
			ЭтотОбъект,
			Новый Структура("ДокументОснование", ВыбранноеЗначение)
		);
		
		ТекстВопроса = НСтр(
			"ru = 'Вы действительно хотите заполнить документ на основании " +
			ВыбранноеЗначение +
			"? Все данные текущего документа будут удалены, и заполнены на " + 
			"основании указанного Вами документа.'"
		);
		
		ЗаголовокДиалогаВопроса = "Заполнить документ на основании "+ВыбранноеЗначение+"?";
		
		ПоказатьВопрос(
			Оповещение,
			ТекстВопроса,
			РежимДиалогаВопрос.ДаНет,
			30,
			КодВозвратаДиалога.Да,
			ЗаголовокДиалогаВопроса,
			КодВозвратаДиалога.Нет
		);
		
	Иначе
		
		ОчиститьДокументОснование();
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ДокументОснованиеОчистка(Элемент, СтандартнаяОбработка)
	
	ДокументОснованиеОбработкаВыбора(Элемент, Неопределено, СтандартнаяОбработка);
	
КонецПроцедуры

&НаКлиенте
Процедура ВодительНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	УстановитьПараметрыВыбораВодитель();
	
КонецПроцедуры

&НаКлиенте
Процедура АвтомобильНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	УстановитьПараметрыВыбораАвтомобиль();
	
КонецПроцедуры

#КонецОбласти
//----------------------------------область-------------------------------------


//\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\+ОБЛАСТЬ+\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/
#Область ОбработчикиСобытийЭлементовТабличныхЧастейФормы

&НаКлиенте
Процедура ТабличнаяЧастьПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	
	Если НоваяСтрока тогда
		Если НЕ ИспользуетсяНесколькоОрганизаций тогда
			Если ТипЗнч(Организация) = Тип("СправочникСсылка.Организации") тогда
				Элемент.ТекущиеДанные.Организация = Организация;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ТабличнаяЧастьПриИзменении(Элемент)
	
	ОбновитьНадписиНаФормеНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура ГрузополучателиДокументПриИзменении(Элемент)
	
	Элементы.Грузополучатели.ТекущиеДанные.Организация         = Элементы.Грузополучатели.ТекущиеДанные.Документ.Организация;
	Если ЗначениеЗаполнено(Элементы.Грузополучатели.ТекущиеДанные.Документ.Грузополучатель) тогда
		Элементы.Грузополучатели.ТекущиеДанные.Грузополучатель = Элементы.Грузополучатели.ТекущиеДанные.Документ.Грузополучатель;
	Иначе
		Элементы.Грузополучатели.ТекущиеДанные.Грузополучатель = Элементы.Грузополучатели.ТекущиеДанные.Документ.Контрагент;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти
//----------------------------------область-------------------------------------


//\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\+ОБЛАСТЬ+\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/
#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура КомандаЗаполнить(Команда)
	
	Если НЕ ЗначениеЗаполнено(Объект.ДокументОснование) Тогда
		ИмяПоля = НСтр("ru = 'Документ-основание'");
		ТекстСообщения = ОбщегоНазначенияКлиентСервер.ТекстОшибкиЗаполнения(,, ИмяПоля);
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения,, "Объект.ДокументОснование");
		Возврат;
	КонецЕсли;
	
	ЗаполнитьТаблицуНаСервере(Команда.Имя);
	
	ОбновитьНадписиНаФормеНаСервере();
	
КонецПроцедуры

#КонецОбласти
//----------------------------------область-------------------------------------


//\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\+ОБЛАСТЬ+\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/
#Область ПроцедурыИФункцииУправленияФормой

&НаКлиентеНаСервереБезКонтекста
Процедура УправлениеФормой(Форма)
	
	Элементы = Форма.Элементы;
	Объект   = Форма.Объект;
	
	ВидимостьДокументОснование         = Истина;
	ВидимостьПоставщик                 = Истина;
	ВидимостьМаршрут                   = Истина;
	ВидимостьВодитель                  = Истина;
	ВидимостьАвтомобиль                = Истина;
	ВидимостьВодительПолучатель        = Истина;
	ВидимостьЗаполнитьТЧ               = Истина;
	ВидимостьТЧНаВодителя              = Истина;
	ВидимостьТЧГрузополучатели         = Истина;
	ВидимостьТЧГрузополучателиДокумент = Истина;
	
	ТолькоПросмотрМаршрут              = Ложь;
	ТолькоПросмотрВодитель             = Ложь;
	ТолькоПросмотрАвтомобиль           = Ложь;
	
	Если Объект.ВидОперации = ПредопределенноеЗначение("Перечисление.Базар_ВидыДвиженийМногооборотнойТары.Передача") ИЛИ
		 Объект.ВидОперации = ПредопределенноеЗначение("Перечисление.Базар_ВидыДвиженийМногооборотнойТары.Прием") Тогда
		
		ВидимостьПоставщик = Ложь;
		
		Если ЗначениеЗаполнено(Объект.ДокументОснование) тогда
			ВидимостьВодительПолучатель = Ложь;
			ТолькоПросмотрМаршрут       = Истина;
			ТолькоПросмотрВодитель      = Истина;
			ТолькоПросмотрАвтомобиль    = Истина;
		Иначе
			ВидимостьЗаполнитьТЧ        = Ложь;
			ВидимостьМаршрут            = Ложь;
			ВидимостьВодительПолучатель = Ложь;
		КонецЕсли;
		
		Если Объект.ВидОперации = ПредопределенноеЗначение("Перечисление.Базар_ВидыДвиженийМногооборотнойТары.Прием") тогда
			ВидимостьТЧГрузополучателиДокумент = Ложь;
		КонецЕсли;
		
	ИначеЕсли Объект.ВидОперации = ПредопределенноеЗначение("Перечисление.Базар_ВидыДвиженийМногооборотнойТары.Перемещение") тогда
		
		ВидимостьЗаполнитьТЧ        = Ложь;
		ВидимостьПоставщик          = Ложь;
		ВидимостьМаршрут            = Ложь;
		ВидимостьАвтомобиль         = Ложь;
		ВидимостьТЧГрузополучатели  = Ложь;
		ВидимостьДокументОснование  = Ложь;
		
	ИначеЕсли Объект.ВидОперации = ПредопределенноеЗначение("Перечисление.Базар_ВидыДвиженийМногооборотнойТары.ВозвратПоставщику") тогда
		
		Если НЕ ЗначениеЗаполнено(Объект.ДокументОснование) тогда
			ВидимостьЗаполнитьТЧ    = Ложь;
		КонецЕсли;
		
		ВидимостьТЧГрузополучатели  = Ложь;
		ВидимостьМаршрут            = Ложь;
		ВидимостьАвтомобиль         = Ложь;
		ВидимостьВодитель           = Ложь;
		ВидимостьВодительПолучатель = Ложь;
		
	КонецЕсли;
	
	Элементы.ДокументОснование.Видимость        = ВидимостьДокументОснование;
	Элементы.Поставщик.Видимость                = ВидимостьПоставщик;
	Элементы.Маршрут.Видимость                  = ВидимостьМаршрут;
	Элементы.Водитель.Видимость                 = ВидимостьВодитель;
	Элементы.Автомобиль.Видимость               = ВидимостьАвтомобиль;
	Элементы.ВодительПолучатель.Видимость       = ВидимостьВодительПолучатель;
	Элементы.ГруппаНаВодителя.Видимость         = ВидимостьТЧНаВодителя;
	Элементы.ГруппаГрузополучатели.Видимость    = ВидимостьТЧГрузополучатели;
	Элементы.НаВодителяЗаполнить.Видимость      = ВидимостьЗаполнитьТЧ;
	Элементы.ГрузополучателиЗаполнить.Видимость = ВидимостьЗаполнитьТЧ;
	Элементы.ГрузополучателиДокумент.Видимость  = ВидимостьТЧГрузополучателиДокумент;
	
	Элементы.Маршрут.ТолькоПросмотр             = ТолькоПросмотрМаршрут;
	Элементы.Водитель.ТолькоПросмотр            = ТолькоПросмотрВодитель;
	Элементы.Автомобиль.ТолькоПросмотр          = ТолькоПросмотрАвтомобиль;
	
	Элементы.Страницы.ОтображениеСтраниц        = ?(ВидимостьТЧГрузополучатели, ОтображениеСтраницФормы.ЗакладкиСверху, ОтображениеСтраницФормы.Нет);
	
	Элементы.НаВодителя.АвтоОтметкаНезаполненного      = Ложь;
	Элементы.Грузополучатели.АвтоОтметкаНезаполненного = Ложь;
	Если ВидимостьТЧГрузополучатели тогда
		Если Объект.НаВодителя.Количество() = 0 И Объект.Грузополучатели.Количество() = 0 тогда
			Элементы.НаВодителя.АвтоОтметкаНезаполненного      = Истина;
			Элементы.Грузополучатели.АвтоОтметкаНезаполненного = Истина;
		КонецЕсли;
	Иначе
		Элементы.НаВодителя.АвтоОтметкаНезаполненного = Истина;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьНадписиНаФормеНаСервере() Экспорт
	
	Если Объект.ВидОперации = ПредопределенноеЗначение("Перечисление.Базар_ВидыДвиженийМногооборотнойТары.Передача") Тогда
		Элементы.Водитель.Заголовок = "Водитель";
		Элементы.ГруппаНаВодителя.Заголовок = "Передача водителю";
		Элементы.ГруппаГрузополучатели.Заголовок = "Передача грузополучателю";
	ИначеЕсли Объект.ВидОперации = ПредопределенноеЗначение("Перечисление.Базар_ВидыДвиженийМногооборотнойТары.Прием") Тогда
		Элементы.Водитель.Заголовок = "Водитель";
		Элементы.ГруппаНаВодителя.Заголовок = "Прием от водителя";
		Элементы.ГруппаГрузополучатели.Заголовок = "Прием от грузополучателя";
	ИначеЕсли Объект.ВидОперации = ПредопределенноеЗначение("Перечисление.Базар_ВидыДвиженийМногооборотнойТары.Перемещение") Тогда
		Элементы.Водитель.Заголовок = "Водитель-отправитель";
		Элементы.ГруппаНаВодителя.Заголовок = "Перемещение тары";
	ИначеЕсли Объект.ВидОперации = ПредопределенноеЗначение("Перечисление.Базар_ВидыДвиженийМногооборотнойТары.ВозвратПоставщику") Тогда
		Элементы.ГруппаНаВодителя.Заголовок = "Возврат тары";
	КонецЕсли;
	
	Если Объект.Грузополучатели.Количество() > 0 тогда
		Элементы.ГруппаГрузополучатели.Заголовок = Элементы.ГруппаГрузополучатели.Заголовок + " ("+Объект.Грузополучатели.Количество()+")";
	КонецЕсли;
	
	Если Объект.НаВодителя.Количество() > 0 тогда
		Элементы.ГруппаНаВодителя.Заголовок = Элементы.ГруппаНаВодителя.Заголовок + " ("+Объект.НаВодителя.Количество()+")";
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти
//----------------------------------область-------------------------------------


//\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\+ОБЛАСТЬ+\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/
#Область ПроцедурыИФункцииСлужебные
// Процедуры и функции которые используют другие области и общие модули.

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ БСП

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
	ПодключаемыеКомандыКлиент.ВыполнитьКоманду(ЭтотОбъект, Команда, Объект);
КонецПроцедуры

&НаСервере
Процедура Подключаемый_ВыполнитьКомандуНаСервере(Контекст, Результат) Экспорт
	ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, Контекст, Объект, Результат);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

&НаСервере
Процедура УстановитьПараметрыВыбораВодитель()
	
	Элементы.Водитель.ПараметрыВыбора = Новый ФиксированныйМассив(Новый Массив());
	
	Если ЗначениеЗаполнено(Объект.Автомобиль) тогда
		ПараметрыВыбораВодитель = Новый Массив();
		ПараметрыВыбораВодитель.Добавить(Новый ПараметрВыбора("Отбор.Перевозчик", Объект.Автомобиль.Перевозчик));
		
		НовыеПараметрыВыбораВодитель = Новый ФиксированныйМассив(ПараметрыВыбораВодитель);
		
		Элементы.Водитель.ПараметрыВыбора = НовыеПараметрыВыбораВодитель;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура УстановитьПараметрыВыбораАвтомобиль()
	
	Элементы.Автомобиль.ПараметрыВыбора = Новый ФиксированныйМассив(Новый Массив());
	
	Если ЗначениеЗаполнено(Объект.Водитель) тогда
		ПараметрыВыбораАвтомобиль = Новый Массив();
		ПараметрыВыбораАвтомобиль.Добавить(Новый ПараметрВыбора("Отбор.Перевозчик", Объект.Водитель.Перевозчик));
		
		НовыеПараметрыВыбораАвтомобиль = Новый ФиксированныйМассив(ПараметрыВыбораАвтомобиль);
		
		Элементы.Автомобиль.ПараметрыВыбора  = НовыеПараметрыВыбораАвтомобиль;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьТаблицуНаСервере(ИмяКоманды)
	
	ДокументОбъект = РеквизитФормыВЗначение("Объект");
	
	Если ИмяКоманды = "ЗаполнитьТаблицуНаВодителя" тогда
		ДокументОбъект.ЗаполнитьТабличныеЧасти(Истина, Ложь);
	ИначеЕсли ИмяКоманды = "ЗаполнитьТаблицуГрузополучатели" тогда
		ДокументОбъект.ЗаполнитьТабличныеЧасти(Ложь, Истина);
	КонецЕсли;
	
	ЗначениеВРеквизитФормы(ДокументОбъект, "Объект");
	
	Модифицированность = Истина;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьДокументНаОсновании()
	
	ДокументОбъект = РеквизитФормыВЗначение("Объект");
	
	ЗаполнениеДокументов.Заполнить(ДокументОбъект, Объект.ДокументОснование);
	
	Если ТипЗнч(Объект.ДокументОснование) = Тип("ДокументСсылка.МаршрутныйЛист") тогда
		ЗаполнитьЗначенияСвойств(ДокументОбъект, Объект.ДокументОснование, "Дата, Маршрут, Автомобиль, Водитель");
	ИначеЕсли ТипЗнч(Объект.ДокументОснование) = Тип("ДокументСсылка.ПоступлениеТоваровУслуг") тогда
		ДокументОбъект.Поставщик = Объект.ДокументОснование.Контрагент;
	КонецЕсли;
	
	ФиксированноеВремяДокументов.УстановитьВремяНовогоДокумента(ДокументОбъект, Ложь);
	ДокументОбъект.ЗаполнитьТабличныеЧасти();
	
	ЗначениеВРеквизитФормы(ДокументОбъект, "Объект");
	
	Модифицированность = Истина;
	
	ОбновитьНадписиНаФормеНаСервере();
	
КонецПроцедуры

&НаСервере
Процедура ОчиститьДокументОснование()
	
	Если Объект.ВидОперации = ПредопределенноеЗначение("Перечисление.Базар_ВидыДвиженийМногооборотнойТары.Передача")
	 ИЛИ Объект.ВидОперации = ПредопределенноеЗначение("Перечисление.Базар_ВидыДвиженийМногооборотнойТары.Прием") Тогда
		Объект.Поставщик          = ПредопределенноеЗначение("Справочник.Контрагенты.ПустаяСсылка");
		Объект.ВодительПолучатель = ПредопределенноеЗначение("Справочник.Водители.ПустаяСсылка");
		Объект.ДокументОснование  = ПредопределенноеЗначение("Документ.МаршрутныйЛист.ПустаяСсылка");
		
	ИначеЕсли Объект.ВидОперации = ПредопределенноеЗначение("Перечисление.Базар_ВидыДвиженийМногооборотнойТары.Перемещение") Тогда
		Объект.Поставщик          = ПредопределенноеЗначение("Справочник.Контрагенты.ПустаяСсылка");
		Объект.ДокументОснование  = ПредопределенноеЗначение("Документ.МаршрутныйЛист.ПустаяСсылка");
		Объект.Грузополучатели.Очистить();
		
	ИначеЕсли Объект.ВидОперации = ПредопределенноеЗначение("Перечисление.Базар_ВидыДвиженийМногооборотнойТары.ВозвратПоставщику") Тогда
		Объект.Маршрут            = ПредопределенноеЗначение("Справочник.Маршруты.ПустаяСсылка");
		Объект.Автомобиль         = ПредопределенноеЗначение("Справочник.Автомобили.ПустаяСсылка");
		Объект.Водитель           = ПредопределенноеЗначение("Справочник.Водители.ПустаяСсылка");
		Объект.ВодительПолучатель = ПредопределенноеЗначение("Справочник.Водители.ПустаяСсылка");
		Объект.ДокументОснование  = ПредопределенноеЗначение("Документ.ПоступлениеТоваровУслуг.ПустаяСсылка");
		Объект.Грузополучатели.Очистить();
		
	КонецЕсли;
	
	Модифицированность = Истина;
	
	УправлениеФормой(ЭтаФорма);
	ОбновитьНадписиНаФормеНаСервере();
	
КонецПроцедуры

#КонецОбласти
//----------------------------------область-------------------------------------


//\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\+ОБЛАСТЬ+\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/
#Область ОбработчикиОповещений

&НаКлиенте
Процедура ОбработкаОповещенияВопросПередЗаполнениемПоОснованию(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат <> КодВозвратаДиалога.Да тогда
		Возврат;
	КонецЕсли;
	
	Объект.ДокументОснование = ДополнительныеПараметры.ДокументОснование;
	
	ЗаполнитьДокументНаОсновании();
	УправлениеФормой(ЭтаФорма);
	
КонецПроцедуры

#КонецОбласти
//----------------------------------область-------------------------------------

