////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ

Функция ВремяДокументаПоУмолчанию() Экспорт
	
	Возврат Новый Структура("Часы, Минуты", 15, 00);
	
КонецФункции

Процедура ОбработкаПолученияФормы(ВидФормы, Параметры, ВыбраннаяФорма, ДополнительнаяИнформация, СтандартнаяОбработка)
	
	Если ВидФормы <> "ФормаДокумента"
		И ВидФормы <> "ФормаОбъекта" Тогда
		Возврат;
	КонецЕсли;

	ВидОперации = Неопределено; 

	Если Параметры.Свойство("Ключ") И ЗначениеЗаполнено(Параметры.Ключ) Тогда
		ВидОперации = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Параметры.Ключ, "ВидОперации");
	КонецЕсли;

	// Если документ копируется, то вид операции получаем из копируемого документа.
	Если НЕ ЗначениеЗаполнено(ВидОперации) Тогда
		Если Параметры.Свойство("ЗначениеКопирования")
			И ЗначениеЗаполнено(Параметры.ЗначениеКопирования) Тогда
			ВидОперации = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(
				Параметры.ЗначениеКопирования, "ВидОперации");
		КонецЕсли;
	КонецЕсли;

	Если НЕ ЗначениеЗаполнено(ВидОперации) Тогда
		Если Параметры.Свойство("ЗначенияЗаполнения") 
			И ТипЗнч(Параметры.ЗначенияЗаполнения) = Тип("Структура") Тогда
			Если Параметры.ЗначенияЗаполнения.Свойство("ВидОперации") Тогда
				ВидОперации	= Параметры.ЗначенияЗаполнения.ВидОперации;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
	СтандартнаяОбработка = Ложь;
	Если НЕ ЗначениеЗаполнено(ВидОперации) Тогда
		ВыбраннаяФорма = "ФормаДокумента";
	Иначе
		ВыбраннаяФорма = "ФормаДокументаОбщая";
	КонецЕсли;

КонецПроцедуры

Процедура ЗаполнитьПроводкуЗначениямиСубконто(СчетУчета, Субконто, ЗначенияСубконто) Экспорт
	
	НомерСубконто = 0;
	СвойстваСчетаУчета = БухгалтерскийУчетВызовСервераПовтИсп.ПолучитьСвойстваСчета(СчетУчета);
	Для НомерСубконто = 1 По СвойстваСчетаУчета.КоличествоСубконто Цикл
		
		// Сопоставим по типам значений Субконто и Данные, т.е. найдем значение субконто
		ЗначениеСубконто = Неопределено;
		ВидСубконто = СвойстваСчетаУчета["ВидСубконто" + НомерСубконто];
		ТипЗначения = СвойстваСчетаУчета["ВидСубконто" + НомерСубконто + "ТипЗначения"];
		Для Каждого Данные из ЗначенияСубконто цикл
			Если ТипЗначения.СодержитТип(ТипЗнч(Данные)) тогда
				ЗначениеСубконто = Данные;
				Прервать;
			КонецЕсли;
		КонецЦикла;
		
		Если ЗначениеЗаполнено(ЗначениеСубконто) Тогда
			
			БухгалтерскийУчет.УстановитьСубконто(
				СчетУчета,
				Субконто,
				ВидСубконто,
				ЗначениеСубконто
			);
			
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

// Заполняет список команд печати.
// 
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	
	
	
КонецПроцедуры

Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	ОбщегоНазначенияБП.ЗаполнитьДополнительныеПараметрыПечати(
		МассивОбъектов,
		КоллекцияПечатныхФорм,
		ОбъектыПечати,
		ПараметрыВывода
	);
	
КонецПроцедуры
