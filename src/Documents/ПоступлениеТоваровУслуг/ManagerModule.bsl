&Вместо("ВремяДокументаПоУмолчанию")
Функция Базар_ВремяДокументаПоУмолчанию() Экспорт
	
	Возврат Новый Структура("Часы, Минуты", 5, 30);
	
КонецФункции

&ИзменениеИКонтроль("ПолучитьТаблицуСведенийТОРГ12Покупатель")
Функция Базар_ПолучитьТаблицуСведенийТОРГ12Покупатель(Знач МассивОбъектов, Знач ВключатьУслуги)

	ТаблицаСведений = ПечатьТорговыхДокументов.ПолучитьОписаниеТОРГ12();

	Запрос = Новый Запрос();
	Запрос.Параметры.Вставить("МассивОбъектов", МассивОбъектов);
	Запрос.УстановитьПараметр("ДополнительнаяКолонкаПечатныхФормДокументов", Константы.ДополнительнаяКолонкаПечатныхФормДокументов.Получить());
	Запрос.Параметры.Вставить("ВключатьУслуги", ВключатьУслуги);

	Запрос.Текст = ПолучитьТекстЗапросаДляФормированияТаблицыСведенийТОРГ12(); 

	РезультатыЗапроса = Запрос.ВыполнитьПакет();

	ВалютаРегУчета = ОбщегоНазначенияБПВызовСервераПовтИсп.ПолучитьВалютуРегламентированногоУчета();
	РеквизитыВалютыРегУчета = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ВалютаРегУчета, "Код, Наименование");

	Выборка = РезультатыЗапроса[2].Выбрать();
	СтрокиДокументов = РезультатыЗапроса[3].Выгрузить();
	СтрокиДокументов.Индексы.Добавить("Документ");

	Пока Выборка.Следующий() Цикл

		СведенияОДокументе = ТаблицаСведений.Добавить();
		ЗаполнитьЗначенияСвойств(СведенияОДокументе, Выборка);
		СведенияОДокументе.Валюта             = ВалютаРегУчета;
		СведенияОДокументе.ВалютаКод          = РеквизитыВалютыРегУчета.Код;
		СведенияОДокументе.ВалютаНаименование = РеквизитыВалютыРегУчета.Наименование;

		ТаблицаДокумента = ПечатьТорговыхДокументов.ПолучитьОписаниеТаблицыТОРГ12();
#Вставка
		ТаблицаДокумента.Колонки.Добавить("СертификатыДекларации");
		ВыборкаСопрДокументов = СопроводительныеДокументыСервер.ВыборкаСопроводительныхДокументов(СведенияОДокументе.Документ.Товары.Выгрузить().ВыгрузитьКолонку("Номенклатура"), СведенияОДокументе.ДатаДокумента);
#КонецВставки

		Отбор = Новый Структура("Документ", Выборка.Документ);
		СтрокиДокумента = СтрокиДокументов.НайтиСтроки(Отбор);

		НуженПересчетВРубли = Ложь;
		Если Выборка.ВалютаДокумента <> ВалютаРегУчета Тогда
			НуженПересчетВРубли	= Истина;
		КонецЕсли;

		Для Каждого Строка Из СтрокиДокумента Цикл

			СтрокаТаблицыДокумента = ТаблицаДокумента.Добавить();
			ЗаполнитьЗначенияСвойств(СтрокаТаблицыДокумента, Строка);

			Если НуженПересчетВРубли Тогда
				Если Строка.СуществуютЗаписиРублевыхСумм Тогда
					СтрокаТаблицыДокумента.СуммаНДС 	= Строка.НДСВРублях;
					СтрокаТаблицыДокумента.СуммаБезНДС 	= Строка.ВсегоВРублях - Строка.НДСВРублях;
				Иначе
					Кратность = ?(Выборка.Кратность 	= 0, 1, Выборка.Кратность);
					СтрокаТаблицыДокумента.СуммаНДС 	= Строка.СуммаНДС * Выборка.Курс / Кратность;;
					СтрокаТаблицыДокумента.СуммаБезНДС 	= (Строка.СуммаБезНДС + Строка.СуммаНДС) * Выборка.Курс / Кратность - СтрокаТаблицыДокумента.СуммаНДС;
				КонецЕсли;
			КонецЕсли;
			СтрокаТаблицыДокумента.СуммаСНДС = СтрокаТаблицыДокумента.СуммаБезНДС + СтрокаТаблицыДокумента.СуммаНДС;
			СтрокаТаблицыДокумента.Цена = ?(СтрокаТаблицыДокумента.Количество = 0, СтрокаТаблицыДокумента.СуммаБезНДС, СтрокаТаблицыДокумента.СуммаБезНДС / СтрокаТаблицыДокумента.Количество);
#Вставка
			СтрокаТаблицыДокумента.СертификатыДекларации = СопроводительныеДокументыСервер.ТекстСопроводительныеДокументыНоменклатуры(
				СведенияОДокументе.Договор,
				Строка.Товар,
				СведенияОДокументе.ДатаДокумента,
				ВыборкаСопрДокументов
			);
#КонецВставки

		КонецЦикла;

		СведенияОДокументе.ТаблицаДокумента = ТаблицаДокумента;

	КонецЦикла;

	Возврат ТаблицаСведений;

КонецФункции
