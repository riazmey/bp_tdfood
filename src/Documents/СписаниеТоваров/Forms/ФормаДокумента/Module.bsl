&НаКлиенте
Процедура Базар_ПриОткрытииПосле(Отказ)
	
	УправлениеФормой(ЭтаФорма);
	
КонецПроцедуры

&Вместо("УстановитьУсловноеОформлениеВидимость")
Процедура Базар_УстановитьУсловноеОформлениеВидимость()
	
	УсловноеОформление.Элементы.Очистить();
	
	// ТоварыЦена, ТоварыСумма, ГруппаИтоги
	Если НЕ ЗначениеЗаполнено(Объект.ИнвентаризацияТоваровНаСкладе) тогда
		ЭлементУО = УсловноеОформление.Элементы.Добавить();
		
		КомпоновкаДанныхКлиентСервер.ДобавитьОформляемоеПоле(ЭлементУО.Поля, "ТоварыЦена");
		КомпоновкаДанныхКлиентСервер.ДобавитьОформляемоеПоле(ЭлементУО.Поля, "ТоварыСумма");
		КомпоновкаДанныхКлиентСервер.ДобавитьОформляемоеПоле(ЭлементУО.Поля, "ГруппаИтоги");
		
		ОбщегоНазначенияКлиентСервер.ДобавитьЭлементКомпоновки(ЭлементУО.Отбор,
			"НТТ", ВидСравненияКомпоновкиДанных.Равно, Ложь);
		
		ЭлементУО.Оформление.УстановитьЗначениеПараметра("Видимость", Ложь);
	КонецЕсли;
	
	// ТоварыСтавкаНДСВРознице
	
	ЭлементУО = УсловноеОформление.Элементы.Добавить();
	
	КомпоновкаДанныхКлиентСервер.ДобавитьОформляемоеПоле(ЭлементУО.Поля, "ТоварыСтавкаНДСВРознице");
	
	ГруппаОтбора1 = КомпоновкаДанныхКлиентСервер.ДобавитьГруппуОтбора(ЭлементУО.Отбор.Элементы, ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИли);
	
		ОбщегоНазначенияКлиентСервер.ДобавитьЭлементКомпоновки(ГруппаОтбора1,
			"НТТ", ВидСравненияКомпоновкиДанных.Равно, Ложь);
		
		ОбщегоНазначенияКлиентСервер.ДобавитьЭлементКомпоновки(ГруппаОтбора1,
			"УчетВПродажныхЦенах", ВидСравненияКомпоновкиДанных.Равно, Ложь);
		
		ОбщегоНазначенияКлиентСервер.ДобавитьЭлементКомпоновки(ГруппаОтбора1,
			"РазделятьПоСтавкамНДС", ВидСравненияКомпоновкиДанных.Равно, Ложь);
	
	ЭлементУО.Оформление.УстановитьЗначениеПараметра("Видимость", Ложь);
	
	
	// ТоварыСчетУчета
	
	ЭлементУО = УсловноеОформление.Элементы.Добавить();
	
	КомпоновкаДанныхКлиентСервер.ДобавитьОформляемоеПоле(ЭлементУО.Поля, "ТоварыСчетУчета");
	
	ОбщегоНазначенияКлиентСервер.ДобавитьЭлементКомпоновки(ЭлементУО.Отбор,
		"НТТ", ВидСравненияКомпоновкиДанных.Равно, Истина);
	
	ОбщегоНазначенияКлиентСервер.ДобавитьЭлементКомпоновки(ЭлементУО.Отбор,
		"УчетВПродажныхЦенах", ВидСравненияКомпоновкиДанных.Равно, Истина);
	
	ЭлементУО.Оформление.УстановитьЗначениеПараметра("Видимость", Ложь);
	
	
	// ТоварыДокументОприходования
	
	ЭлементУО = УсловноеОформление.Элементы.Добавить();
	
	КомпоновкаДанныхКлиентСервер.ДобавитьОформляемоеПоле(ЭлементУО.Поля, "ТоварыДокументОприходования");
	
	ОбщегоНазначенияКлиентСервер.ДобавитьЭлементКомпоновки(ЭлементУО.Отбор,
		"СпособОценкиМПЗПоСредней", ВидСравненияКомпоновкиДанных.Равно, Истина);
	
	ЭлементУО.Оформление.УстановитьЗначениеПараметра("Видимость", Ложь);
	
КонецПроцедуры

&Вместо("УправлениеФормой")
Процедура Базар_УправлениеФормой(Форма)

	Элементы	= Форма.Элементы;
	Объект		= Форма.Объект;
	
	Если ЗначениеЗаполнено(Объект.ИнвентаризацияТоваровНаСкладе) тогда
		Элементы.ТоварыЦена.ТолькоПросмотр = Истина;
		Элементы.ТоварыСумма.ТолькоПросмотр = Истина;
		Элементы.ГруппаИтоги.ТолькоПросмотр = Истина;
	КонецЕсли;
	
	Элементы.ПодразделениеОрганизации.Доступность		= ЗначениеЗаполнено(Объект.Организация);
	Элементы.ИнвентаризацияТоваровНаСкладе.Доступность	= ЗначениеЗаполнено(Объект.Организация)
		И ЗначениеЗаполнено(Объект.Склад);

КонецПроцедуры

&Вместо("УстановитьВидимостьНаСервере")
Процедура Базар_УстановитьВидимостьНаСервере()
	
	Если НЕ ЗначениеЗаполнено(Объект.ИнвентаризацияТоваровНаСкладе) тогда
		Элементы.ТоварыЦена.ТолькоПросмотр = НТТ;
		Элементы.ТоварыСумма.ТолькоПросмотр = НТТ;
		Элементы.ГруппаИтоги.Видимость = НТТ;
	Иначе
		Элементы.ТоварыЦена.ТолькоПросмотр = Истина;
		Элементы.ТоварыСумма.ТолькоПросмотр = Истина;
		Элементы.ГруппаИтоги.Видимость = Истина;
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура Базар_ИнвентаризацияТоваровНаСкладеПриИзмененииВместо(Элемент)
	
	Если ЗначениеЗаполнено(Объект.ИнвентаризацияТоваровНаСкладе) тогда
		ТекстВопроса = НСтр("ru = 'Заполнить документ списание товаров, на основании инвентаризации товаров?'");
		Оповещение = Новый ОписаниеОповещения("ОтветНаВопросЗаполнитьНаОснованииИнвентаризации", ЭтотОбъект, Неопределено);
		ПоказатьВопрос(Оповещение,
		               ТекстВопроса,
		               РежимДиалогаВопрос.ДаНет,
		               30,
		               КодВозвратаДиалога.Да,
		               "Заполнить на основании инвентаризации?",
		               КодВозвратаДиалога.Нет);
	КонецЕсли;
	
	УстановитьУсловноеОформлениеВидимость();
	УстановитьВидимостьНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура ОтветНаВопросЗаполнитьНаОснованииИнвентаризации(Ответ, ДополнительныеНастройки) Экспорт
	
	Если Ответ = КодВозвратаДиалога.Да Тогда
		ЗаполнитьПоИнвентаризации(Команды.Найти("ЗаполнитьПоИнвентаризации"));
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ИнвентаризацияТоваровНаСкладеОбработкаВыбораВместоНаСервере(ВыбранноеЗначение)
	
	Если ЗначениеЗаполнено(ВыбранноеЗначение) тогда
		
		ТекстСообщения = "";
		Если НЕ ВыбранноеЗначение.Проведен тогда
			ТекстСообщения = НСтр("ru = 'Выбранный Вами документ """ + ВыбранноеЗначение + """ не проведен.'");
			
		ИначеЕсли ВыбранноеЗначение.Дата > Объект.Дата тогда
			ТекстСообщения = НСтр("ru = 'Дата выбранного Вами документа """ + ВыбранноеЗначение + """ больше, чем дата списания товаров.'");
			
		КонецЕсли;
		
		Если НЕ ПустаяСтрока(ТекстСообщения) тогда
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, Параметры.Ключ, "Объект.ИнвентаризацияТоваровНаСкладе");
			ВыбранноеЗначение = ПредопределенноеЗначение("Документ.СписаниеТоваров.ПустаяСсылка");
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура Базар_ИнвентаризацияТоваровНаСкладеОбработкаВыбораВместо(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	ИнвентаризацияТоваровНаСкладеОбработкаВыбораВместоНаСервере(ВыбранноеЗначение);
	
КонецПроцедуры
