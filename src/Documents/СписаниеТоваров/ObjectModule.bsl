&Вместо("ЗаполнитьТоварыПоИнвентаризацииТоваров")
Процедура Базар_ЗаполнитьТоварыПоИнвентаризацииТоваров(ДокументОснование) Экспорт

	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ТекущийДокументСписания", Ссылка);
	Запрос.УстановитьПараметр("ДокументОснованиеСсылка", ДокументОснование);
	Запрос.Текст = "ВЫБРАТЬ
	               |	ПредыдущиеСписания.Номенклатура КАК Номенклатура,
	               |	ПредыдущиеСписания.СчетУчета КАК СчетУчета,
	               |	ПредыдущиеСписания.Склад КАК Склад,
	               |	ПредыдущиеСписания.Количество КАК Количество,
	               |	ПредыдущиеСписания.Цена КАК Цена
	               |ПОМЕСТИТЬ ВТ_ПредыдущиеСписания
	               |ИЗ
	               |	(ВЫБРАТЬ
	               |		ДокСписание.Номенклатура КАК Номенклатура,
	               |		ДокСписание.СчетУчета КАК СчетУчета,
	               |		ДокСписание.Ссылка.Склад КАК Склад,
	               |		ДокСписание.Количество КАК Количество,
	               |		ДокСписание.Цена КАК Цена
	               |	ИЗ
	               |		Документ.СписаниеТоваров.Товары КАК ДокСписание
	               |	ГДЕ
	               |		ДокСписание.Ссылка <> &ТекущийДокументСписания
	               |		И ДокСписание.Ссылка.Проведен
	               |		И ДокСписание.Ссылка.ИнвентаризацияТоваровНаСкладе = &ДокументОснованиеСсылка
	               |	
	               |	ОБЪЕДИНИТЬ ВСЕ
	               |	
	               |	ВЫБРАТЬ
	               |		ДокОтчетККМ.Номенклатура,
	               |		ДокОтчетККМ.СчетУчета,
	               |		ДокОтчетККМ.Ссылка.Склад,
	               |		ДокОтчетККМ.Количество,
	               |		ДокОтчетККМ.Цена
	               |	ИЗ
	               |		Документ.ОтчетОРозничныхПродажах.Товары КАК ДокОтчетККМ
	               |	ГДЕ
	               |		ДокОтчетККМ.Ссылка.Проведен
	               |		И ДокОтчетККМ.Ссылка.ИнвентаризацияТоваровНаСкладе = &ДокументОснованиеСсылка) КАК ПредыдущиеСписания
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	Док.Номенклатура КАК Номенклатура,
	               |	Док.СчетУчета КАК СчетУчета,
	               |	Док.Ссылка.Склад КАК Склад,
	               |	МАКСИМУМ(Док.КоличествоУчет - Док.Количество) КАК КоличествоОтклонение,
	               |	ВЫБОР
	               |		КОГДА СУММА(ВТ_ПредыдущиеСписания.Количество) ЕСТЬ NULL
	               |			ТОГДА 0
	               |		ИНАЧЕ СУММА(ВТ_ПредыдущиеСписания.Количество)
	               |	КОНЕЦ КАК КоличествоСписанное,
	               |	Док.ЦенаВРознице КАК ЦенаВРознице,
	               |	Док.Цена КАК Цена,
	               |	Док.Номенклатура.НоменклатурнаяГруппа КАК НоменклатураНоменклатурнаяГруппа
	               |ИЗ
	               |	Документ.ИнвентаризацияТоваровНаСкладе.Товары КАК Док
	               |		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ПредыдущиеСписания КАК ВТ_ПредыдущиеСписания
	               |		ПО Док.Номенклатура = ВТ_ПредыдущиеСписания.Номенклатура
	               |			И Док.СчетУчета = ВТ_ПредыдущиеСписания.СчетУчета
	               |			И Док.Ссылка.Склад = ВТ_ПредыдущиеСписания.Склад
	               |ГДЕ
	               |	Док.Ссылка = &ДокументОснованиеСсылка
	               |	И Док.КоличествоУчет - Док.Количество > 0
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	Док.Ссылка.Склад,
	               |	Док.Номенклатура,
	               |	Док.СчетУчета,
	               |	Док.ЦенаВРознице,
	               |	Док.Цена
	               |
	               |УПОРЯДОЧИТЬ ПО
	               |	НоменклатураНоменклатурнаяГруппа,
	               |	Номенклатура";
	
	Склад		= ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ДокументОснование, "Склад"); // |		И #УсловиеПоЦене#
	ТипСклада	= ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Склад, "ТипСклада");
	
	Если ТипСклада = Перечисления.ТипыСкладов.НеавтоматизированнаяТорговаяТочка Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "#УсловиеПоЦене#", "Док.Цена = ВТ_ПредыдущиеСписания.Цена");
	Иначе
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "#УсловиеПоЦене#", "ИСТИНА");
	КонецЕсли;
	
	ТаблицаТоваров = Запрос.Выполнить().Выгрузить();
	
	ДанныеОбъекта = Новый Структура("Дата, Организация, Склад");
	ЗаполнитьЗначенияСвойств(ДанныеОбъекта, ЭтотОбъект);
	
	СоответствиеСведенийОНоменклатуре = БухгалтерскийУчетПереопределяемый.ПолучитьСведенияОСпискеНоменклатуры(
		ОбщегоНазначения.ВыгрузитьКолонку(ТаблицаТоваров, "Номенклатура", Истина), ДанныеОбъекта, Ложь, Ложь);
		
	СтрокиДляЗаполненияСчетовУчета = Новый Массив;
		
	Для Каждого СтрокаТовара Из ТаблицаТоваров Цикл
		
		КоличествоСписать = СтрокаТовара.КоличествоОтклонение - СтрокаТовара.КоличествоСписанное;
		
		Если КоличествоСписать <= 0 Тогда
			Продолжить;
		КонецЕсли;
		
		СтрокаТабличнойЧасти = Товары.Добавить();
		СтрокиДляЗаполненияСчетовУчета.Добавить(СтрокаТабличнойЧасти);
		
		СтрокаТабличнойЧасти.Номенклатура	= СтрокаТовара.Номенклатура;
		СтрокаТабличнойЧасти.Количество		= КоличествоСписать;
		СтрокаТабличнойЧасти.СчетУчета		= СтрокаТовара.СчетУчета;
		СтрокаТабличнойЧасти.ОтражениеВУСН	= Перечисления.ОтражениеВУСН.НеПринимаются;
		
		Если ТипСклада = Перечисления.ТипыСкладов.НеавтоматизированнаяТорговаяТочка Тогда
			СтрокаТабличнойЧасти.Цена = СтрокаТовара.ЦенаВРознице;
		Иначе
			СтрокаТабличнойЧасти.Цена = СтрокаТовара.Цена;
		КонецЕсли;
		ОбработкаТабличныхЧастейКлиентСервер.РассчитатьСуммуТабЧасти(СтрокаТабличнойЧасти);
		
		СведенияОНоменклатуре = СоответствиеСведенийОНоменклатуре.Получить(СтрокаТовара.Номенклатура);
		Если СведенияОНоменклатуре = Неопределено Тогда
			Продолжить;
		КонецЕсли;
		
		СтрокаТабличнойЧасти.ЕдиницаИзмерения		= СведенияОНоменклатуре.ЕдиницаИзмерения;
		СтрокаТабличнойЧасти.Коэффициент			= СведенияОНоменклатуре.Коэффициент;
		СтрокаТабличнойЧасти.НомерГТД				= СведенияОНоменклатуре.НомерГТД;
		СтрокаТабличнойЧасти.СтранаПроисхождения	= СведенияОНоменклатуре.СтранаПроисхождения;
		
	КонецЦикла;
	
	СчетаУчетаВДокументах.ЗаполнитьСтроки(СтрокиДляЗаполненияСчетовУчета, "Товары", ЭтотОбъект, Документы.СписаниеТоваров);
	
	Если Товары.Количество() = 0 Тогда
		ТекстСообщения = НСтр("ru = 'В документе ""%1 № %2"" отсутствуют товары фактическое количество которых превышает учетное.'");
		ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ТекстСообщения, 
			ДокументОснование.Метаданные().Представление(), ДокументОснование.Номер);
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, ЭтотОбъект, "ИнвентаризацияТоваровНаСкладе", "Объект");
	КонецЕсли;

КонецПроцедуры

&После("ОбработкаПроверкиЗаполнения")
Процедура Базар_ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	Если ЗначениеЗаполнено(ИнвентаризацияТоваровНаСкладе) тогда
		ПроверяемыеРеквизиты.Добавить("Товары.Цена");
		ПроверяемыеРеквизиты.Добавить("Товары.Сумма");
	КонецЕсли;
	
КонецПроцедуры
