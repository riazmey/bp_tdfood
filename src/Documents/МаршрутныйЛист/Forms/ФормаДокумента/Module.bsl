
&НаСервере
Процедура ЗаполнитьПоДаннымЛогистикиНаСервере()
	Док = РеквизитФормыВЗначение("Объект");
	Док.ЗаполнитьДокументПоДаннымЛогистики();
	ЗначениеВРеквизитФормы(Док,"Объект");	
КонецПроцедуры

&НаКлиенте
Процедура РейсыМаршрутовПриАктивизацииСтроки(Элемент)
	ПодключитьОбработчикОжидания("ПриАктивизацииСтрокиРейсМаршрута",0.1,Истина);
КонецПроцедуры

&НаКлиенте
Процедура ПриАктивизацииСтрокиРейсМаршрута()
	ТекСтрРейс = Элементы.Рейсы.ТекущиеДанные;
	Если ТекСтрРейс = Неопределено тогда
		Возврат;
	КонецЕсли;
	
	Отбор = Новый ФиксированнаяСтруктура("Рейс",ТекСтрРейс.Рейс);
	
	Элементы.СоставыРейсов.ОтборСтрок = Отбор;
	
КонецПроцедуры

&НаКлиенте
Процедура СоставыРейсовМаршрутаПриАктивизацииСтроки(Элемент)
	ПодключитьОбработчикОжидания("ПриАктивизацииСтрокиСоставМаршрута",0.1,Истина);
КонецПроцедуры

&НаКлиенте
Процедура ПриАктивизацииСтрокиСоставМаршрута()
	ТекСтрСостав = Элементы.СоставыРейсов.ТекущиеДанные;
	Если ТекСтрСостав = Неопределено тогда
		Возврат;
	КонецЕсли;
	
	Отбор = Новый ФиксированнаяСтруктура("GUID",ТекСтрСостав.GUID);
	
	Элементы.ДокументыМаршрута.ОтборСтрок = Отбор;
	
КонецПроцедуры

&НаСервере
Функция СформироватьДокументыОтгрузкиНаСервере()
	
	Возврат Документы.МаршрутныйЛист.ЗаполнитьДокументИСформироватьДокументыОтгрузки(Объект);
	
КонецФункции

&НаКлиенте
Процедура ЗаполнитьДокументИСформироватьДокументыОтгрузки(Команда)
	
	РезультатыОбработки = СформироватьДокументыОтгрузкиНаСервере();
	
	Если РезультатыОбработки = Неопределено тогда
		Возврат;
	КонецЕсли;
	
	Если РезультатыОбработки.ПопытокСоздатьДокументов > 0 ИЛИ
		РезультатыОбработки.ПопытокПровестиДокументов > 0 тогда
		
		Модифицированность = Истина;
		
		Если РезультатыОбработки.НеУдалосьПровестиДокументов = 0 И
			РезультатыОбработки.НеУдалосьСоздатьДокументов = 0 И
			РезультатыОбработки.ВМаршрутномЛистеЕстьРеализации Тогда
			
			Попытка
				Записать(РежимЗаписиДокумента.Проведение);
			Исключение
				Сообщить("Документ " + Объект + " не проведен!");
			КонецПопытки;
			
			Если Объект.Проведен тогда
				Сообщить("Формирование документов прошло успешно, документ проведен.");
			КонецЕсли;
			
		Иначе
			Если Объект.Проведен тогда
				Попытка
					Записать(РежимЗаписиДокумента.ОтменаПроведения);
				Исключение
					Сообщить("Документ " + Объект + " не записан!");
				КонецПопытки;
			Иначе
				Попытка
					Записать(РежимЗаписиДокумента.Запись);
				Исключение
					Сообщить("Документ " + Объект + " не записан!");
				КонецПопытки;
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЕсли;
	
	
КонецПроцедуры

&НаКлиенте
Процедура ДокументыМаршрутаВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	ПараметрыДляПередачи = Новый Структура;
	
	Если Элементы.ДокументыМаршрута.ТекущийЭлемент.Имя = "ДокументыМаршрутовДокумент" тогда
		
		ПараметрыДляПередачи.Вставить("Ключ", Элементы.ДокументыМаршрута.ТекущиеДанные.Документ);
		ОткрытьФорму("Документ.СчетНаОплатуПокупателю.ФормаОбъекта", ПараметрыДляПередачи);
		
	ИначеЕсли Элементы.ДокументыМаршрута.ТекущийЭлемент.Имя = "ДокументыМаршрутовДокументОтгрузки" 
		и Не Элементы.ДокументыМаршрута.ТекущиеДанные.ДокументОтгрузки = ПредопределенноеЗначение("Документ.РеализацияТоваровУслуг.ПустаяСсылка") тогда
		
		ПараметрыДляПередачи.Вставить("Ключ", Элементы.ДокументыМаршрута.ТекущиеДанные.ДокументОтгрузки);
		ОткрытьФорму("Документ.РеализацияТоваровУслуг.ФормаОбъекта", ПараметрыДляПередачи);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СоставыРейсовВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	Если Элементы.СоставыРейсов.ТекущийЭлемент.Имя = "СоставыРейсовМаршрутаТочкаМаршрута" тогда
		ПараметрыДляПередачи = Новый Структура;
		ПараметрыДляПередачи.Вставить("Ключ", Элементы.СоставыРейсов.ТекущиеДанные.ТочкаМаршрута);
		ОткрытьФорму("Справочник.Контрагенты.ФормаОбъекта", ПараметрыДляПередачи);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция ПечатьЗагрузочнаяНакладнаяНаСервере()
	//Если Не Модифицированность и НЕ Параметры.Ключ.Пустая() И Объект.Проведен тогда
	//	МассивОбъектов = Новый Массив;
	//	МассивОбъектов.Добавить(Объект.Ссылка);
	//	Возврат Документы.МаршрутныйЛист.ПечатьЗагрузочнаяНакладная(МассивОбъектов);
	//Иначе
	//	Возврат Неопределено
	//КонецЕсли;
КонецФункции

&НаКлиенте
Процедура ПечатьЗагрузочнаяНакладная(Команда)
	
	//ТабПеч = ПечатьЗагрузочнаяНакладнаяНаСервере();
	//Если ТабПеч <> Неопределено тогда
	//	ТабПеч.Показать();
	//КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтаФорма);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

#Область СлужебныеПроцедурыИФункцииБСП

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
	ПодключаемыеКомандыКлиент.ВыполнитьКоманду(ЭтотОбъект, Команда, Объект);
КонецПроцедуры

&НаСервере
Процедура Подключаемый_ВыполнитьКомандуНаСервере(Контекст, Результат)
	ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, Контекст, Объект, Результат);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

#КонецОбласти