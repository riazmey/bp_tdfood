Процедура ЗаполнитьРазделПодписи(ДокументОбъект, Знач Пользователь = Неопределено) Экспорт
	
	Если ДокументОбъект.Склад <> Справочники.Склады.ПустаяСсылка() Тогда 
		ДокументОбъект.ОтпускПроизвел = ОтветственныеЛицаБП.ОтветственноеЛицоНаСкладе(ДокументОбъект.Склад, ДокументОбъект.Дата);
	Иначе
		ДокументОбъект.ОтпускПроизвел = Справочники.ФизическиеЛица.ПустаяСсылка();
	КонецЕсли;
	
	Если Пользователь = Неопределено тогда
		Пользователь = ДокументОбъект.Ответственный;
	КонецЕсли;
	
	ПодписиУполномоченныхЛиц = ОтветственныеЛицаБП.РеквизитыПодписиУполномоченныхЛиц(ДокументОбъект.Организация,
	                                                                                 Пользователь,
	                                                                                 Неопределено,
	                                                                                 ДокументОбъект.Дата);
	
	ПодписиРуководитель = ПодписиУполномоченныхЛиц.Получить(ПредопределенноеЗначение("Перечисление.ОтветственныеЛицаОрганизаций.Руководитель"));
	ПодписиГлавныйБухгалтер = ПодписиУполномоченныхЛиц.Получить(ПредопределенноеЗначение("Перечисление.ОтветственныеЛицаОрганизаций.ГлавныйБухгалтер"));
	ПодписиОтветственныйЗаОформление = ПодписиУполномоченныхЛиц.Получить(ПредопределенноеЗначение("Перечисление.ОтветственныеЛицаОрганизаций.ОтветственныйЗаОформление"));
	
	ДокументОбъект.Руководитель = ПодписиРуководитель.ФизическоеЛицо;
	ДокументОбъект.ЗаРуководителяНаОсновании = ПодписиРуководитель.ОснованиеПраваПодписи;
	ДокументОбъект.ГлавныйБухгалтер = ПодписиГлавныйБухгалтер.ФизическоеЛицо;
	ДокументОбъект.ЗаГлавногоБухгалтераНаОсновании = ПодписиГлавныйБухгалтер.ОснованиеПраваПодписи;
	ДокументОбъект.ОтветственныйЗаОформление = ПодписиОтветственныйЗаОформление.ФизическоеЛицо;
	
КонецПроцедуры

&Перед("ОбработкаПолученияФормы")
Процедура Базар_ОбработкаПолученияФормы(ВидФормы, Параметры, ВыбраннаяФорма, ДополнительнаяИнформация, СтандартнаяОбработка)
	
	Если ВидФормы <> "ФормаДокумента"
		И ВидФормы <> "ФормаОбъекта" Тогда
		Возврат;
	КонецЕсли;
	
	Если Параметры.Свойство("Основание") тогда
		Если ТипЗнч(Параметры.Основание) = Тип("ДокументСсылка.СчетНаОплатуПокупателю") тогда
			Если ГосЗакупкиСервер.ЭтоДоговорПоставкиГосЗакупок(Параметры.Основание.ДоговорКонтрагента) тогда
				
				Если Параметры.Свойство("ЗначенияЗаполнения") тогда
					ЗначенияЗаполнения = Параметры.ЗначенияЗаполнения;
				Иначе
					ЗначенияЗаполнения = Новый Структура;
				КонецЕсли;
				
				ЗначенияЗаполнения.Вставить("ВидОперации", ПредопределенноеЗначение("Перечисление.ВидыОперацийРеализацияТоваров.Товары"));
				
				Параметры.Вставить("ЗначенияЗаполнения", ЗначенияЗаполнения);
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&Вместо("ТоварыУслугиКРеализацииПоСчету")
Функция Базар_ТоварыУслугиКРеализацииПоСчету(СчетНаОплату, РеализацииПоСчету) Экспорт
	
	ТоварыУслуги = Новый ТаблицаЗначений;
	ТоварыУслуги.Колонки.Добавить("ЭтоУслуга", Новый ОписаниеТипов("Булево"));
	ТоварыУслуги.Колонки.Добавить("Номенклатура", Новый ОписаниеТипов("СправочникСсылка.Номенклатура"));
	ТоварыУслуги.Колонки.Добавить("Содержание", ОбщегоНазначения.ОписаниеТипаСтрока(1000));
	ТоварыУслуги.Колонки.Добавить("ЕдиницаИзмерения", Новый ОписаниеТипов("СправочникСсылка.КлассификаторЕдиницИзмерения"));
	ТоварыУслуги.Колонки.Добавить("Коэффициент", ОбщегоНазначения.ОписаниеТипаЧисло(10, 3));
	ТоварыУслуги.Колонки.Добавить("Количество", ОбщегоНазначения.ОписаниеТипаЧисло(10, 3));
	ТоварыУслуги.Колонки.Добавить("Цена", ОбщегоНазначения.ОписаниеТипаЧисло(15, 2));
	ТоварыУслуги.Колонки.Добавить("Сумма", ОбщегоНазначения.ОписаниеТипаЧисло(15, 2));
	ТоварыУслуги.Колонки.Добавить("СуммаСкидки", ОбщегоНазначения.ОписаниеТипаЧисло(15, 2));
	ТоварыУслуги.Колонки.Добавить("СтавкаНДС", Новый ОписаниеТипов("ПеречислениеСсылка.СтавкиНДС"));
	ТоварыУслуги.Колонки.Добавить("СуммаНДС", ОбщегоНазначения.ОписаниеТипаЧисло(15, 2));
	ТоварыУслуги.Колонки.Добавить("КодТНВЭД", Новый ОписаниеТипов("СправочникСсылка.КлассификаторТНВЭД"));
	ТоварыУслуги.Колонки.Добавить("НомерГТД", Новый ОписаниеТипов("СправочникСсылка.НомераГТД"));
	ТоварыУслуги.Колонки.Добавить("СтранаПроисхождения", Новый ОписаниеТипов("СправочникСсылка.СтраныМира"));
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("СчетНаОплату", СчетНаОплату);
	Запрос.УстановитьПараметр("РеализацииПоСчету", РеализацииПоСчету);
	
	ЭтоДоговорПоставкиГосЗакупок = ГосЗакупкиСервер.ЭтоДоговорПоставкиГосЗакупок(СчетНаОплату.ДоговорКонтрагента);
	
	НомераТаблиц = Новый Структура;
	
	Запрос.Текст = ТекстЗапросаРеквизитыСчета(НомераТаблиц) 
		+ ТекстЗапросаРеализованнаяНоменклатура(НомераТаблиц)
		+ ТекстЗапросаТоварыУслугиКРеализацииПоСчету(НомераТаблиц);
	
	РезультатЗапроса = Запрос.ВыполнитьПакет();
	
	Результат = Новый Структура;
	Для каждого НомерТаблицы Из НомераТаблиц Цикл
		Результат.Вставить(НомерТаблицы.Ключ, РезультатЗапроса[НомерТаблицы.Значение].Выгрузить());
	КонецЦикла;
	
	РеализованнаяНоменклатура = Результат.РеализованнаяНоменклатура;
	
	Если ЭтоДоговорПоставкиГосЗакупок тогда
		ПоляОтбора = "ЭтоУслуга, НоменклатураГосЗакупок, Номенклатура, ЦенаГосЗакупок";
	Иначе
		ПоляОтбора = "ЭтоУслуга, Номенклатура, Содержание";
	КонецЕсли;
	
	РеализованнаяНоменклатура.Индексы.Добавить(ПоляОтбора);
	Отбор = Новый Структура(ПоляОтбора);
	
	РеквизитыСчета = Новый Структура("СуммаВключаетНДС, СуммаСкидки", Истина, 0);
	Если Результат.РеквизитыСчета.Количество() > 0 Тогда
		ЗаполнитьЗначенияСвойств(РеквизитыСчета, Результат.РеквизитыСчета[0]);
	КонецЕсли;
	
	ТоварыУслуги = Результат.ТоварыУслуги;
	Если РеквизитыСчета.СуммаСкидки <> 0 Или ТоварыУслуги.Итог("СуммаСкидки") <> 0 Тогда
		ОбработкаТабличныхЧастей.РаспределитьСкидкуПоСтрокамТабЧасти(ТоварыУслуги, РеквизитыСчета);
	КонецЕсли;
	
	ОтгруженныеПолностью = Новый Массив;
	
	Для Каждого СтрокаСчета Из ТоварыУслуги Цикл
		
		// Если количество не указано, считаем, что услуга оказывается один раз
		КоличествоВСчете = ?(СтрокаСчета.ЭтоУслуга И СтрокаСчета.Количество = 0, 1, СтрокаСчета.Количество);
		КоличествоГосЗакупокВСчете = ?(СтрокаСчета.ЭтоУслуга И СтрокаСчета.КоличествоГосЗакупок = 0, 1, СтрокаСчета.КоличествоГосЗакупок);
		
		ЗаполнитьЗначенияСвойств(Отбор, СтрокаСчета);
		НайденныеСтроки = РеализованнаяНоменклатура.НайтиСтроки(Отбор);
		
		Если НайденныеСтроки.Количество() <> 0 Тогда
			
			РеализованоРанееКоличество = НайденныеСтроки[0].Количество;
			РеализованоРанееКоличествоГосЗакупок = НайденныеСтроки[0].КоличествоГосЗакупок;
			
			Если РеализованоРанееКоличество < КоличествоВСчете Тогда
				// Товар реализован частично
				Количество = Макс(КоличествоВСчете - РеализованоРанееКоличество, 0);
				КоличествоГосЗакупок = Макс(КоличествоГосЗакупокВСчете - РеализованоРанееКоличествоГосЗакупок, 0);
				СтрокаСчета.Количество = Количество;
				СтрокаСчета.КоличествоГосЗакупок = КоличествоГосЗакупок;
				Если ЭтоДоговорПоставкиГосЗакупок тогда
					ОбработкаТабличныхЧастейКлиентСервер.РассчитатьСуммуТабЧастиГосЗакупок(СтрокаСчета, РеквизитыСчета.СуммаВключаетНДС);
				Иначе
					ОбработкаТабличныхЧастейКлиентСервер.РассчитатьСуммуТабЧасти(СтрокаСчета, РеквизитыСчета.СуммаВключаетНДС);
				КонецЕсли;
				ОбработкаТабличныхЧастейКлиентСервер.РассчитатьСуммуНДСТабЧасти(СтрокаСчета, РеквизитыСчета.СуммаВключаетНДС);
			Иначе
				ОтгруженныеПолностью.Добавить(СтрокаСчета);
			КонецЕсли;
			
			НайденныеСтроки[0].Количество = Макс(РеализованоРанееКоличество - КоличествоВСчете, 0);
			НайденныеСтроки[0].КоличествоГосЗакупок = Макс(РеализованоРанееКоличествоГосЗакупок - КоличествоГосЗакупокВСчете, 0);
			
		КонецЕсли;
		
	КонецЦикла;
	
	ВГраница = ОтгруженныеПолностью.Количество() - 1;
	Для Индекс = 0 По ВГраница Цикл
		ТоварыУслуги.Удалить(ОтгруженныеПолностью[ВГраница - Индекс]);
	КонецЦикла;
	
	Возврат ТоварыУслуги;
КонецФункции

&Вместо("ПолучитьСоответствиеВидовОперацийФормам")
Функция Базар_ПолучитьСоответствиеВидовОперацийФормам() Экспорт

	ФормыРеализацияТоваровУслуг = Новый Соответствие;
	ФормыРеализацияТоваровУслуг.Вставить(Перечисления.ВидыОперацийРеализацияТоваров.Товары, "Базар_ФормаДокументаТовары");
	ФормыРеализацияТоваровУслуг.Вставить(Перечисления.ВидыОперацийРеализацияТоваров.Услуги, "ФормаДокументаУслуги");
	ФормыРеализацияТоваровУслуг.Вставить(Перечисления.ВидыОперацийРеализацияТоваров.ПродажаКомиссия, 						"ФормаДокументаОбщая");
	ФормыРеализацияТоваровУслуг.Вставить(Перечисления.ВидыОперацийРеализацияТоваров.ОтгрузкаБезПереходаПраваСобственности, 	"ФормаДокументаОбщая");
	ФормыРеализацияТоваровУслуг.Вставить(Перечисления.ВидыОперацийРеализацияТоваров.Оборудование, 							"ФормаДокументаОбщая");
	
	Возврат ФормыРеализацияТоваровУслуг;

КонецФункции

&Вместо("ТекстЗапросаДанныеДляПечатиСчетовФактур")
Функция Базар_ТекстЗапросаДанныеДляПечатиСчетовФактур(НомераТаблиц) Экспорт

	НомераТаблиц.Вставить("ВременнаяТаблицаНаличиеТоваров", НомераТаблиц.Количество());
	НомераТаблиц.Вставить("Реквизиты", НомераТаблиц.Количество());
	НомераТаблиц.Вставить("ШтрихкодыУпаковок", НомераТаблиц.Количество());
	НомераТаблиц.Вставить("ВТ_РублевыеСуммыДокументовВВалюте", НомераТаблиц.Количество());
	НомераТаблиц.Вставить("ВременнаяТаблицаДокумента", НомераТаблиц.Количество());
	         
	ТекстЗапроса = 
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	ТаблицаТовары.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ НаличиеТоваров
	|ИЗ
	|	Документ.РеализацияТоваровУслуг.Товары КАК ТаблицаТовары
	|ГДЕ
	|	ТаблицаТовары.Ссылка = &ДокументОснование
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Реквизиты.Дата КАК ДатаОснования,
	|	Реквизиты.Организация КАК Организация,
	|	Реквизиты.Склад КАК Склад,
	|	Реквизиты.ПодразделениеОрганизации КАК Подразделение,
	|	ВЫБОР
	|		КОГДА Реквизиты.ПодразделениеОрганизации.ОбособленноеПодразделение
	|			ТОГДА Реквизиты.ПодразделениеОрганизации.ЦифровойИндексОбособленногоПодразделения
	|		ИНАЧЕ ВЫБОР
	|				КОГДА Реквизиты.Организация.ОбособленноеПодразделение
	|					ТОГДА Реквизиты.Организация.ЦифровойИндексОбособленногоПодразделения
	|				ИНАЧЕ """"
	|			КОНЕЦ
	|	КОНЕЦ КАК ЦифровойИндексОбособленногоПодразделения,
	|	ВЫБОР
	|		КОГДА Реквизиты.Организация.ОбособленноеПодразделение
	|			ТОГДА Реквизиты.Организация.ГоловнаяОрганизация
	|		ИНАЧЕ Реквизиты.Организация
	|	КОНЕЦ КАК Поставщик,
	|	ВЫБОР
	|		КОГДА Реквизиты.Организация.ОбособленноеПодразделение
	|			ТОГДА Реквизиты.Организация.ГоловнаяОрганизация.ИНН
	|		ИНАЧЕ Реквизиты.Организация.ИНН
	|	КОНЕЦ КАК ИННпоставщика,
	|	ВЫБОР
	|		КОГДА Реквизиты.ПодразделениеОрганизации.ОбособленноеПодразделение
	|			ТОГДА Реквизиты.ПодразделениеОрганизации
	|		ИНАЧЕ Реквизиты.Организация
	|	КОНЕЦ КАК ОбособленноеПодразделениеПоставщика,
	|	ВЫБОР
	|		КОГДА Реквизиты.Грузоотправитель <> ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
	|			ТОГДА Реквизиты.Грузоотправитель
	|		КОГДА Реквизиты.ПодразделениеОрганизации.ОбособленноеПодразделение
	|			ТОГДА Реквизиты.ПодразделениеОрганизации
	|		КОГДА Реквизиты.Организация.ОбособленноеПодразделение
	|			ТОГДА Реквизиты.Организация
	|		ИНАЧЕ ""он же""
	|	КОНЕЦ КАК Грузоотправитель,
	|	ВЫБОР
	|		КОГДА Реквизиты.Контрагент.ОбособленноеПодразделение
	|				И Реквизиты.Контрагент.ГоловнойКонтрагент.СтранаРегистрации = ЗНАЧЕНИЕ(Справочник.СтраныМира.Россия)
	|			ТОГДА Реквизиты.Контрагент.ГоловнойКонтрагент
	|		ИНАЧЕ Реквизиты.Контрагент
	|	КОНЕЦ КАК Покупатель,
	|	Реквизиты.Контрагент.ИНН КАК ИННпокупателя,
	|	ВЫБОР
	|		КОГДА Реквизиты.Грузополучатель.ОбособленноеПодразделение
	|				И Реквизиты.Грузополучатель.ГоловнойКонтрагент = Реквизиты.Контрагент
	|				И Реквизиты.Грузополучатель.ГоловнойКонтрагент.СтранаРегистрации = ЗНАЧЕНИЕ(Справочник.СтраныМира.Россия)
	|			ТОГДА Реквизиты.Грузополучатель
	|		ИНАЧЕ Реквизиты.Контрагент
	|	КОНЕЦ КАК ОбособленноеПодразделениеПокупателя,
	|	ВЫБОР
	|		КОГДА Реквизиты.Грузополучатель <> ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
	|			ТОГДА Реквизиты.Грузополучатель
	|		ИНАЧЕ Реквизиты.Контрагент
	|	КОНЕЦ КАК Грузополучатель,
	|	Реквизиты.ВалютаДокумента КАК Валюта,
	|	Реквизиты.ДоговорКонтрагента.ВалютаВзаиморасчетов КАК ВалютаВзаиморасчетов,
	|	Реквизиты.ДоговорКонтрагента.РасчетыВУсловныхЕдиницах КАК РасчетыВУсловныхЕдиницах,
	|	Реквизиты.ДоговорКонтрагента.ВидДоговора КАК ВидДоговора,
	|	Реквизиты.ДоговорКонтрагента.Представление КАК Основание,
	|	Реквизиты.ДоговорКонтрагента.Дата КАК ОснованиеДата,
	|	Реквизиты.ДоговорКонтрагента.Номер КАК ОснованиеНомер,
	|	Реквизиты.ДоговорКонтрагента.УчетАгентскогоНДСПокупателем КАК НДСИсчисляетсяНалоговымАгентом,
	|	Реквизиты.Руководитель КАК Исполнитель,
	|	Реквизиты.ЗаРуководителяНаОсновании КАК ИсполнительНаОсновании,
	|	Реквизиты.ОтпускПроизвел КАК ОтпускПроизвел,
	|	Реквизиты.ДоверенностьНомер КАК ДоверенностьНомер,
	|	Реквизиты.ДоверенностьДата КАК ДоверенностьДата,
	|	Реквизиты.ДоверенностьВыдана КАК ДоверенностьВыдана,
	|	Реквизиты.ДоверенностьЧерезКого КАК ДоверенностьЧерезКого,
	|	Реквизиты.ЗаЗаказчикаНаОсновании КАК ЗаЗаказчикаНаОсновании,
	|	ВЫБОР
	|		КОГДА НаличиеТоваров.Ссылка ЕСТЬ NULL
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК ЕстьТовары,
	|	Реквизиты.АдресДоставки КАК АдресДоставки,
	|	Реквизиты.СведенияОТранспортировкеИГрузе КАК СведенияОТранспортировкеИГрузе,
	|	Реквизиты.ОтветственныйЗаОформление КАК ОтветственныйЗаОформление,
	|	Реквизиты.СопроводительныеДокументы КАК СопроводительныеДокументы,
	|	Реквизиты.Перевозчик КАК Перевозчик,
	|	Реквизиты.ПеревозкаАвтотранспортом КАК ПеревозкаАвтотранспортом
	|ИЗ
	|	Документ.РеализацияТоваровУслуг КАК Реквизиты
	|		ЛЕВОЕ СОЕДИНЕНИЕ НаличиеТоваров КАК НаличиеТоваров
	|		ПО Реквизиты.Ссылка = НаличиеТоваров.Ссылка
	|ГДЕ
	|	Реквизиты.Ссылка = &ДокументОснование
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаДокумента.Ссылка КАК Ссылка,
	|	ТаблицаДокумента.ШтрихкодУпаковки КАК Штрихкод
	|ИЗ
	|	Документ.РеализацияТоваровУслуг.ШтрихкодыУпаковок КАК ТаблицаДокумента
	|ГДЕ
	|	ТаблицаДокумента.Ссылка = &ДокументОснование
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	РегистрСведенийРублевыеСуммыДокументовВВалюте.НомерСтрокиДокумента КАК НомерСтрокиДокумента,
	|	РегистрСведенийРублевыеСуммыДокументовВВалюте.ТабличнаяЧастьДокумента КАК ТабличнаяЧастьДокумента,
	|	РегистрСведенийРублевыеСуммыДокументовВВалюте.Всего КАК Всего,
	|	РегистрСведенийРублевыеСуммыДокументовВВалюте.НДС КАК НДС,
	|	РегистрСведенийРублевыеСуммыДокументовВВалюте.НалоговаяБазаНДС КАК НалоговаяБазаНДС
	|ПОМЕСТИТЬ РегистрСведенийРублевыеСуммыДокументовВВалюте
	|ИЗ
	|	РегистрСведений.РублевыеСуммыДокументовВВалюте КАК РегистрСведенийРублевыеСуммыДокументовВВалюте
	|ГДЕ
	|	РегистрСведенийРублевыеСуммыДокументовВВалюте.Регистратор = &ДокументОснование
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	НомерСтрокиДокумента,
	|	ТабличнаяЧастьДокумента
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	1 КАК НомерТабЧасти,
	|	ТаблицаТовары.НомерСтроки КАК НомерСтроки,
	|	ТаблицаТовары.Номенклатура КАК Товар,
	|	ТаблицаТовары.НоменклатураГосЗакупок КАК ТоварГосЗакупок,
	|	ТаблицаТовары.Номенклатура.Код КАК ТоварКод,
	|	ТаблицаТовары.Номенклатура.Артикул КАК ТоварАртикул,
	|	ТаблицаТовары.Номенклатура.НаименованиеПолное КАК ТоварНаименование,
	|	ТаблицаТовары.СтранаПроисхождения КАК СтранаПроисхождения,
	|	ТаблицаТовары.СтранаПроисхождения.НаименованиеПолное КАК ПредставлениеСтраны,
	|	ТаблицаТовары.НомерГТД КАК НомерГТД,
	|	ТаблицаТовары.НомерГТД.Представление КАК ПредставлениеГТД,
	|	ТаблицаТовары.НомерГТД.РегистрационныйНомер КАК РегистрационныйНомерТД,
	|	ВЫБОР
	|		КОГДА &ЭтоДоговорПоставкиГосЗакупок
	|			ТОГДА ТаблицаТовары.ЕдиницаИзмеренияГосЗакупок
	|		ИНАЧЕ ТаблицаТовары.ЕдиницаИзмерения
	|	КОНЕЦ КАК ЕдиницаИзмерения,
	|	ВЫБОР
	|		КОГДА &ЭтоДоговорПоставкиГосЗакупок
	|			ТОГДА ТаблицаТовары.КоличествоГосЗакупок
	|		ИНАЧЕ ТаблицаТовары.Количество
	|	КОНЕЦ КАК Количество,
	|	ВЫБОР
	|		КОГДА &ЭтоДоговорПоставкиГосЗакупок
	|			ТОГДА ТаблицаТовары.ЦенаГосЗакупок
	|		ИНАЧЕ ТаблицаТовары.Цена
	|	КОНЕЦ КАК Цена,
	|	ТаблицаТовары.ЦенаГосЗакупок КАК ЦенаГосЗакупок,
	|	ТаблицаТовары.Сумма КАК Сумма,
	|	ТаблицаТовары.СуммаНДС КАК СуммаНДС,
	|	ТаблицаТовары.СтавкаНДС КАК СтавкаНДС,
	|	ЛОЖЬ КАК ЭтоУслуга,
	|	ТаблицаТовары.Ссылка.СуммаВключаетНДС КАК СуммаВключаетНДС,
	|	ТаблицаТовары.Ссылка КАК Ссылка,
	|	ЕСТЬNULL(ТаблицаТовары.СчетУчета.Забалансовый, ЛОЖЬ) КАК ЭтоКомиссия,
	|	ЕСТЬNULL(РегистрСведенийРублевыеСуммыДокументовВВалюте.Всего, 0) КАК ВсегоРуб,
	|	ЕСТЬNULL(РегистрСведенийРублевыеСуммыДокументовВВалюте.НДС, 0) КАК НДСРуб,
	|	ЕСТЬNULL(РегистрСведенийРублевыеСуммыДокументовВВалюте.НалоговаяБазаНДС, 0) КАК СуммаБезНДСРуб,
	|	ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка) КАК КонтрагентСводныйСФ,
	|	НЕОПРЕДЕЛЕНО КАК ПериодичностьУслуги,
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.СтавкаНДС = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС0)
	|			ТОГДА ТаблицаТовары.КодТНВЭД
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.КлассификаторТНВЭД.ПустаяСсылка)
	|	КОНЕЦ КАК ТоварКодТНВЭД
	|ПОМЕСТИТЬ ТаблицаДокумента
	|ИЗ
	|	Документ.РеализацияТоваровУслуг.Товары КАК ТаблицаТовары
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведенийРублевыеСуммыДокументовВВалюте КАК РегистрСведенийРублевыеСуммыДокументовВВалюте
	|		ПО ТаблицаТовары.НомерСтроки = РегистрСведенийРублевыеСуммыДокументовВВалюте.НомерСтрокиДокумента
	|			И (РегистрСведенийРублевыеСуммыДокументовВВалюте.ТабличнаяЧастьДокумента = ЗНАЧЕНИЕ(Перечисление.ТабличныеЧастиДокументов.Товары))
	|			И (ТаблицаТовары.Ссылка.ВалютаДокумента <> &ВалютаРеглУчета)
	|ГДЕ
	|	ТаблицаТовары.Ссылка = &ДокументОснование
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	2,
	|	ТаблицаУслуги.НомерСтроки,
	|	ТаблицаУслуги.Номенклатура,
	|	ЗНАЧЕНИЕ(Справочник.НоменклатураГосЗакупок.ПустаяСсылка),
	|	ТаблицаУслуги.Номенклатура.Код,
	|	ТаблицаУслуги.Номенклатура.Артикул,
	|	ТаблицаУслуги.Содержание,
	|	"""",
	|	"""",
	|	"""",
	|	"""",
	|	"""",
	|	ТаблицаУслуги.Номенклатура.ЕдиницаИзмерения,
	|	ТаблицаУслуги.Количество,
	|	ТаблицаУслуги.Цена,
	|	0,
	|	ТаблицаУслуги.Сумма,
	|	ТаблицаУслуги.СуммаНДС,
	|	ТаблицаУслуги.СтавкаНДС,
	|	ИСТИНА,
	|	ТаблицаУслуги.Ссылка.СуммаВключаетНДС,
	|	ТаблицаУслуги.Ссылка,
	|	ЛОЖЬ,
	|	ЕСТЬNULL(РегистрСведенийРублевыеСуммыДокументовВВалюте.Всего, 0),
	|	ЕСТЬNULL(РегистрСведенийРублевыеСуммыДокументовВВалюте.НДС, 0),
	|	ЕСТЬNULL(РегистрСведенийРублевыеСуммыДокументовВВалюте.НалоговаяБазаНДС, 0),
	|	ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка),
	|	НЕОПРЕДЕЛЕНО,
	|	ЗНАЧЕНИЕ(Справочник.КлассификаторТНВЭД.ПустаяСсылка)
	|ИЗ
	|	Документ.РеализацияТоваровУслуг.Услуги КАК ТаблицаУслуги
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведенийРублевыеСуммыДокументовВВалюте КАК РегистрСведенийРублевыеСуммыДокументовВВалюте
	|		ПО ТаблицаУслуги.НомерСтроки = РегистрСведенийРублевыеСуммыДокументовВВалюте.НомерСтрокиДокумента
	|			И (РегистрСведенийРублевыеСуммыДокументовВВалюте.ТабличнаяЧастьДокумента = ЗНАЧЕНИЕ(Перечисление.ТабличныеЧастиДокументов.Услуги))
	|			И (ТаблицаУслуги.Ссылка.ВалютаДокумента <> &ВалютаРеглУчета)
	|ГДЕ
	|	ТаблицаУслуги.Ссылка = &ДокументОснование
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	3,
	|	ТаблицаАгентскиеУслуги.НомерСтроки,
	|	ТаблицаАгентскиеУслуги.Номенклатура,
	|	ЗНАЧЕНИЕ(Справочник.НоменклатураГосЗакупок.ПустаяСсылка),
	|	ТаблицаАгентскиеУслуги.Номенклатура.Код,
	|	ТаблицаАгентскиеУслуги.Номенклатура.Артикул,
	|	ТаблицаАгентскиеУслуги.Содержание,
	|	"""",
	|	"""",
	|	"""",
	|	"""",
	|	"""",
	|	ТаблицаАгентскиеУслуги.Номенклатура.ЕдиницаИзмерения,
	|	ТаблицаАгентскиеУслуги.Количество,
	|	ТаблицаАгентскиеУслуги.Цена,
	|	0,
	|	ТаблицаАгентскиеУслуги.Сумма,
	|	ТаблицаАгентскиеУслуги.СуммаНДС,
	|	ТаблицаАгентскиеУслуги.СтавкаНДС,
	|	ИСТИНА,
	|	ТаблицаАгентскиеУслуги.Ссылка.СуммаВключаетНДС,
	|	ТаблицаАгентскиеУслуги.Ссылка,
	|	ИСТИНА,
	|	ЕСТЬNULL(РегистрСведенийРублевыеСуммыДокументовВВалюте.Всего, 0),
	|	ЕСТЬNULL(РегистрСведенийРублевыеСуммыДокументовВВалюте.НДС, 0),
	|	ЕСТЬNULL(РегистрСведенийРублевыеСуммыДокументовВВалюте.НалоговаяБазаНДС, 0),
	|	ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка),
	|	НЕОПРЕДЕЛЕНО,
	|	ЗНАЧЕНИЕ(Справочник.КлассификаторТНВЭД.ПустаяСсылка)
	|ИЗ
	|	Документ.РеализацияТоваровУслуг.АгентскиеУслуги КАК ТаблицаАгентскиеУслуги
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведенийРублевыеСуммыДокументовВВалюте КАК РегистрСведенийРублевыеСуммыДокументовВВалюте
	|		ПО ТаблицаАгентскиеУслуги.НомерСтроки = РегистрСведенийРублевыеСуммыДокументовВВалюте.НомерСтрокиДокумента
	|			И (РегистрСведенийРублевыеСуммыДокументовВВалюте.ТабличнаяЧастьДокумента = ЗНАЧЕНИЕ(Перечисление.ТабличныеЧастиДокументов.АгентскиеУслуги))
	|			И (ТаблицаАгентскиеУслуги.Ссылка.ВалютаДокумента <> &ВалютаРеглУчета)
	|ГДЕ
	|	ТаблицаАгентскиеУслуги.Ссылка = &ДокументОснование";
	
	Возврат ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();

КонецФункции

&Вместо("ТекстЗапросаРеализованнаяНоменклатура")
Функция Базар_ТекстЗапросаРеализованнаяНоменклатура(НомераТаблиц) Экспорт
	НомераТаблиц.Вставить("ВТ_РеализованнаяНоменклатура", НомераТаблиц.Количество());
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ВложенныйЗапрос.СчетНаОплату КАК СчетНаОплату,
	|	ВложенныйЗапрос.ЭтоУслуга КАК ЭтоУслуга,
	|	ВложенныйЗапрос.Номенклатура КАК Номенклатура,
	|	ВложенныйЗапрос.НоменклатураГосЗакупок КАК НоменклатураГосЗакупок,
	|	ВложенныйЗапрос.Содержание КАК Содержание,
	|	СУММА(ВложенныйЗапрос.Количество) КАК Количество,
	|	ВложенныйЗапрос.КоличествоГосЗакупок КАК КоличествоГосЗакупок,
	|	ВложенныйЗапрос.ЦенаГосЗакупок КАК ЦенаГосЗакупок
	|ПОМЕСТИТЬ ВТ_РеализованнаяНоменклатура
	|ИЗ
	|	(ВЫБРАТЬ
	|		ВТ_РеализацииПоСчету.СчетНаОплату КАК СчетНаОплату,
	|		ЛОЖЬ КАК ЭтоУслуга,
	|		РеализованныеТовары.Номенклатура КАК Номенклатура,
	|		РеализованныеТовары.НоменклатураГосЗакупок КАК НоменклатураГосЗакупок,
	|		"""" КАК Содержание,
	|		РеализованныеТовары.Количество КАК Количество,
	|		РеализованныеТовары.КоличествоГосЗакупок КАК КоличествоГосЗакупок,
	|		РеализованныеТовары.ЦенаГосЗакупок КАК ЦенаГосЗакупок
	|	ИЗ
	|		ВТ_РеализацииПоСчету КАК ВТ_РеализацииПоСчету
	|			ЛЕВОЕ СОЕДИНЕНИЕ Документ.РеализацияТоваровУслуг.Товары КАК РеализованныеТовары
	|			ПО ВТ_РеализацииПоСчету.РеализацияТоваров = РеализованныеТовары.Ссылка
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ВТ_РеализацииПоСчету.СчетНаОплату,
	|		ИСТИНА,
	|		РеализованныеУслуги.Номенклатура,
	|		ЗНАЧЕНИЕ(Справочник.НоменклатураГосЗакупок.ПустаяСсылка),
	|		РеализованныеУслуги.Содержание,
	|		ВЫБОР
	|			КОГДА РеализованныеУслуги.Количество = 0
	|				ТОГДА 1
	|			ИНАЧЕ РеализованныеУслуги.Количество
	|		КОНЕЦ,
	|		0,
	|		0
	|	ИЗ
	|		ВТ_РеализацииПоСчету КАК ВТ_РеализацииПоСчету
	|			ЛЕВОЕ СОЕДИНЕНИЕ Документ.РеализацияТоваровУслуг.Услуги КАК РеализованныеУслуги
	|			ПО ВТ_РеализацииПоСчету.РеализацияТоваров = РеализованныеУслуги.Ссылка
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ВТ_РеализацииПоСчету.СчетНаОплату,
	|		ИСТИНА,
	|		РеализованныеАгентскиеУслуги.Номенклатура,
	|		ЗНАЧЕНИЕ(Справочник.НоменклатураГосЗакупок.ПустаяСсылка),
	|		РеализованныеАгентскиеУслуги.Содержание,
	|		ВЫБОР
	|			КОГДА РеализованныеАгентскиеУслуги.Количество = 0
	|				ТОГДА 1
	|			ИНАЧЕ РеализованныеАгентскиеУслуги.Количество
	|		КОНЕЦ,
	|		0,
	|		0
	|	ИЗ
	|		ВТ_РеализацииПоСчету КАК ВТ_РеализацииПоСчету
	|			ЛЕВОЕ СОЕДИНЕНИЕ Документ.РеализацияТоваровУслуг.АгентскиеУслуги КАК РеализованныеАгентскиеУслуги
	|			ПО ВТ_РеализацииПоСчету.РеализацияТоваров = РеализованныеАгентскиеУслуги.Ссылка) КАК ВложенныйЗапрос
	|
	|СГРУППИРОВАТЬ ПО
	|	ВложенныйЗапрос.СчетНаОплату,
	|	ВложенныйЗапрос.ЭтоУслуга,
	|	ВложенныйЗапрос.Номенклатура,
	|	ВложенныйЗапрос.Содержание,
	|	ВложенныйЗапрос.НоменклатураГосЗакупок,
	|	ВложенныйЗапрос.КоличествоГосЗакупок,
	|	ВложенныйЗапрос.ЦенаГосЗакупок";
	
	Возврат ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();
КонецФункции

&Вместо("ТекстЗапросаТоварыУслугиКРеализацииПоСчету")
Функция Базар_ТекстЗапросаТоварыУслугиКРеализацииПоСчету(НомераТаблиц)
	НомераТаблиц.Вставить("РеализованнаяНоменклатура", НомераТаблиц.Количество());
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ВТ_РеализованнаяНоменклатура.СчетНаОплату КАК СчетНаОплату,
	|	ВТ_РеализованнаяНоменклатура.ЭтоУслуга КАК ЭтоУслуга,
	|	ВТ_РеализованнаяНоменклатура.Номенклатура КАК Номенклатура,
	|	ВТ_РеализованнаяНоменклатура.НоменклатураГосЗакупок КАК НоменклатураГосЗакупок,
	|	ВТ_РеализованнаяНоменклатура.Содержание КАК Содержание,
	|	СУММА(ВТ_РеализованнаяНоменклатура.Количество) КАК Количество,
	|	ВТ_РеализованнаяНоменклатура.КоличествоГосЗакупок КАК КоличествоГосЗакупок,
	|	ВТ_РеализованнаяНоменклатура.ЦенаГосЗакупок КАК ЦенаГосЗакупок
	|ИЗ
	|	ВТ_РеализованнаяНоменклатура КАК ВТ_РеализованнаяНоменклатура
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТ_РеализованнаяНоменклатура.СчетНаОплату,
	|	ВТ_РеализованнаяНоменклатура.ЭтоУслуга,
	|	ВТ_РеализованнаяНоменклатура.Содержание,
	|	ВТ_РеализованнаяНоменклатура.Номенклатура,
	|	ВТ_РеализованнаяНоменклатура.НоменклатураГосЗакупок,
	|	ВТ_РеализованнаяНоменклатура.КоличествоГосЗакупок,
	|	ВТ_РеализованнаяНоменклатура.ЦенаГосЗакупок";
	Возврат ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();
КонецФункции

&Вместо("ТекстЗапросаРеквизитыСчета")
Функция Базар_ТекстЗапросаРеквизитыСчета(НомераТаблиц)
	НомераТаблиц.Вставить("ВТ_РеализацииПоСчету", НомераТаблиц.Количество());
	НомераТаблиц.Вставить("РеквизитыСчета", НомераТаблиц.Количество());
	НомераТаблиц.Вставить("ТоварыУслуги", НомераТаблиц.Количество());
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	РеализацияТоваровУслуг.Ссылка КАК РеализацияТоваров,
	|	РеализацияТоваровУслуг.СчетНаОплатуПокупателю КАК СчетНаОплату
	|ПОМЕСТИТЬ ВТ_РеализацииПоСчету
	|ИЗ
	|	Документ.РеализацияТоваровУслуг КАК РеализацияТоваровУслуг
	|ГДЕ
	|	РеализацияТоваровУслуг.Ссылка В(&РеализацииПоСчету)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	РеквизитыСчета.СуммаВключаетНДС КАК СуммаВключаетНДС,
	|	РеквизитыСчета.СуммаСкидки КАК СуммаСкидки
	|ИЗ
	|	Документ.СчетНаОплатуПокупателю КАК РеквизитыСчета
	|ГДЕ
	|	РеквизитыСчета.Ссылка = &СчетНаОплату
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЕСТЬNULL(ТоварыУслуги.Номенклатура.Услуга, ИСТИНА) КАК ЭтоУслуга,
	|	ТоварыУслуги.Номенклатура КАК Номенклатура,
	|	ТоварыУслуги.НоменклатураГосЗакупок КАК НоменклатураГосЗакупок,
	|	ТоварыУслуги.Номенклатура.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	ТоварыУслуги.НоменклатураГосЗакупок.ЕдиницаИзмеренияГосЗакупок КАК ЕдиницаИзмеренияГосЗакупок,
	|	ТоварыУслуги.КоэффициентГосЗакупок КАК КоэффициентГосЗакупок,
	|	ТоварыУслуги.Номенклатура.НомерГТД КАК НомерГТД,
	|	ТоварыУслуги.Номенклатура.СтранаПроисхождения КАК СтранаПроисхождения,
	|	ТоварыУслуги.Номенклатура.КодТНВЭД КАК КодТНВЭД,
	|	ТоварыУслуги.Содержание КАК Содержание,
	|	1 КАК Коэффициент,
	|	ТоварыУслуги.Количество КАК Количество,
	|	ТоварыУслуги.КоличествоГосЗакупок КАК КоличествоГосЗакупок,
	|	ТоварыУслуги.Цена КАК Цена,
	|	ТоварыУслуги.ЦенаГосЗакупок КАК ЦенаГосЗакупок,
	|	ТоварыУслуги.Сумма КАК Сумма,
	|	ТоварыУслуги.СуммаСкидки КАК СуммаСкидки,
	|	ТоварыУслуги.СтавкаНДС КАК СтавкаНДС,
	|	ТоварыУслуги.СуммаНДС КАК СуммаНДС
	|ИЗ
	|	Документ.СчетНаОплатуПокупателю.Товары КАК ТоварыУслуги
	|ГДЕ
	|	ТоварыУслуги.Ссылка = &СчетНаОплату
	|
	|УПОРЯДОЧИТЬ ПО
	|	ТоварыУслуги.НомерСтроки";
	
	Возврат ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();
КонецФункции

&Вместо("ПолучитьТаблицуСведенийТОРГ12")
Функция Базар_ПолучитьТаблицуСведенийТОРГ12(Знач МассивДокументов, Знач ВключатьУслуги) Экспорт
	
	ТаблицаСведенийДокументов = ПродолжитьВызов(МассивДокументов, ВключатьУслуги);
		
	Для Каждого ДанныеДокумента из ТаблицаСведенийДокументов цикл
		ТаблицаТовары = ДанныеДокумента.Документ.Товары.Выгрузить();
		ТаблицаДокумента = ДанныеДокумента.ТаблицаДокумента;
		ТаблицаДокумента.Колонки.Добавить("СертификатыДекларации");
		
		ВыборкаСопрДокументов = СопроводительныеДокументыСервер.ВыборкаСопроводительныхДокументов(ТаблицаТовары.ВыгрузитьКолонку("Номенклатура"), ДанныеДокумента.ДатаДокумента);
		
		Если ДанныеДокумента.Договор.ОбособленныйУчетМногооботнойТары тогда
			МногооборотнаяТараСервер.ДобавитьВТаблицуПечатиРеализацииМногооборотнуюТару(ДанныеДокумента.Документ, ТаблицаДокумента);
		КонецЕсли;
		
		Для Каждого СтрокаТаблицы из ТаблицаДокумента цикл
			
			Если НЕ ЗначениеЗаполнено(СтрокаТаблицы.НомерСтроки) тогда
				Продолжить;
			КонецЕсли;
			
			СтрокаТовары = ТаблицаТовары.Найти(СтрокаТаблицы.НомерСтроки, "НомерСтроки");
			
			Если НЕ СтрокаТовары = Неопределено тогда
				СтрокаТаблицы.СертификатыДекларации = СопроводительныеДокументыСервер.ТекстСопроводительныеДокументыНоменклатуры(ДанныеДокумента.Договор, СтрокаТовары.Номенклатура, ДанныеДокумента.ДатаДокумента, ВыборкаСопрДокументов);
			Иначе
				Продолжить;
			КонецЕсли;
			
			Если ГосЗакупкиСервер.ЭтоДоговорПоставкиГосЗакупок(ДанныеДокумента.Договор) тогда
				СтрокаТаблицы.Товар = СтрокаТовары.НоменклатураГосЗакупок;
				СтрокаТаблицы.ТоварНаименование = ГосЗакупкиСервер.ПечатноеНаименованиеНоменклатурыГосЗакупок(ДанныеДокумента.Договор, СтрокаТовары.НоменклатураГосЗакупок, СтрокаТовары.ЦенаГосЗакупок);
				СтрокаТаблицы.ЕдиницаИзмерения = СтрокаТовары.ЕдиницаИзмеренияГосЗакупок;
				СтрокаТаблицы.ЕдиницаИзмеренияКод = СтрокаТовары.ЕдиницаИзмеренияГосЗакупок.Код;
				СтрокаТаблицы.ЕдиницаИзмеренияНаименование = СтрокаТовары.ЕдиницаИзмеренияГосЗакупок.Наименование;
				СтрокаТаблицы.ВидУпаковки = СтрокаТовары.ЕдиницаИзмеренияГосЗакупок;
				СтрокаТаблицы.ВидУпаковкиКод = СтрокаТовары.ЕдиницаИзмеренияГосЗакупок.Код;
				СтрокаТаблицы.ВидУпаковкиНаименование = СтрокаТовары.ЕдиницаИзмеренияГосЗакупок.Наименование;
				СтрокаТаблицы.Количество = СтрокаТовары.КоличествоГосЗакупок;
				СтрокаТаблицы.Цена = СтрокаТаблицы.СуммаБезНДС / СтрокаТовары.КоличествоГосЗакупок;
			Иначе
				СтрокаТаблицы.Товар = СтрокаТовары.Номенклатура;
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
	
	Возврат ТаблицаСведенийДокументов;
	
КонецФункции

&Вместо("ДобавитьКомандыПечати")
// Заполняет список команд печати.
// 
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати
//
Процедура Базар_ДобавитьКомандыПечати(КомандыПечати) Экспорт
	
	// Товарная накладная (ТОРГ-12)
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "ТОРГ12_БезУслуг";
	КомандаПечати.Представление = НСтр("ru = 'Товарная накладная (ТОРГ-12)'");
	КомандаПечати.Обработчик    = "УправлениеПечатьюБПКлиент.ВыполнитьКомандуПечати";
	КомандаПечати.СписокФорм    = "ФормаСписка,Базар_ФормаСписка,ФормаВыбора,Базар_ФормаВыбора,ФормаДокументаОбщая,ФормаДокументаТовары,Базар_ФормаДокументаТовары";
	КомандаПечати.Порядок = 10;
	
	// Товарная накладная (ТОРГ-12) с услугами
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "ТОРГ12";
	КомандаПечати.Представление = НСтр("ru = 'Товарная накладная (ТОРГ-12) с услугами'");
	КомандаПечати.Обработчик    = "УправлениеПечатьюБПКлиент.ВыполнитьКомандуПечати";
	КомандаПечати.СписокФорм    = "ФормаСписка,Базар_ФормаСписка,ФормаВыбора,Базар_ФормаВыбора,ФормаДокументаОбщая";
	КомандаПечати.Порядок = 20;
	
	// Акт об оказании услуг
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "Акт";
	КомандаПечати.Представление = НСтр("ru = 'Акт об оказании услуг'");
	КомандаПечати.Обработчик    = "УправлениеПечатьюБПКлиент.ВыполнитьКомандуПечати";
	КомандаПечати.СписокФорм    = "ФормаСписка,Базар_ФормаСписка,ФормаВыбора,Базар_ФормаВыбора,ФормаДокументаОбщая,ФормаДокументаУслуги";
	КомандаПечати.Порядок = 30;
	
	// Акт на передачу прав
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "АктНаПередачуПрав";
	КомандаПечати.Представление = НСтр("ru = 'Акт на передачу прав'");
	КомандаПечати.Обработчик    = "УправлениеПечатьюБПКлиент.ВыполнитьКомандуПечати";
	КомандаПечати.СписокФорм    = "ФормаСписка,Базар_ФормаСписка,ФормаВыбора,Базар_ФормаВыбора,ФормаДокументаОбщая,ФормаДокументаТовары,Базар_ФормаДокументаТовары,ФормаДокументаУслуги";
	КомандаПечати.ФункциональныеОпции = "ИспользоватьПередачуПрав";
	КомандаПечати.Порядок = 40;
	
	Если ПравоДоступа("Чтение", Метаданные.Документы.СчетФактураВыданный) Тогда
		// Счет-фактура
		КомандаПечати = КомандыПечати.Добавить();
		КомандаПечати.Идентификатор = "СчетФактура";
		КомандаПечати.Представление = НСтр("ru = 'Счет-фактура'");
		КомандаПечати.Обработчик    = "УчетНДСКлиент.ВыполнитьКомандуПечатиСчетовФактур";
		КомандаПечати.ФункциональныеОпции = "ИспользуетсяОСНО,ИспользуетсяНДФЛИП,ОсуществляетсяЗакупкаТоваровУслугДляКомитентов,ОсуществляетсяРеализацияТоваровУслугКомитентов,ВыписыватьСчетаФактурыСпецРежимы,УплачиватьНДССпецРежимы,ВедетсяУчетИмпортныхТоваров";
		КомандаПечати.ДополнительныеПараметры.Вставить("ИдентификаторВКомплекте","СчетФактураКомплект");
		КомандаПечати.Порядок = 50;
	КонецЕсли;
	
	// Универсальный передаточный документ
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "УниверсальныйПередаточныйДокумент";
	КомандаПечати.Представление = НСтр("ru = 'Универсальный передаточный документ (УПД)'");
	КомандаПечати.Обработчик    = "УчетНДСКлиент.ВыполнитьКомандуПечатиУниверсальныхПередаточныхДокументов";
	КомандаПечати.ДополнительныеПараметры.Вставить("ИдентификаторВКомплекте","УниверсальныйПередаточныйДокументКомплект");
	КомандаПечати.Порядок = 60;
	
	// Транспортная накладная
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.МенеджерПечати = "Обработка.ПечатьТранспортнойНакладной";
	КомандаПечати.Идентификатор = "ТранспортнаяНакладная";
	КомандаПечати.Представление = НСтр("ru = 'Транспортная накладная'");
	КомандаПечати.ФункциональныеОпции = "ИспользоватьДоставкуАвтотранспортом";
	КомандаПечати.Обработчик    = "УправлениеПечатьюБПКлиент.ВыполнитьКомандуПечати";
	КомандаПечати.СписокФорм    = "ФормаСписка,Базар_ФормаСписка,ФормаВыбора,Базар_ФормаВыбора,ФормаДокументаОбщая,ФормаДокументаТовары,Базар_ФормаДокументаТовары";
	КомандаПечати.Порядок = 70;
	
	// Товарно-транспортная накладная (1-Т)
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.МенеджерПечати = "Обработка.ПечатьТТН";
	КомандаПечати.Идентификатор = "ТТН";
	КомандаПечати.Представление = НСтр("ru = 'Товарно-транспортная накладная (1-Т)'");
	КомандаПечати.ФункциональныеОпции = "ИспользоватьДоставкуАвтотранспортом";
	КомандаПечати.Обработчик    = "УправлениеПечатьюБПКлиент.ВыполнитьКомандуПечати";
	КомандаПечати.СписокФорм    = "ФормаСписка,Базар_ФормаСписка,ФормаВыбора,Базар_ФормаВыбора,ФормаДокументаОбщая,ФормаДокументаТовары,Базар_ФормаДокументаТовары";	
	КомандаПечати.Порядок = 80;
	
	// Накладная на отпуск материалов на сторону (М-15)
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "М15";
	КомандаПечати.Представление = НСтр("ru = 'Накладная на отпуск материалов на сторону (М-15)'");
	КомандаПечати.Обработчик    = "УправлениеПечатьюБПКлиент.ВыполнитьКомандуПечати";
	КомандаПечати.СписокФорм    = "ФормаСписка,Базар_ФормаСписка,ФормаВыбора,Базар_ФормаВыбора,ФормаДокументаОбщая,ФормаДокументаТовары,Базар_ФормаДокументаТовары";
	КомандаПечати.Порядок = 90;
	
	// Расходная накладная
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "Накладная";
	КомандаПечати.Представление = НСтр("ru = 'Расходная накладная'");
	КомандаПечати.Обработчик    = "УправлениеПечатьюБПКлиент.ВыполнитьКомандуПечати";
	КомандаПечати.СписокФорм    = "ФормаСписка,Базар_ФормаСписка,ФормаВыбора,Базар_ФормаВыбора,ФормаДокументаОбщая,ФормаДокументаТовары,Базар_ФормаДокументаТовары";
	КомандаПечати.Порядок = 100;
	
	Если ПравоДоступа("Чтение", Метаданные.Документы.СчетНаОплатуПокупателю) Тогда
		// Счет на оплату
		КомандаПечати = КомандыПечати.Добавить();
		КомандаПечати.Идентификатор  = "СчетЗаказ";
		КомандаПечати.МенеджерПечати = "Обработка.ПечатьСчетаНаОплату";
		КомандаПечати.Представление  = НСтр("ru = 'Счет на оплату'");
		КомандаПечати.СписокФорм     = "ФормаСписка,Базар_ФормаСписка,ФормаВыбора,Базар_ФормаВыбора";
		КомандаПечати.ДополнительныеПараметры.Вставить("ИдентификаторВКомплекте","СчетЗаказКомплект");
		КомандаПечати.ДополнительныеПараметры.Вставить("СокращенноеСообщениеОбОшибке", Ложь);
		КомандаПечати.Порядок        = 110;
		// Счет на оплату
		КомандаПечати = КомандыПечати.Добавить();
		КомандаПечати.Идентификатор  = "СчетЗаказ";
		КомандаПечати.МенеджерПечати = "Обработка.ПечатьСчетаНаОплату";
		КомандаПечати.Представление  = НСтр("ru = 'Счет на оплату'");
		КомандаПечати.СписокФорм     = "ФормаДокументаОбщая,ФормаДокументаТовары,Базар_ФормаДокументаТовары,ФормаДокументаУслуги";
		КомандаПечати.ДополнительныеПараметры.Вставить("ИдентификаторВКомплекте","СчетЗаказКомплект");
		КомандаПечати.ДополнительныеПараметры.Вставить("СокращенноеСообщениеОбОшибке", Истина);
		КомандаПечати.Порядок        = 110;
	КонецЕсли;
	
	Если ПравоДоступа("Использование", Метаданные.Обработки.ПечатьРублевыхСуммДокументовВВалюте) Тогда
		// Справка-расчет "Рублевые суммы документа в валюте"
		КомандаПечати = КомандыПечати.Добавить();
		КомандаПечати.МенеджерПечати = "Обработка.ПечатьРублевыхСуммДокументовВВалюте";
		КомандаПечати.Идентификатор = "РублевыеСуммыДокументаВВалюте";
		КомандаПечати.Представление = НСтр("ru = 'Справка-расчет ""Рублевые суммы документа в валюте""'");
		КомандаПечати.Обработчик    = "УправлениеПечатьюБПКлиент.ВыполнитьКомандуПечати";
		КомандаПечати.ФункциональныеОпции = "ИспользоватьВалютныйУчет";
		КомандаПечати.ДополнительныеПараметры.Вставить("НеВыводитьВКомплекте",Истина);
		КомандаПечати.Порядок = 130;
	КонецЕсли;
	
	Если ПравоДоступа("Чтение", Метаданные.Справочники.Контрагенты) Тогда
		// Печать конвертов
		КомандаПечати = КомандыПечати.Добавить();
		КомандаПечати.Идентификатор = "Конверт";
		КомандаПечати.Представление = НСтр("ru = 'Конверт'");
		КомандаПечати.Обработчик    = "УправлениеПечатьюБПКлиент.ВыполнитьКомандуПечатиКонверта";
		КомандаПечати.ДополнительныеПараметры.Вставить("НеВыводитьВКомплекте", Истина);
		КомандаПечати.Порядок       = 140;
	КонецЕсли;
	
	// Комплект документов
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Обработчик = "УправлениеПечатьюБПКлиент.ПечатьКомплектаДокументов";
	КомандаПечати.Идентификатор = "КомплектДокументов";
	КомандаПечати.Представление = НСтр("ru = 'Комплект документов'");
	КомандаПечати.СписокФорм    = "ФормаСписка,Базар_ФормаСписка,ФормаВыбора,Базар_ФормаВыбора,ФормаДокументаОбщая,ФормаДокументаТовары,Базар_ФормаДокументаТовары,ФормаДокументаУслуги";
	КомандаПечати.ДополнительныеПараметры.Вставить("НеВыводитьВКомплекте",Истина);
	КомандаПечати.Порядок = 150;
	
	Если ПравоДоступа("Использование", Метаданные.Отчеты.РеестрДокументов) Тогда
		// Реестр документов
		КомандаПечати = КомандыПечати.Добавить();
		КомандаПечати.Идентификатор = "Реестр";
		КомандаПечати.Представление = НСтр("ru = 'Реестр документов'");
		КомандаПечати.ЗаголовокФормы= НСтр("ru = 'Реестр документов ""Реализация (акт, накладная)""'");
		КомандаПечати.Обработчик    = "УправлениеПечатьюБПКлиент.ВыполнитьКомандуПечатиРеестраДокументов";
		КомандаПечати.СписокФорм    = "ФормаСписка,Базар_ФормаСписка";
		КомандаПечати.ДополнительныеПараметры.Вставить("НеВыводитьВКомплекте",Истина);
		КомандаПечати.Порядок       = 160;
	КонецЕсли;
	
КонецПроцедуры

&Вместо("ПолучитьТекстЗапросаДляФормированияПечатнойФормыТранспортнойНакладной")
Функция Базар_ПолучитьТекстЗапросаДляФормированияПечатнойФормыТранспортнойНакладной()
	
ТекстЗапроса =
	"ВЫБРАТЬ
	|	РеализацияТоваровУслуг.Ссылка,
	|	РеализацияТоваровУслуг.Дата,
	|	РеализацияТоваровУслуг.Номер,
	|	РеализацияТоваровУслуг.Организация,
	|	ВЫБОР
	|		КОГДА РеализацияТоваровУслуг.Грузополучатель = ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
	|			ТОГДА РеализацияТоваровУслуг.Контрагент
	|		ИНАЧЕ РеализацияТоваровУслуг.Грузополучатель
	|	КОНЕЦ КАК Грузополучатель,
	|	ВЫБОР
	|		КОГДА РеализацияТоваровУслуг.Грузоотправитель = ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
	|			ТОГДА РеализацияТоваровУслуг.Организация
	|		ИНАЧЕ РеализацияТоваровУслуг.Грузоотправитель
	|	КОНЕЦ КАК Грузоотправитель,
	|	ВЫБОР
	|		КОГДА РеализацияТоваровУслуг.Перевозчик = ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
	|			ТОГДА РеализацияТоваровУслуг.Организация
	|		ИНАЧЕ РеализацияТоваровУслуг.Перевозчик
	|	КОНЕЦ КАК Перевозчик,
	|	РеализацияТоваровУслуг.Организация КАК Руководители,
	|	РеализацияТоваровУслуг.Контрагент КАК Покупатель,
	|	РеализацияТоваровУслуг.Контрагент КАК Контрагент,
	|	РеализацияТоваровУслуг.Контрагент КАК ЗаказчикПеревозок,
	|	РеализацияТоваровУслуг.ДоговорКонтрагента.Представление КАК Основание,
	|	РеализацияТоваровУслуг.АдресДоставки,
	|	РеализацияТоваровУслуг.КраткоеНаименованиеГруза,
	|	РеализацияТоваровУслуг.СопроводительныеДокументы,
	|	РеализацияТоваровУслуг.Водитель,
	|	РеализацияТоваровУслуг.ВодительскоеУдостоверение,
	|	РеализацияТоваровУслуг.АвтомобильСсылка КАК Автомобиль,
	|	РеализацияТоваровУслуг.МаркаАвтомобиля,
	|	РеализацияТоваровУслуг.РегистрационныйЗнакАвтомобиля,
	|	РеализацияТоваровУслуг.ОтпускПроизвел
	|ИЗ
	|	Документ.РеализацияТоваровУслуг КАК РеализацияТоваровУслуг
	|ГДЕ
	|	РеализацияТоваровУслуг.Ссылка В(&МассивДокументов)";
		
	Возврат ТекстЗапроса;	
КонецФункции
