
&После("ОбработкаПроведения")
Процедура Базар_ОбработкаПроведения(Отказ, РежимПроведения)

	Если Отказ тогда
		Возврат;
	КонецЕсли;
	
	СписокОшибокПриПроведении = Неопределено;
	ГосЗакупкиСервер.ОбработкаПроведенияГосЗакупки(ЭтотОбъект, СписокОшибокПриПроведении, Отказ);
	
	ОбщегоНазначенияКлиентСервер.СообщитьОшибкиПользователю(СписокОшибокПриПроведении, Отказ);
	
	ДвиженияЦеныПродажКонтрагентов(Отказ);
	ДвиженияТранспортнаяЛогистикаДоставка(Отказ);
	
КонецПроцедуры

&После("ОбработкаЗаполнения")
Процедура Базар_ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	
	ДокументОстнование = Неопределено;
	Если ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.СчетНаОплатуПокупателю") тогда
		ДокументОстнование = ДанныеЗаполнения;
		ДоговорКонтрагента = ДокументОстнование.ДоговорКонтрагента;
		Дата               = ДокументОстнование.Дата;
	КонецЕсли;
	
	Если ТипЗнч(ДанныеЗаполнения) = Тип("Структура") тогда
		Если ДанныеЗаполнения.Свойство("Основание") тогда
			Если ТипЗнч(ДанныеЗаполнения.Основание) = Тип("ДокументСсылка.СчетНаОплатуПокупателю") тогда
				ДокументОстнование = ДанныеЗаполнения.Основание;
			КонецЕсли;
		КонецЕсли;
		Если ДанныеЗаполнения.Свойство("Дата") тогда
			Дата = ДанныеЗаполнения.Дата;
		КонецЕсли;
		
		Если НЕ ЗначениеЗаполнено(ДоговорКонтрагента) тогда
			Если ДанныеЗаполнения.Свойство("ДоговорКонтрагента") тогда
				ДоговорКонтрагента = ДанныеЗаполнения.ДоговорКонтрагента;
			КонецЕсли;
		КонецЕсли;
		
	КонецЕсли;
	
	Если ДокументОстнование = Неопределено тогда
		Возврат;
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(Склад) тогда
		СистемныеНастройкиБазар = ОбщегоНазначенияБазарСервер.СистемныеНастройкиБазар(Дата);
		Если ЗначениеЗаполнено(СистемныеНастройкиБазар.СкладОтгрузки) тогда
			Склад = СистемныеНастройкиБазар.СкладОтгрузки;
		КонецЕсли;
		Если ЗначениеЗаполнено(СистемныеНастройкиБазар.ТипЦенПродажи) И НЕ ЗначениеЗаполнено(ТипЦен) тогда
			ТипЦен = СистемныеНастройкиБазар.ТипЦенПродажи;
		КонецЕсли;
	КонецЕсли;
	
	ЭтоДоговорПоставкиГосЗакупок = ГосЗакупкиСервер.ЭтоДоговорПоставкиГосЗакупок(ДоговорКонтрагента);
	
	Если ЗначениеЗаполнено(ТипЦен) И ЭтоДоговорПоставкиГосЗакупок тогда
		ТипЦен = ПредопределенноеЗначение("Справочник.ТипыЦенНоменклатуры.ПустаяСсылка");
	КонецЕсли;
	
	ДанныеТранспортнойЛогистики = ТранспортнаяЛогистикаСервер.ДанныеТранспортнойЛогистики(ЭтотОбъект, Неопределено, ДокументОстнование);
	ЗаполнитьЗначенияСвойств(ЭтотОбъект, ДанныеТранспортнойЛогистики);
	
КонецПроцедуры

&После("ПриКопировании")
Процедура Базар_ПриКопировании(ОбъектКопирования)
	
	Если НЕ ЗначениеЗаполнено(Склад) тогда
		СистемныеНастройкиБазар = ОбщегоНазначенияБазарСервер.СистемныеНастройкиБазар(Дата);
		Если ЗначениеЗаполнено(СистемныеНастройкиБазар.СкладОтгрузки) тогда
			Склад = СистемныеНастройкиБазар.СкладОтгрузки;
		КонецЕсли;
		Если ЗначениеЗаполнено(СистемныеНастройкиБазар.ТипЦенПродажи) И НЕ ЗначениеЗаполнено(ТипЦен) тогда
			ТипЦен = СистемныеНастройкиБазар.ТипЦенПродажи;
		КонецЕсли;
	КонецЕсли;
	
	ДанныеТранспортнойЛогистики = ТранспортнаяЛогистикаСервер.ДанныеТранспортнойЛогистики(ЭтотОбъект, Неопределено, ОбъектКопирования);
	ЗаполнитьЗначенияСвойств(ЭтотОбъект, ДанныеТранспортнойЛогистики);
	
КонецПроцедуры

&После("ПередЗаписью")
Процедура Базар_ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если НЕ Отказ тогда
		Если НЕ ЗначениеЗаполнено(Грузополучатель) тогда
			Грузополучатель = Контрагент;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&Вместо("ЗаполнитьПоСчету")
Процедура Базар_ЗаполнитьПоСчету(ИменаТабличныхЧастей, СписокСчетовНаОплату, ОчишатьСтроки = Истина) Экспорт
	
	Если СписокСчетовНаОплату.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	СкопироватьТабличныеЧастиСчетаНаОплату(ИменаТабличныхЧастей, СписокСчетовНаОплату, ОчишатьСтроки);
	
	МассивИмен = СтрРазделить(ИменаТабличныхЧастей, ", ", Ложь);
	Для Каждого ИмяТабЧасти Из МассивИмен Цикл
		СчетаУчетаВДокументах.ЗаполнитьСтроки(ЭтотОбъект[ИмяТабЧасти], ИмяТабЧасти, ЭтотОбъект, Документы.РеализацияТоваровУслуг);
	КонецЦикла;
	
	Если ГосЗакупкиСервер.ЭтоДоговорПоставкиГосЗакупок(ДоговорКонтрагента) тогда
		
		Для Каждого Счет из СписокСчетовНаОплату цикл
		
			Для Каждого СтрокаТоварыСчета из Счет.Товары цикл
				Отборы = Новый Структура("НомерСтроки, Номенклатура",
				                         СтрокаТоварыСчета.НомерСтроки, СтрокаТоварыСчета.Номенклатура);
				
				НайденыеСтроки = Товары.НайтиСтроки(Отборы);
				Если НайденыеСтроки = Неопределено тогда
					Продолжить;
				Иначе
					НайденаяСтрока = НайденыеСтроки.Получить(0);
				КонецЕсли;
				
				НайденаяСтрока.ЕдиницаИзмеренияГосЗакупок = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(СтрокаТоварыСчета.НоменклатураГосЗакупок, "ЕдиницаИзмеренияГосЗакупок");
				НайденаяСтрока.ЕдиницаИзмерения = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(СтрокаТоварыСчета.Номенклатура, "ЕдиницаИзмерения");
				НайденаяСтрока.НоменклатураГосЗакупок = СтрокаТоварыСчета.НоменклатураГосЗакупок;
				НайденаяСтрока.КоэффициентГосЗакупок = СтрокаТоварыСчета.КоэффициентГосЗакупок;
			КонецЦикла;
			
		КонецЦикла;
		
	КонецЕсли;
	
	ДанныеТранспортнойЛогистики = ТранспортнаяЛогистикаСервер.ДанныеТранспортнойЛогистики(ЭтотОбъект, Неопределено, Счет);
	ЗаполнитьЗначенияСвойств(ЭтотОбъект, ДанныеТранспортнойЛогистики);
	
КонецПроцедуры

Процедура ДвиженияЦеныПродажКонтрагентов(Отказ)
	
	Если НЕ ГосЗакупкиСервер.ЭтоДоговорПоставкиГосЗакупок(ДоговорКонтрагента) тогда
		
		ДвиженияЦеныПродаж = Движения.Базар_ЦеныПродажКонтрагентов;
		
		Запрос = Новый Запрос;
		Запрос.УстановитьПараметр("Ссылка", Ссылка);
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	РеализацияТоваровУслугТовары.Номенклатура КАК Номенклатура,
		|	МАКСИМУМ(РеализацияТоваровУслугТовары.Цена) КАК Цена
		|ИЗ
		|	Документ.РеализацияТоваровУслуг.Товары КАК РеализацияТоваровУслугТовары
		|ГДЕ
		|	РеализацияТоваровУслугТовары.Ссылка = &Ссылка
		|
		|СГРУППИРОВАТЬ ПО
		|	РеализацияТоваровУслугТовары.Номенклатура";
		
		Выборка = Запрос.Выполнить().Выбрать();
		
		Пока Выборка.Следующий() цикл
			
			НовоеДвижкение = ДвиженияЦеныПродаж.Добавить();
			НовоеДвижкение.Период = Дата;
			НовоеДвижкение.Регистратор = Ссылка;
			НовоеДвижкение.Контрагент = Контрагент;
			НовоеДвижкение.Номенклатура = Выборка.Номенклатура;
			НовоеДвижкение.Цена = Выборка.Цена;
			
		КонецЦикла;
		
		ДвиженияЦеныПродаж.Записать();
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ДвиженияТранспортнаяЛогистикаДоставка(Отказ)
	
	Если Отказ тогда
		Возврат;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(СчетНаОплатуПокупателю) ИЛИ
		НЕ ПеревозкаАвтотранспортом тогда
		Возврат;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ТранспортнаяЛогистикаЗаказы.Организация КАК Организация,
	|	ТранспортнаяЛогистикаЗаказы.Маршрут КАК Маршрут,
	|	ТранспортнаяЛогистикаЗаказы.Водитель КАК Водитель,
	|	ТранспортнаяЛогистикаЗаказы.Автомобиль КАК Автомобиль,
	|	ТранспортнаяЛогистикаЗаказы.Рейс КАК Рейс,
	|	ТранспортнаяЛогистикаЗаказы.НомерВРейсе КАК НомерВРейсе,
	|	ТранспортнаяЛогистикаЗаказы.Грузополучатель КАК ТочкаМаршрута,
	|	&СсылкаРеализация КАК ДокументДвижения,
	|	ТранспортнаяЛогистикаЗаказы.АдресПредставление КАК АдресПредставление,
	|	ТранспортнаяЛогистикаЗаказы.ВремяЛогистикиНачало КАК ВремяЛогистикиНачало,
	|	ТранспортнаяЛогистикаЗаказы.ВремяЛогистикиОкончание КАК ВремяЛогистикиОкончание,
	|	ТранспортнаяЛогистикаЗаказы.Пробег КАК Пробег
	|ПОМЕСТИТЬ ТранспортнаяЛогистикаЗаказыРасход
	|ИЗ
	|	РегистрНакопления.ТранспортнаяЛогистикаЗаказы КАК ТранспортнаяЛогистикаЗаказы
	|ГДЕ
	|	ТранспортнаяЛогистикаЗаказы.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|	И ТранспортнаяЛогистикаЗаказы.Период МЕЖДУ НАЧАЛОПЕРИОДА(&Дата, ДЕНЬ) И КОНЕЦПЕРИОДА(&Дата, ДЕНЬ)
	|	И ТранспортнаяЛогистикаЗаказы.ДокументДвижения = &СсылкаСчет
	|
	|СГРУППИРОВАТЬ ПО
	|	ТранспортнаяЛогистикаЗаказы.Организация,
	|	ТранспортнаяЛогистикаЗаказы.Водитель,
	|	ТранспортнаяЛогистикаЗаказы.Грузополучатель,
	|	ТранспортнаяЛогистикаЗаказы.Маршрут,
	|	ТранспортнаяЛогистикаЗаказы.Автомобиль,
	|	ТранспортнаяЛогистикаЗаказы.Рейс,
	|	ТранспортнаяЛогистикаЗаказы.НомерВРейсе,
	|	ТранспортнаяЛогистикаЗаказы.АдресПредставление,
	|	ТранспортнаяЛогистикаЗаказы.ВремяЛогистикиНачало,
	|	ТранспортнаяЛогистикаЗаказы.ВремяЛогистикиОкончание,
	|	ТранспортнаяЛогистикаЗаказы.Пробег
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЕСТЬNULL(ТранспортнаяЛогистикаЗаказыРасход.Организация, РеализацияТоваровУслугТовары.Ссылка.Организация) КАК Организация,
	|	ЕСТЬNULL(ТранспортнаяЛогистикаЗаказыРасход.Маршрут, РеализацияТоваровУслугТовары.Ссылка.Маршрут) КАК Маршрут,
	|	ЕСТЬNULL(ТранспортнаяЛогистикаЗаказыРасход.Водитель, РеализацияТоваровУслугТовары.Ссылка.ВодительСсылка) КАК Водитель,
	|	ЕСТЬNULL(ТранспортнаяЛогистикаЗаказыРасход.Автомобиль, РеализацияТоваровУслугТовары.Ссылка.АвтомобильСсылка) КАК Автомобиль,
	|	ЕСТЬNULL(ТранспортнаяЛогистикаЗаказыРасход.Рейс, 1) КАК Рейс,
	|	ЕСТЬNULL(ТранспортнаяЛогистикаЗаказыРасход.НомерВРейсе, 0) КАК НомерВРейсе,
	|	ЕСТЬNULL(ТранспортнаяЛогистикаЗаказыРасход.ТочкаМаршрута, РеализацияТоваровУслугТовары.Ссылка.Грузополучатель) КАК ТочкаМаршрута,
	|	ЕСТЬNULL(ТранспортнаяЛогистикаЗаказыРасход.ДокументДвижения, РеализацияТоваровУслугТовары.Ссылка) КАК ДокументДвижения,
	|	РеализацияТоваровУслугТовары.Номенклатура КАК Номенклатура,
	|	СУММА(РеализацияТоваровУслугТовары.Количество) КАК Количество,
	|	СУММА(РеализацияТоваровУслугТовары.Номенклатура.ВесЕдиницы * РеализацияТоваровУслугТовары.Количество) КАК Тоннаж,
	|	ЕСТЬNULL(ТранспортнаяЛогистикаЗаказыРасход.АдресПредставление, РеализацияТоваровУслугТовары.Ссылка.АдресДоставки) КАК АдресПредставление,
	|	ЕСТЬNULL(ТранспортнаяЛогистикаЗаказыРасход.ВремяЛогистикиНачало, РеализацияТоваровУслугТовары.Ссылка.ВремяЛогистикиНачало) КАК ВремяЛогистикиНачало,
	|	ЕСТЬNULL(ТранспортнаяЛогистикаЗаказыРасход.ВремяЛогистикиОкончание, РеализацияТоваровУслугТовары.Ссылка.ВремяЛогистикиОкончание) КАК ВремяЛогистикиОкончание,
	|	ЕСТЬNULL(ТранспортнаяЛогистикаЗаказыРасход.Пробег, 0) КАК Пробег
	|ИЗ
	|	Документ.РеализацияТоваровУслуг.Товары КАК РеализацияТоваровУслугТовары
	|		ЛЕВОЕ СОЕДИНЕНИЕ ТранспортнаяЛогистикаЗаказыРасход КАК ТранспортнаяЛогистикаЗаказыРасход
	|		ПО РеализацияТоваровУслугТовары.Ссылка.Ссылка = ТранспортнаяЛогистикаЗаказыРасход.ДокументДвижения
	|ГДЕ
	|	РеализацияТоваровУслугТовары.Ссылка = &СсылкаРеализация
	|
	|СГРУППИРОВАТЬ ПО
	|	ЕСТЬNULL(ТранспортнаяЛогистикаЗаказыРасход.Организация, РеализацияТоваровУслугТовары.Ссылка.Организация),
	|	ЕСТЬNULL(ТранспортнаяЛогистикаЗаказыРасход.Маршрут, РеализацияТоваровУслугТовары.Ссылка.Маршрут),
	|	ЕСТЬNULL(ТранспортнаяЛогистикаЗаказыРасход.Водитель, РеализацияТоваровУслугТовары.Ссылка.ВодительСсылка),
	|	ЕСТЬNULL(ТранспортнаяЛогистикаЗаказыРасход.Автомобиль, РеализацияТоваровУслугТовары.Ссылка.АвтомобильСсылка),
	|	ЕСТЬNULL(ТранспортнаяЛогистикаЗаказыРасход.Рейс, 1),
	|	ЕСТЬNULL(ТранспортнаяЛогистикаЗаказыРасход.НомерВРейсе, 0),
	|	ЕСТЬNULL(ТранспортнаяЛогистикаЗаказыРасход.ТочкаМаршрута, РеализацияТоваровУслугТовары.Ссылка.Грузополучатель),
	|	ЕСТЬNULL(ТранспортнаяЛогистикаЗаказыРасход.ДокументДвижения, РеализацияТоваровУслугТовары.Ссылка),
	|	РеализацияТоваровУслугТовары.Номенклатура,
	|	ЕСТЬNULL(ТранспортнаяЛогистикаЗаказыРасход.АдресПредставление, РеализацияТоваровУслугТовары.Ссылка.АдресДоставки),
	|	ЕСТЬNULL(ТранспортнаяЛогистикаЗаказыРасход.ВремяЛогистикиНачало, РеализацияТоваровУслугТовары.Ссылка.ВремяЛогистикиНачало),
	|	ЕСТЬNULL(ТранспортнаяЛогистикаЗаказыРасход.ВремяЛогистикиОкончание, РеализацияТоваровУслугТовары.Ссылка.ВремяЛогистикиОкончание),
	|	ЕСТЬNULL(ТранспортнаяЛогистикаЗаказыРасход.Пробег, 0)";
	
	Запрос.УстановитьПараметр("СсылкаСчет", СчетНаОплатуПокупателю);
	Запрос.УстановитьПараметр("СсылкаРеализация", Ссылка);
	Запрос.УстановитьПараметр("Дата" , Дата);
	
	Результат = Запрос.Выполнить();
	Если Результат.Пустой() тогда
		Возврат;
	КонецЕсли;
	
	ДвиженияТранспортнаяЛогистикаДоставка = Движения.ТранспортнаяЛогистикаДоставка;
	
	
	Выборка = Результат.Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		НовоеДвижение = ДвиженияТранспортнаяЛогистикаДоставка.Добавить();
		ЗаполнитьЗначенияСвойств(НовоеДвижение, Выборка);
		
		НовоеДвижение.Период = Дата;
		НовоеДвижение.Регистратор = Ссылка;
		НовоеДвижение.ВидДвижения = ВидДвиженияНакопления.Расход;
		
	КонецЦикла;
	
	ДвиженияТранспортнаяЛогистикаДоставка.Записать();
	
КонецПроцедуры

&Перед("ОбработкаПроверкиЗаполнения")
Процедура Базар_ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	ПроверяемыеРеквизиты.Добавить("ДоговорКонтрагента");
	
	Если ГосЗакупкиСервер.ЭтоДоговорПоставкиГосЗакупок(ДоговорКонтрагента) тогда
		ПроверяемыеРеквизиты.Добавить("Товары.ЦенаГосЗакупок");
		ПроверяемыеРеквизиты.Добавить("Товары.КоличествоГосЗакупок");
	Иначе
		ПроверяемыеРеквизиты.Добавить("Товары.Цена");
		ПроверяемыеРеквизиты.Добавить("Товары.Количество");
	КонецЕсли;
	
	ПроверяемыеРеквизиты.Добавить("Товары.Сумма");
	
	Если ПеревозкаАвтотранспортом тогда
		ПроверяемыеРеквизиты.Добавить("АдресДоставки");
		ПроверяемыеРеквизиты.Добавить("ВремяЛогистикиНачало");
		ПроверяемыеРеквизиты.Добавить("ВремяЛогистикиОкончание");
	КонецЕсли;
	
КонецПроцедуры
